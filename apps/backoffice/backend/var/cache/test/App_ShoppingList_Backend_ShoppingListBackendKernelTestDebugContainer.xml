<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services https://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.project_dir">C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend</parameter>
    <parameter key="kernel.environment">test</parameter>
    <parameter key="kernel.runtime_environment">%env(default:kernel.environment:APP_RUNTIME_ENV)%</parameter>
    <parameter key="kernel.runtime_mode">%env(query_string:default:container.runtime_mode:APP_RUNTIME_MODE)%</parameter>
    <parameter key="kernel.runtime_mode.web">%env(bool:default::key:web:default:kernel.runtime_mode:)%</parameter>
    <parameter key="kernel.runtime_mode.cli">%env(not:default:kernel.runtime_mode.web:)%</parameter>
    <parameter key="kernel.runtime_mode.worker">%env(bool:default::key:worker:default:kernel.runtime_mode:)%</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.build_dir">C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend\var\cache\test</parameter>
    <parameter key="kernel.cache_dir">C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend\var\cache\test</parameter>
    <parameter key="kernel.logs_dir">C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend\var\log</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="TacticianBundle">League\Tactician\Bundle\TacticianBundle</parameter>
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="FriendsOfBehatSymfonyExtensionBundle">FriendsOfBehat\SymfonyExtension\Bundle\FriendsOfBehatSymfonyExtensionBundle</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="path">C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\framework-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\FrameworkBundle</parameter>
      </parameter>
      <parameter key="TacticianBundle" type="collection">
        <parameter key="path">C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\league\tactician-bundle\src</parameter>
        <parameter key="namespace">League\Tactician\Bundle</parameter>
      </parameter>
      <parameter key="DoctrineBundle" type="collection">
        <parameter key="path">C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\doctrine\doctrine-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineBundle</parameter>
      </parameter>
      <parameter key="FriendsOfBehatSymfonyExtensionBundle" type="collection">
        <parameter key="path">C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\friends-of-behat\symfony-extension\src\Bundle</parameter>
        <parameter key="namespace">FriendsOfBehat\SymfonyExtension\Bundle</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">App_ShoppingList_Backend_ShoppingListBackendKernelTestDebugContainer</parameter>
    <parameter key=".container.dumper.inline_class_loader">true</parameter>
    <parameter key="event_dispatcher.event_aliases" type="collection">
      <parameter key="Symfony\Component\Console\Event\ConsoleCommandEvent">console.command</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleErrorEvent">console.error</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleSignalEvent">console.signal</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleTerminateEvent">console.terminate</parameter>
      <parameter key="Symfony\Component\Form\Event\PreSubmitEvent">form.pre_submit</parameter>
      <parameter key="Symfony\Component\Form\Event\SubmitEvent">form.submit</parameter>
      <parameter key="Symfony\Component\Form\Event\PostSubmitEvent">form.post_submit</parameter>
      <parameter key="Symfony\Component\Form\Event\PreSetDataEvent">form.pre_set_data</parameter>
      <parameter key="Symfony\Component\Form\Event\PostSetDataEvent">form.post_set_data</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ControllerArgumentsEvent">kernel.controller_arguments</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ControllerEvent">kernel.controller</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ResponseEvent">kernel.response</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\FinishRequestEvent">kernel.finish_request</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\RequestEvent">kernel.request</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ViewEvent">kernel.view</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ExceptionEvent">kernel.exception</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\TerminateEvent">kernel.terminate</parameter>
    </parameter>
    <parameter key="fragment.renderer.hinclude.global_template">null</parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="kernel.http_method_override">false</parameter>
    <parameter key="kernel.trust_x_sendfile_type_header">false</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.default_locale">en</parameter>
    <parameter key="kernel.enabled_locales" type="collection"/>
    <parameter key="kernel.error_controller">error_controller</parameter>
    <parameter key="debug.file_link_format">%env(default::SYMFONY_IDE)%</parameter>
    <parameter key="test.client.parameters" type="collection"/>
    <parameter key="asset.request_context.base_path">null</parameter>
    <parameter key="asset.request_context.secure">null</parameter>
    <parameter key="translator.logging">false</parameter>
    <parameter key="translator.default_path">C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend/translations</parameter>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.container.dump">C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend\var\cache\test/App_ShoppingList_Backend_ShoppingListBackendKernelTestDebugContainer.xml</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">kernel::loadRoutes</parameter>
    <parameter key="router.cache_dir">C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend\var\cache\test</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="serializer.mapping.cache.file">C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend\var\cache\test/serialization.php</parameter>
    <parameter key="cache.prefix.seed">_C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend.App_ShoppingList_Backend_ShoppingListBackendKernelTestDebugContainer</parameter>
    <parameter key="form.type_extension.csrf.enabled">false</parameter>
    <parameter key="validator.mapping.cache.file">C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend\var\cache\test/validation.php</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="data_collector.templates" type="collection"/>
    <parameter key="console.command.ids" type="collection">
      <parameter>console.command.public_alias.tactician.command.debug</parameter>
    </parameter>
  </parameters>
  <services>
    <service id="service_container" class="Symfony\Component\DependencyInjection\ContainerInterface" public="true" synthetic="true"/>
    <service id="kernel" class="App\ShoppingList\Backend\ShoppingListBackendKernel" public="true" synthetic="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="routing.route_loader"/>
    </service>
    <service id="Eurega\Shared\Infrastructure\Bus\Command\Tactician\TacticianCommandBusRead" class="Eurega\Shared\Infrastructure\Bus\Command\Tactician\TacticianCommandBusRead" autowire="true" autoconfigure="true">
      <argument type="service" id="tactician.commandbus.default"/>
    </service>
    <service id="Eurega\Shared\Infrastructure\Bus\Command\Tactician\TacticianCommandBusWrite" class="Eurega\Shared\Infrastructure\Bus\Command\Tactician\TacticianCommandBusWrite" autowire="true" autoconfigure="true">
      <argument type="service" id="tactician.commandbus.default"/>
    </service>
    <service id="Eurega\ShoppingList\Application\Query\Usuario\SearchUsuarioParticularByCriteriaQuery" class="Eurega\ShoppingList\Application\Query\Usuario\SearchUsuarioParticularByCriteriaQuery" abstract="true">
      <tag name="container.excluded" source="in &quot;services/shared.yaml&quot;"/>
    </service>
    <service id="Eurega\ShoppingList\Application\Query\Usuario\SearchUsuarioParticularByCriteriaQueryHandler" class="Eurega\ShoppingList\Application\Query\Usuario\SearchUsuarioParticularByCriteriaQueryHandler" autowire="true" autoconfigure="true">
      <tag name="tactician.handler" typehints="1"/>
      <argument type="service" id="Eurega\ShoppingList\Application\Service\Usuario\UsuarioParticularByCriteriaSearcher"/>
    </service>
    <service id="Eurega\ShoppingList\Application\Command\Usuario\CrearUsuarioParticularCommand" class="Eurega\ShoppingList\Application\Command\Usuario\CrearUsuarioParticularCommand" abstract="true">
      <tag name="container.excluded" source="in &quot;services/shared.yaml&quot;"/>
    </service>
    <service id="Eurega\ShoppingList\Application\Command\Usuario\CrearUsuarioParticularCommandHandler" class="Eurega\ShoppingList\Application\Command\Usuario\CrearUsuarioParticularCommandHandler" autowire="true" autoconfigure="true">
      <tag name="tactician.handler" typehints="1"/>
      <argument type="service" id="Eurega\ShoppingList\Application\Service\Usuario\UsuarioParticularCreator"/>
    </service>
    <service id="Eurega\ShoppingList\Application\Service\Usuario\UsuarioParticularByCriteriaSearcher" class="Eurega\ShoppingList\Application\Service\Usuario\UsuarioParticularByCriteriaSearcher" autowire="true" autoconfigure="true">
      <argument type="service" id="Tests\Shared\Infrastructure\Repository\UsuarioParticularReadRepository"/>
    </service>
    <service id="Eurega\ShoppingList\Application\Service\Usuario\UsuarioParticularCreator" class="Eurega\ShoppingList\Application\Service\Usuario\UsuarioParticularCreator" autowire="true" autoconfigure="true">
      <argument type="service" id="Tests\Shared\Infrastructure\Repository\MysqlUsuarioParticularWriteRepository"/>
      <argument type="service" id="Tests\Shared\Infrastructure\Repository\UsuarioParticularReadRepository"/>
      <argument type="service" id="Eurega\Shared\Infrastructure\Bus\Event\InMemory\InMemorySymfonyEventBus"/>
    </service>
    <service id="Eurega\ShoppingList\Application\Service\Usuario\UsuarioParticularFinder" class="Eurega\ShoppingList\Application\Service\Usuario\UsuarioParticularFinder" autowire="true" autoconfigure="true">
      <argument type="service" id="Tests\Shared\Infrastructure\Repository\UsuarioParticularReadRepository"/>
    </service>
    <service id="Eurega\Shared\Infrastructure\Bus\CallableFirstParameterExtractor" class="Eurega\Shared\Infrastructure\Bus\CallableFirstParameterExtractor" autowire="true" autoconfigure="true"/>
    <service id="Eurega\Shared\Infrastructure\Bus\Command\CommandNotRegisteredError" class="Eurega\Shared\Infrastructure\Bus\Command\CommandNotRegisteredError" autowire="true" autoconfigure="true">
      <tag name="container.error" message="Cannot autowire service &quot;Eurega\Shared\Infrastructure\Bus\Command\CommandNotRegisteredError&quot;: argument &quot;$command&quot; of method &quot;__construct()&quot; references interface &quot;Eurega\Shared\Domain\Bus\Command\Command&quot; but no such service exists. Did you create a class that implements this interface?"/>
    </service>
    <service id="Eurega\Shared\Infrastructure\Bus\Command\Symfony\SymfonyCommandBus" class="Eurega\Shared\Infrastructure\Bus\Command\Symfony\SymfonyCommandBus" autowire="true" autoconfigure="true"/>
    <service id="Eurega\Shared\Infrastructure\Bus\Event\DomainEventMapping" class="Eurega\Shared\Infrastructure\Bus\Event\DomainEventMapping" autowire="true" autoconfigure="true">
      <tag name="container.error" message="Cannot autowire service &quot;Eurega\Shared\Infrastructure\Bus\Event\DomainEventMapping&quot;: argument &quot;$mapping&quot; of method &quot;__construct()&quot; is type-hinted &quot;iterable&quot;, you should configure its value explicitly."/>
    </service>
    <service id="Eurega\Shared\Infrastructure\Bus\Event\DomainEventSubscriberLocator" class="Eurega\Shared\Infrastructure\Bus\Event\DomainEventSubscriberLocator" autowire="true" autoconfigure="true">
      <tag name="container.error" message="Cannot autowire service &quot;Eurega\Shared\Infrastructure\Bus\Event\DomainEventSubscriberLocator&quot;: argument &quot;$mapping&quot; of method &quot;__construct()&quot; references interface &quot;Traversable&quot; but no such service exists. You should maybe alias this interface to one of these existing services: &quot;test.private_services_locator&quot;, &quot;messenger.receiver_locator&quot;, &quot;messenger.retry_strategy_locator&quot;, &quot;behat.mink.parameters&quot;, &quot;tactician.commandbus.default.handler.service_locator&quot;."/>
    </service>
    <service id="Eurega\Shared\Infrastructure\Bus\Event\InMemory\InMemorySymfonyEventBus" class="Eurega\Shared\Infrastructure\Bus\Event\InMemory\InMemorySymfonyEventBus" autowire="true" autoconfigure="true"/>
    <service id="Eurega\Shared\Infrastructure\Bus\Query\InMemory\InMemorySymfonyQueryBus" class="Eurega\Shared\Infrastructure\Bus\Query\InMemory\InMemorySymfonyQueryBus" autowire="true" autoconfigure="true"/>
    <service id="Eurega\Shared\Infrastructure\Bus\Query\QueryNotRegisteredError" class="Eurega\Shared\Infrastructure\Bus\Query\QueryNotRegisteredError" autowire="true" autoconfigure="true">
      <tag name="container.error" message="Cannot autowire service &quot;Eurega\Shared\Infrastructure\Bus\Query\QueryNotRegisteredError&quot;: argument &quot;$query&quot; of method &quot;__construct()&quot; references interface &quot;Eurega\Shared\Domain\Bus\Query\Query&quot; but no such service exists. Did you create a class that implements this interface?"/>
    </service>
    <service id="Eurega\Shared\Infrastructure\CodelyTvConstraintIsSimilar" class="Eurega\Shared\Infrastructure\CodelyTvConstraintIsSimilar" autowire="true" autoconfigure="true">
      <tag name="container.error" message="Cannot autowire service &quot;Eurega\Shared\Infrastructure\CodelyTvConstraintIsSimilar&quot;: argument &quot;$value&quot; of method &quot;__construct()&quot; is type-hinted &quot;mixed&quot;, you should configure its value explicitly."/>
    </service>
    <service id="Eurega\Shared\Infrastructure\Doctrine\DatabaseConnections" class="Eurega\Shared\Infrastructure\Doctrine\DatabaseConnections" autowire="true" autoconfigure="true">
      <tag name="container.error" message="Cannot autowire service &quot;Eurega\Shared\Infrastructure\Doctrine\DatabaseConnections&quot;: argument &quot;$connections&quot; of method &quot;__construct()&quot; is type-hinted &quot;iterable&quot;, you should configure its value explicitly."/>
    </service>
    <service id="Eurega\Shared\Infrastructure\Doctrine\Dbal\DbalCustomTypesRegistrar" class="Eurega\Shared\Infrastructure\Doctrine\Dbal\DbalCustomTypesRegistrar" autowire="true" autoconfigure="true"/>
    <service id="Eurega\Shared\Infrastructure\Doctrine\DoctrineCriteriaConverter" class="Eurega\Shared\Infrastructure\Doctrine\DoctrineCriteriaConverter" autowire="true" autoconfigure="true">
      <tag name="container.error" message="Cannot autowire service &quot;Eurega\Shared\Infrastructure\Doctrine\DoctrineCriteriaConverter&quot;: argument &quot;$criteria&quot; of method &quot;__construct()&quot; references class &quot;Eurega\Shared\Domain\Criteria\Criteria&quot; but no such service exists."/>
    </service>
    <service id="Eurega\Shared\Infrastructure\Doctrine\DoctrineEntityManagerFactory" class="Eurega\Shared\Infrastructure\Doctrine\DoctrineEntityManagerFactory" autowire="true" autoconfigure="true"/>
    <service id="Eurega\Shared\Infrastructure\PhpRandomNumberGenerator" class="Eurega\Shared\Infrastructure\PhpRandomNumberGenerator" autowire="true" autoconfigure="true"/>
    <service id="Eurega\Shared\Infrastructure\PhpUnit\CodelyTvMatcherIsSimilar" class="Eurega\Shared\Infrastructure\PhpUnit\CodelyTvMatcherIsSimilar" autowire="true" autoconfigure="true">
      <tag name="container.error" message="Cannot autowire service &quot;Eurega\Shared\Infrastructure\PhpUnit\CodelyTvMatcherIsSimilar&quot;: argument &quot;$value&quot; of method &quot;__construct()&quot; is type-hinted &quot;mixed&quot;, you should configure its value explicitly."/>
    </service>
    <service id="Eurega\Shared\Infrastructure\PhpUnit\CrearUsuarioParticularCommandMother" class="Eurega\Shared\Infrastructure\PhpUnit\CrearUsuarioParticularCommandMother" autowire="true" autoconfigure="true"/>
    <service id="Eurega\Shared\Infrastructure\PhpUnit\MoocEnvironmentArranger" class="Eurega\Shared\Infrastructure\PhpUnit\MoocEnvironmentArranger" autowire="true" autoconfigure="true">
      <tag name="container.error" message="Cannot autowire service &quot;Eurega\Shared\Infrastructure\PhpUnit\MoocEnvironmentArranger&quot;: argument &quot;$entityManager&quot; of method &quot;__construct()&quot; references class &quot;Doctrine\ORM\EntityManager&quot; but no such service exists."/>
    </service>
    <service id="Eurega\Shared\Infrastructure\PhpUnit\MotherCreator" class="Eurega\Shared\Infrastructure\PhpUnit\MotherCreator" autowire="true" autoconfigure="true"/>
    <service id="Eurega\Shared\Infrastructure\PhpUnit\MySqlDatabaseCleaner" class="Eurega\Shared\Infrastructure\PhpUnit\MySqlDatabaseCleaner" autowire="true" autoconfigure="true"/>
    <service id="Eurega\Shared\Infrastructure\PhpUnit\RandomElementPicker" class="Eurega\Shared\Infrastructure\PhpUnit\RandomElementPicker" autowire="true" autoconfigure="true"/>
    <service id="Eurega\Shared\Infrastructure\PhpUnit\ShoppingListBackendKernel" class="Eurega\Shared\Infrastructure\PhpUnit\ShoppingListBackendKernel" autowire="true" autoconfigure="true">
      <tag name="container.error" message="Cannot autowire service &quot;Eurega\Shared\Infrastructure\PhpUnit\ShoppingListBackendKernel&quot;: argument &quot;$environment&quot; of method &quot;Symfony\Component\HttpKernel\Kernel::__construct()&quot; is type-hinted &quot;string&quot;, you should configure its value explicitly."/>
    </service>
    <service id="Eurega\Shared\Infrastructure\PhpUnit\TestUtils" class="Eurega\Shared\Infrastructure\PhpUnit\TestUtils" autowire="true" autoconfigure="true"/>
    <service id="Eurega\Shared\Infrastructure\PhpUnit\UsuarioParticularCreatedDomainEventMother" class="Eurega\Shared\Infrastructure\PhpUnit\UsuarioParticularCreatedDomainEventMother" autowire="true" autoconfigure="true"/>
    <service id="Eurega\Shared\Infrastructure\PhpUnit\UsuarioParticularMother" class="Eurega\Shared\Infrastructure\PhpUnit\UsuarioParticularMother" autowire="true" autoconfigure="true"/>
    <service id="Eurega\Shared\Infrastructure\PhpUnit\UuidMother" class="Eurega\Shared\Infrastructure\PhpUnit\UuidMother" autowire="true" autoconfigure="true"/>
    <service id="Eurega\Shared\Infrastructure\PhpUnit\WordMother" class="Eurega\Shared\Infrastructure\PhpUnit\WordMother" autowire="true" autoconfigure="true"/>
    <service id="Eurega\Shared\Infrastructure\RamseyUuidGenerator" class="Eurega\Shared\Infrastructure\RamseyUuidGenerator" autowire="true" autoconfigure="true"/>
    <service id="Eurega\Shared\Infrastructure\ValueObject\Common\EmailAddressType" class="Eurega\Shared\Infrastructure\ValueObject\Common\EmailAddressType" autowire="true" autoconfigure="true"/>
    <service id="Eurega\Shared\Infrastructure\ValueObject\Common\IdType" class="Eurega\Shared\Infrastructure\ValueObject\Common\IdType" autowire="true" autoconfigure="true"/>
    <service id="Eurega\Shared\Infrastructure\ValueObject\Common\NombreType" class="Eurega\Shared\Infrastructure\ValueObject\Common\NombreType" autowire="true" autoconfigure="true"/>
    <service id="Eurega\Shared\Infrastructure\ValueObject\Security\PasswordHashType" class="Eurega\Shared\Infrastructure\ValueObject\Security\PasswordHashType" autowire="true" autoconfigure="true"/>
    <service id="Eurega\ShoppingList\Infrastructure\Persistence\Doctrine\Mapping" class="Eurega\ShoppingList\Infrastructure\Persistence\Doctrine\Mapping" abstract="true">
      <tag name="container.excluded" source="in &quot;config/services.yaml&quot;"/>
    </service>
    <service id="Eurega\ShoppingList\Infrastructure\Persistence\Doctrine\Migrations" class="Eurega\ShoppingList\Infrastructure\Persistence\Doctrine\Migrations" abstract="true">
      <tag name="container.excluded" source="in &quot;config/services.yaml&quot;"/>
    </service>
    <service id="Eurega\ShoppingList\Infrastructure\Persistence\Doctrine\QueryBuilder\UsuarioParticularQueryBuilder" class="Eurega\ShoppingList\Infrastructure\Persistence\Doctrine\QueryBuilder\UsuarioParticularQueryBuilder" autowire="true" autoconfigure="true">
      <tag name="container.error" message="Cannot autowire service &quot;Eurega\ShoppingList\Infrastructure\Persistence\Doctrine\QueryBuilder\UsuarioParticularQueryBuilder&quot;: argument &quot;$entityManager&quot; of method &quot;__construct()&quot; references interface &quot;Doctrine\ORM\EntityManagerInterface&quot; but no such service exists. Did you create a class that implements this interface?"/>
    </service>
    <service id="Eurega\ShoppingList\Infrastructure\Persistence\Doctrine\Repository\Usuario\MysqlUsuarioParticularWriteRepository" class="Eurega\ShoppingList\Infrastructure\Persistence\Doctrine\Repository\Usuario\MysqlUsuarioParticularWriteRepository" autowire="true" autoconfigure="true">
      <tag name="container.error" message="Cannot autowire service &quot;Eurega\ShoppingList\Infrastructure\Persistence\Doctrine\Repository\Usuario\MysqlUsuarioParticularWriteRepository&quot;: argument &quot;$em&quot; of method &quot;__construct()&quot; references interface &quot;Doctrine\ORM\EntityManagerInterface&quot; but no such service exists. Did you create a class that implements this interface?"/>
    </service>
    <service id="Eurega\ShoppingList\Infrastructure\Persistence\Doctrine\Repository\Usuario\UsuarioAdministradorReadRepository" class="Eurega\ShoppingList\Infrastructure\Persistence\Doctrine\Repository\Usuario\UsuarioAdministradorReadRepository" autowire="true" autoconfigure="true">
      <tag name="container.error" message="Cannot autowire service &quot;Eurega\ShoppingList\Infrastructure\Persistence\Doctrine\Repository\Usuario\UsuarioAdministradorReadRepository&quot;: argument &quot;$entityManager&quot; of method &quot;__construct()&quot; references interface &quot;Doctrine\ORM\EntityManagerInterface&quot; but no such service exists. Did you create a class that implements this interface?"/>
    </service>
    <service id="Eurega\ShoppingList\Infrastructure\Persistence\Doctrine\Repository\Usuario\UsuarioAdministradorWriteRepository" class="Eurega\ShoppingList\Infrastructure\Persistence\Doctrine\Repository\Usuario\UsuarioAdministradorWriteRepository" autowire="true" autoconfigure="true">
      <tag name="container.error" message="Cannot autowire service &quot;Eurega\ShoppingList\Infrastructure\Persistence\Doctrine\Repository\Usuario\UsuarioAdministradorWriteRepository&quot;: argument &quot;$em&quot; of method &quot;__construct()&quot; references interface &quot;Doctrine\ORM\EntityManagerInterface&quot; but no such service exists. Did you create a class that implements this interface?"/>
    </service>
    <service id="Eurega\ShoppingList\Infrastructure\Persistence\Doctrine\Repository\Usuario\UsuarioParticularReadRepository" class="Eurega\ShoppingList\Infrastructure\Persistence\Doctrine\Repository\Usuario\UsuarioParticularReadRepository" autowire="true" autoconfigure="true">
      <tag name="container.error" message="Cannot autowire service &quot;Eurega\ShoppingList\Infrastructure\Persistence\Doctrine\Repository\Usuario\UsuarioParticularReadRepository&quot;: argument &quot;$entityManager&quot; of method &quot;__construct()&quot; references interface &quot;Doctrine\ORM\EntityManagerInterface&quot; but no such service exists. Did you create a class that implements this interface?"/>
    </service>
    <service id="Tests\Shared\Domain\Criteria\CriteriaMother" class="Tests\Shared\Domain\Criteria\CriteriaMother" autowire="true" autoconfigure="true"/>
    <service id="Tests\Shared\Domain\Criteria\FilterFieldMother" class="Tests\Shared\Domain\Criteria\FilterFieldMother" autowire="true" autoconfigure="true"/>
    <service id="Tests\Shared\Domain\Criteria\FilterMother" class="Tests\Shared\Domain\Criteria\FilterMother" autowire="true" autoconfigure="true"/>
    <service id="Tests\Shared\Domain\Criteria\FilterValueMother" class="Tests\Shared\Domain\Criteria\FilterValueMother" autowire="true" autoconfigure="true"/>
    <service id="Tests\Shared\Domain\Criteria\FiltersMother" class="Tests\Shared\Domain\Criteria\FiltersMother" autowire="true" autoconfigure="true"/>
    <service id="Tests\Shared\Domain\Criteria\OrderByMother" class="Tests\Shared\Domain\Criteria\OrderByMother" autowire="true" autoconfigure="true"/>
    <service id="Tests\Shared\Domain\Criteria\OrderMother" class="Tests\Shared\Domain\Criteria\OrderMother" autowire="true" autoconfigure="true"/>
    <service id="Tests\Shared\Infrastructure\Behat\ApiContext" class="Tests\Shared\Infrastructure\Behat\ApiContext" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="behat.mink.default_session"/>
    </service>
    <service id="Tests\Shared\Infrastructure\ConstantRandomNumberGenerator" class="Tests\Shared\Infrastructure\ConstantRandomNumberGenerator" autowire="true" autoconfigure="true"/>
    <service id="Tests\Shared\Infrastructure\Mink\MinkHelper" class="Tests\Shared\Infrastructure\Mink\MinkHelper" autowire="true" autoconfigure="true">
      <argument type="service" id="behat.mink.default_session"/>
    </service>
    <service id="Tests\Shared\Infrastructure\Mink\MinkSessionRequestHelper" class="Tests\Shared\Infrastructure\Mink\MinkSessionRequestHelper" autowire="true" autoconfigure="true">
      <argument type="service" id="Tests\Shared\Infrastructure\Mink\MinkHelper"/>
    </service>
    <service id="Tests\Shared\Infrastructure\PhpRandomNumberGeneratorTest" class="Tests\Shared\Infrastructure\PhpRandomNumberGeneratorTest" autowire="true" autoconfigure="true">
      <tag name="container.error" message="Cannot autowire service &quot;Tests\Shared\Infrastructure\PhpRandomNumberGeneratorTest&quot;: argument &quot;$name&quot; of method &quot;PHPUnit\Framework\TestCase::__construct()&quot; is type-hinted &quot;string&quot;, you should configure its value explicitly."/>
    </service>
    <service id="Tests\Shared\Infrastructure\PhpUnit\Comparator\AggregateRootArraySimilarComparator" class="Tests\Shared\Infrastructure\PhpUnit\Comparator\AggregateRootArraySimilarComparator" autowire="true" autoconfigure="true"/>
    <service id="Tests\Shared\Infrastructure\PhpUnit\Comparator\AggregateRootSimilarComparator" class="Tests\Shared\Infrastructure\PhpUnit\Comparator\AggregateRootSimilarComparator" autowire="true" autoconfigure="true"/>
    <service id="Tests\Shared\Infrastructure\PhpUnit\Comparator\DateTimeSimilarComparator" class="Tests\Shared\Infrastructure\PhpUnit\Comparator\DateTimeSimilarComparator" autowire="true" autoconfigure="true"/>
    <service id="Tests\Shared\Infrastructure\PhpUnit\Comparator\DateTimeStringSimilarComparator" class="Tests\Shared\Infrastructure\PhpUnit\Comparator\DateTimeStringSimilarComparator" autowire="true" autoconfigure="true"/>
    <service id="Tests\Shared\Infrastructure\PhpUnit\Comparator\DomainEventArraySimilarComparator" class="Tests\Shared\Infrastructure\PhpUnit\Comparator\DomainEventArraySimilarComparator" autowire="true" autoconfigure="true"/>
    <service id="Tests\Shared\Infrastructure\PhpUnit\Comparator\DomainEventSimilarComparator" class="Tests\Shared\Infrastructure\PhpUnit\Comparator\DomainEventSimilarComparator" autowire="true" autoconfigure="true"/>
    <service id="Tests\Shared\Infrastructure\Repository\MysqlUsuarioParticularWriteRepository" class="Tests\Shared\Infrastructure\Repository\MysqlUsuarioParticularWriteRepository" autowire="true" autoconfigure="true"/>
    <service id="Tests\Shared\Infrastructure\Repository\UsuarioParticularReadRepository" class="Tests\Shared\Infrastructure\Repository\UsuarioParticularReadRepository" autowire="true" autoconfigure="true"/>
    <service id="App\ShoppingList\Backend\Controller\HealthCheckGetController" class="App\ShoppingList\Backend\Controller\HealthCheckGetController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="App\ShoppingList\Backend\Test\ConstantRandomNumberGenerator"/>
    </service>
    <service id="App\ShoppingList\Backend\Controller\Usuario\UsuarioParticularGetController" class="App\ShoppingList\Backend\Controller\Usuario\UsuarioParticularGetController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="Eurega\Shared\Infrastructure\Bus\Command\Tactician\TacticianCommandBusRead"/>
    </service>
    <service id="App\ShoppingList\Backend\Controller\Usuario\UsuarioParticularPostController" class="App\ShoppingList\Backend\Controller\Usuario\UsuarioParticularPostController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="Eurega\Shared\Infrastructure\Bus\Command\Tactician\TacticianCommandBusWrite"/>
    </service>
    <service id="App\ShoppingList\Backend\Controller\Usuario\UsuarioParticularPutController" class="App\ShoppingList\Backend\Controller\Usuario\UsuarioParticularPutController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="Eurega\Shared\Infrastructure\Bus\Command\Tactician\TacticianCommandBusWrite"/>
    </service>
    <service id="App\ShoppingList\Backend\ShoppingListBackendKernel" class="App\ShoppingList\Backend\ShoppingListBackendKernel" autowire="true" autoconfigure="true">
      <tag name="container.error" message="Cannot autowire service &quot;App\ShoppingList\Backend\ShoppingListBackendKernel&quot;: argument &quot;$environment&quot; of method &quot;Symfony\Component\HttpKernel\Kernel::__construct()&quot; is type-hinted &quot;string&quot;, you should configure its value explicitly."/>
    </service>
    <service id="App\ShoppingList\Backend\Test\Behat\ApiContext" class="App\ShoppingList\Backend\Test\Behat\ApiContext" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="behat.mink.default_session"/>
    </service>
    <service id="App\ShoppingList\Backend\Test\ConstantRandomNumberGenerator" class="App\ShoppingList\Backend\Test\ConstantRandomNumberGenerator" autowire="true" autoconfigure="true"/>
    <service id="App\ShoppingList\Backend\Test\Mink\MinkHelper" class="App\ShoppingList\Backend\Test\Mink\MinkHelper" autowire="true" autoconfigure="true">
      <argument type="service" id="behat.mink.default_session"/>
    </service>
    <service id="App\ShoppingList\Backend\Test\Mink\MinkSessionRequestHelper" class="App\ShoppingList\Backend\Test\Mink\MinkSessionRequestHelper" autowire="true" autoconfigure="true">
      <argument type="service" id="App\ShoppingList\Backend\Test\Mink\MinkHelper"/>
    </service>
    <service id="App\ShoppingList\Backend\Test\PhpRandomNumberGeneratorTest" class="App\ShoppingList\Backend\Test\PhpRandomNumberGeneratorTest" autowire="true" autoconfigure="true">
      <tag name="container.error" message="Cannot autowire service &quot;App\ShoppingList\Backend\Test\PhpRandomNumberGeneratorTest&quot;: argument &quot;$name&quot; of method &quot;PHPUnit\Framework\TestCase::__construct()&quot; is type-hinted &quot;string&quot;, you should configure its value explicitly."/>
    </service>
    <service id="argument_metadata_factory" class="Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory"/>
    <service id="argument_resolver.backed_enum_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\BackedEnumValueResolver">
      <tag priority="100" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\BackedEnumValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.datetime" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DateTimeValueResolver">
      <tag priority="100" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DateTimeValueResolver">controller.argument_value_resolver</tag>
      <argument type="service" id="clock" on-invalid="null"/>
    </service>
    <service id="argument_resolver.request_payload" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestPayloadValueResolver" lazy="true">
      <tag name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestPayloadValueResolver">controller.targeted_value_resolver</tag>
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="validator" on-invalid="null"/>
      <argument type="service" id="translator.default" on-invalid="null"/>
    </service>
    <service id="argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver">
      <tag priority="100" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver">
      <tag priority="50" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver">
      <tag priority="50" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver">
      <tag priority="-50" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver">controller.argument_value_resolver</tag>
      <argument type="service" id=".service_locator.Sr6W89v"/>
    </service>
    <service id="argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver">
      <tag priority="-100" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver">
      <tag priority="-150" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.query_parameter_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\QueryParameterValueResolver">
      <tag name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\QueryParameterValueResolver">controller.targeted_value_resolver</tag>
    </service>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>UTF-8</argument>
      <argument>false</argument>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="request_stack"/>
      <argument>en</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
      <argument>false</argument>
      <argument type="collection"/>
    </service>
    <service id="validate_request_listener" class="Symfony\Component\HttpKernel\EventListener\ValidateRequestListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="disallow_search_engine_index_response_listener" class="Symfony\Component\HttpKernel\EventListener\DisallowRobotsIndexingListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="error_controller" class="Symfony\Component\HttpKernel\Controller\ErrorController" public="true">
      <argument type="service" id="http_kernel"/>
      <argument>error_controller</argument>
      <argument type="service" id="error_handler.error_renderer.serializer"/>
    </service>
    <service id="exception_listener" class="Symfony\Component\HttpKernel\EventListener\ErrorListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument>error_controller</argument>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument>true</argument>
      <argument type="collection"/>
    </service>
    <service id="controller.cache_attribute_listener" class="Symfony\Component\HttpKernel\EventListener\CacheAttributeListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="parameter_bag" class="Symfony\Component\DependencyInjection\ParameterBag\ContainerBag">
      <argument type="service" id="service_container"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel" public="true">
      <tag name="container.hot_path"/>
      <tag name="container.preload" class="Symfony\Component\Runtime\Runner\Symfony\HttpKernelRunner"/>
      <tag name="container.preload" class="Symfony\Component\Runtime\Runner\Symfony\ResponseRunner"/>
      <tag name="container.preload" class="Symfony\Component\Runtime\SymfonyRuntime"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.argument_resolver"/>
      <argument>true</argument>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack" public="true"/>
    <service id="http_cache" class="Symfony\Bundle\FrameworkBundle\HttpCache\HttpCache">
      <tag name="container.hot_path"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="http_cache.store"/>
      <argument>null</argument>
      <argument type="collection">
        <argument key="debug">true</argument>
      </argument>
    </service>
    <service id="http_cache.store" class="Symfony\Component\HttpKernel\HttpCache\Store">
      <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend\var\cache\test/http_cache</argument>
    </service>
    <service id="url_helper" class="Symfony\Component\HttpFoundation\UrlHelper">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.default" on-invalid="ignore"/>
    </service>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate" public="true">
      <tag name="container.no_preload"/>
      <argument type="tagged_iterator" tag="kernel.cache_warmer"/>
      <argument>true</argument>
      <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend\var\cache\test/App_ShoppingList_Backend_ShoppingListBackendKernelTestDebugContainerDeprecations.log</argument>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer">
      <argument type="tagged_iterator" tag="kernel.cache_clearer"/>
    </service>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator">
      <argument type="service" id="kernel"/>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpFoundation\UriSigner">
      <tag name="container.error" message="You have requested a non-existent parameter &quot;kernel.secret&quot;. Did you mean this: &quot;kernel.charset&quot;?"/>
      <argument>null</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory">
      <argument type="tagged_iterator" tag="config_cache.resource_checker"/>
    </service>
    <service id="dependency_injection.config.container_parameters_resource_checker" class="Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker">
      <tag name="config_cache.resource_checker" priority="-980"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="config.resource.self_checking_resource_checker" class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker">
      <tag name="config_cache.resource_checker" priority="-990"/>
    </service>
    <service id="services_resetter" class="Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter" public="true">
      <argument type="iterator">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.asset_mapper" type="service" id="cache.asset_mapper" on-invalid="ignore_uninitialized"/>
        <argument key="cache.messenger.restart_workers_signal" type="service" id="cache.messenger.restart_workers_signal" on-invalid="ignore_uninitialized"/>
        <argument key="http_client.transport" type="service" id="http_client.transport" on-invalid="ignore_uninitialized"/>
        <argument key="mailer.message_logger_listener" type="service" id="mailer.message_logger_listener" on-invalid="ignore_uninitialized"/>
        <argument key="translation.locale_switcher" type="service" id="translation.locale_switcher" on-invalid="ignore_uninitialized"/>
        <argument key="debug.stopwatch" type="service" id="debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="debug.event_dispatcher" type="service" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="debug.log_processor" type="service" id="debug.log_processor" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory.cached" type="service" id="form.choice_list_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator_expression_language" type="service" id="cache.validator_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.transport.in_memory.factory" type="service" id="messenger.transport.in_memory.factory" on-invalid="ignore_uninitialized"/>
      </argument>
      <argument type="collection">
        <argument key="cache.app" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.system" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.validator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.serializer" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.property_info" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.asset_mapper" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.messenger.restart_workers_signal" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="http_client.transport" type="collection">
          <argument>?reset</argument>
        </argument>
        <argument key="mailer.message_logger_listener" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="translation.locale_switcher" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.stopwatch" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.event_dispatcher" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.log_processor" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="form.choice_list_factory.cached" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.validator_expression_language" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="messenger.transport.in_memory.factory" type="collection">
          <argument>reset</argument>
        </argument>
      </argument>
    </service>
    <service id="reverse_container" class="Symfony\Component\DependencyInjection\ReverseContainer">
      <argument type="service" id="service_container"/>
      <argument type="service" id=".service_locator.NLcq8cs"/>
    </service>
    <service id="locale_aware_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleAwareListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="iterator">
        <argument type="service" id="slugger"/>
        <argument type="service" id="translator.default"/>
        <argument type="service" id="translation.locale_switcher"/>
      </argument>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="container.env_var_processor" class="Symfony\Component\DependencyInjection\EnvVarProcessor">
      <tag name="container.env_var_processor"/>
      <argument type="service" id="service_container"/>
      <argument type="tagged_iterator" tag="container.env_var_loader"/>
    </service>
    <service id="slugger" class="Symfony\Component\String\Slugger\AsciiSlugger">
      <tag name="kernel.locale_aware"/>
      <argument>en</argument>
    </service>
    <service id="container.getenv" class="Closure">
      <tag name="routing.expression_language_function" function="env"/>
      <argument type="collection">
        <argument type="service" id="service_container"/>
        <argument>getEnv</argument>
      </argument>
      <factory class="Closure" method="fromCallable"/>
    </service>
    <service id="container.get_routing_condition_service" class="Closure" public="true">
      <tag name="routing.expression_language_function" function="service"/>
      <argument type="collection">
        <argument type="service" id="messenger.retry_strategy_locator"/>
        <argument>get</argument>
      </argument>
      <factory class="Closure" method="fromCallable"/>
    </service>
    <service id="container.env" class="Symfony\Component\String\LazyString" constructor="fromCallable" abstract="true">
      <argument type="service" id="container.getenv"/>
    </service>
    <service id="config_builder.warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ConfigBuilderCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="logger" on-invalid="null"/>
    </service>
    <service id="clock" class="Symfony\Component\Clock\Clock"/>
    <service id="Symfony\Component\Config\Loader\LoaderInterface" class="Symfony\Component\Config\Loader\LoaderInterface" abstract="true">
      <tag name="container.excluded"/>
    </service>
    <service id="Symfony\Component\HttpFoundation\Request" class="Symfony\Component\HttpFoundation\Request" abstract="true">
      <tag name="container.excluded"/>
    </service>
    <service id="Symfony\Component\HttpFoundation\Response" class="Symfony\Component\HttpFoundation\Response" abstract="true">
      <tag name="container.excluded"/>
    </service>
    <service id="Symfony\Component\HttpFoundation\Session\SessionInterface" class="Symfony\Component\HttpFoundation\Session\SessionInterface" abstract="true">
      <tag name="container.excluded"/>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler">
      <argument type="service" id=".service_locator.va_rxC4"/>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
    </service>
    <service id="fragment.uri_generator" class="Symfony\Component\HttpKernel\Fragment\FragmentUriGenerator">
      <argument>/_fragment</argument>
      <argument type="service" id="uri_signer"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="error_handler.error_renderer.html" class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer">
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <argument>true</argument>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
        </service>
      </argument>
      <argument>UTF-8</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend</argument>
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="getAndCleanOutputBuffer"/>
        </service>
      </argument>
      <argument type="service" id="logger" on-invalid="null"/>
    </service>
    <service id="process.messenger.process_message_handler" class="Symfony\Component\Process\Messenger\RunProcessMessageHandler">
      <tag name="messenger.message_handler"/>
    </service>
    <service id="console.error_listener" class="Symfony\Component\Console\EventListener\ErrorListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="console"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="logger" on-invalid="null"/>
    </service>
    <service id="console.suggest_missing_package_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\SuggestMissingPackageSubscriber">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.no_preload"/>
    </service>
    <service id="console.command.about" class="Symfony\Bundle\FrameworkBundle\Command\AboutCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>about</argument>
      </call>
      <call method="setDescription">
        <argument>Display information about the current project</argument>
      </call>
    </service>
    <service id="console.command.assets_install" class="Symfony\Bundle\FrameworkBundle\Command\AssetsInstallCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="filesystem"/>
      <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend</argument>
      <call method="setName">
        <argument>assets:install</argument>
      </call>
      <call method="setDescription">
        <argument>Install bundle's web assets under a public directory</argument>
      </call>
    </service>
    <service id="console.command.cache_clear" class="Symfony\Bundle\FrameworkBundle\Command\CacheClearCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache_clearer"/>
      <argument type="service" id="filesystem"/>
      <call method="setName">
        <argument>cache:clear</argument>
      </call>
      <call method="setDescription">
        <argument>Clear the cache</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_clear" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolClearCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache.global_clearer"/>
      <argument type="collection">
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.property_info</argument>
        <argument>cache.asset_mapper</argument>
        <argument>cache.messenger.restart_workers_signal</argument>
        <argument>cache.validator_expression_language</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:clear</argument>
      </call>
      <call method="setDescription">
        <argument>Clear cache pools</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_prune" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolPruneCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="collection"/>
      <call method="setName">
        <argument>cache:pool:prune</argument>
      </call>
      <call method="setDescription">
        <argument>Prune cache pools</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_invalidate_tags" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolInvalidateTagsCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id=".service_locator.jkL9kAz"/>
      <call method="setName">
        <argument>cache:pool:invalidate-tags</argument>
      </call>
      <call method="setDescription">
        <argument>Invalidate cache tags for all or a specific pool</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_delete" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolDeleteCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache.global_clearer"/>
      <argument type="collection">
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.property_info</argument>
        <argument>cache.asset_mapper</argument>
        <argument>cache.messenger.restart_workers_signal</argument>
        <argument>cache.validator_expression_language</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:delete</argument>
      </call>
      <call method="setDescription">
        <argument>Delete an item from a cache pool</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_list" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolListCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="collection">
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.property_info</argument>
        <argument>cache.asset_mapper</argument>
        <argument>cache.messenger.restart_workers_signal</argument>
        <argument>cache.validator_expression_language</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:list</argument>
      </call>
      <call method="setDescription">
        <argument>List available cache pools</argument>
      </call>
    </service>
    <service id="console.command.cache_warmup" class="Symfony\Bundle\FrameworkBundle\Command\CacheWarmupCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache_warmer"/>
      <call method="setName">
        <argument>cache:warmup</argument>
      </call>
      <call method="setDescription">
        <argument>Warm up an empty cache</argument>
      </call>
    </service>
    <service id="console.command.config_debug" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>debug:config</argument>
      </call>
      <call method="setDescription">
        <argument>Dump the current configuration for an extension</argument>
      </call>
    </service>
    <service id="console.command.config_dump_reference" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDumpReferenceCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>config:dump-reference</argument>
      </call>
      <call method="setDescription">
        <argument>Dump the default configuration for an extension</argument>
      </call>
    </service>
    <service id="console.command.container_debug" class="Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>debug:container</argument>
      </call>
      <call method="setDescription">
        <argument>Display current services for an application</argument>
      </call>
    </service>
    <service id="console.command.container_lint" class="Symfony\Bundle\FrameworkBundle\Command\ContainerLintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>lint:container</argument>
      </call>
      <call method="setDescription">
        <argument>Ensure that arguments injected into services match type declarations</argument>
      </call>
    </service>
    <service id="console.command.debug_autowiring" class="Symfony\Bundle\FrameworkBundle\Command\DebugAutowiringCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>null</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:autowiring</argument>
      </call>
      <call method="setDescription">
        <argument>List classes/interfaces you can use for autowiring</argument>
      </call>
    </service>
    <service id="console.command.dotenv_debug" class="Symfony\Component\Dotenv\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>test</argument>
      <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend</argument>
      <call method="setName">
        <argument>debug:dotenv</argument>
      </call>
      <call method="setDescription">
        <argument>List all dotenv files with variables and values</argument>
      </call>
    </service>
    <service id="console.command.event_dispatcher_debug" class="Symfony\Bundle\FrameworkBundle\Command\EventDispatcherDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id=".service_locator.h7gfyOW"/>
      <call method="setName">
        <argument>debug:event-dispatcher</argument>
      </call>
      <call method="setDescription">
        <argument>Display configured listeners for an application</argument>
      </call>
    </service>
    <service id="console.command.messenger_consume_messages" class="Symfony\Component\Messenger\Command\ConsumeMessagesCommand">
      <tag name="console.command"/>
      <tag name="monolog.logger" channel="messenger"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="messenger.routable_message_bus"/>
      <argument type="service" id="messenger.receiver_locator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument type="collection"/>
      <argument type="service" id="messenger.listener.reset_services" on-invalid="null"/>
      <argument type="collection">
        <argument>messenger.bus.default</argument>
      </argument>
      <argument>null</argument>
      <argument>null</argument>
      <call method="setName">
        <argument>messenger:consume</argument>
      </call>
      <call method="setDescription">
        <argument>Consume messages</argument>
      </call>
    </service>
    <service id="console.command.messenger_setup_transports" class="Symfony\Component\Messenger\Command\SetupTransportsCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="messenger.receiver_locator"/>
      <argument type="collection"/>
      <call method="setName">
        <argument>messenger:setup-transports</argument>
      </call>
      <call method="setDescription">
        <argument>Prepare the required infrastructure for the transport</argument>
      </call>
    </service>
    <service id="console.command.messenger_debug" class="Symfony\Component\Messenger\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="collection">
        <argument key="messenger.bus.default" type="collection">
          <argument key="Symfony\Component\Process\Messenger\RunProcessMessage" type="collection">
            <argument type="collection">
              <argument>process.messenger.process_message_handler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Symfony\Component\Console\Messenger\RunCommandMessage" type="collection">
            <argument type="collection">
              <argument>console.messenger.execute_command_handler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Symfony\Component\HttpClient\Messenger\PingWebhookMessage" type="collection">
            <argument type="collection">
              <argument>http_client.messenger.ping_webhook_handler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Symfony\Component\Mailer\Messenger\SendEmailMessage" type="collection">
            <argument type="collection">
              <argument>mailer.messenger.message_handler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Symfony\Component\Messenger\Message\RedispatchMessage" type="collection">
            <argument type="collection">
              <argument>messenger.redispatch_message_handler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Symfony\Component\Notifier\Message\ChatMessage" type="collection">
            <argument type="collection">
              <argument>chatter.messenger.chat_handler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Symfony\Component\Notifier\Message\SmsMessage" type="collection">
            <argument type="collection">
              <argument>texter.messenger.sms_handler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Symfony\Component\Notifier\Message\PushMessage" type="collection">
            <argument type="collection">
              <argument>texter.messenger.push_handler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
        </argument>
      </argument>
      <call method="setName">
        <argument>debug:messenger</argument>
      </call>
      <call method="setDescription">
        <argument>List messages you can dispatch using the message buses</argument>
      </call>
    </service>
    <service id="console.command.messenger_stop_workers" class="Symfony\Component\Messenger\Command\StopWorkersCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache.messenger.restart_workers_signal"/>
      <call method="setName">
        <argument>messenger:stop-workers</argument>
      </call>
      <call method="setDescription">
        <argument>Stop workers after their current message</argument>
      </call>
    </service>
    <service id="console.command.messenger_stats" class="Symfony\Component\Messenger\Command\StatsCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="messenger.receiver_locator"/>
      <argument type="collection"/>
      <call method="setName">
        <argument>messenger:stats</argument>
      </call>
      <call method="setDescription">
        <argument>Show the message count for one or more transports</argument>
      </call>
    </service>
    <service id="console.command.router_debug" class="Symfony\Bundle\FrameworkBundle\Command\RouterDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:router</argument>
      </call>
      <call method="setDescription">
        <argument>Display current routes for an application</argument>
      </call>
    </service>
    <service id="console.command.router_match" class="Symfony\Bundle\FrameworkBundle\Command\RouterMatchCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="router.default"/>
      <argument type="tagged_iterator" tag="routing.expression_language_provider"/>
      <call method="setName">
        <argument>router:match</argument>
      </call>
      <call method="setDescription">
        <argument>Help debug routes by simulating a path info match</argument>
      </call>
    </service>
    <service id="console.command.serializer_debug" class="Symfony\Component\Serializer\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
      <call method="setName">
        <argument>debug:serializer</argument>
      </call>
      <call method="setDescription">
        <argument>Display serialization information for classes</argument>
      </call>
    </service>
    <service id="console.command.translation_debug" class="Symfony\Bundle\FrameworkBundle\Command\TranslationDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend/translations</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations</argument>
        <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations</argument>
        <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations</argument>
      </argument>
      <argument type="collection"/>
      <argument type="collection"/>
      <call method="setName">
        <argument>debug:translation</argument>
      </call>
      <call method="setDescription">
        <argument>Display translation messages information</argument>
      </call>
    </service>
    <service id="console.command.translation_extract" class="Symfony\Bundle\FrameworkBundle\Command\TranslationUpdateCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>en</argument>
      <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend/translations</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations</argument>
        <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations</argument>
        <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations</argument>
      </argument>
      <argument type="collection"/>
      <argument type="collection"/>
      <call method="setName">
        <argument>translation:extract</argument>
      </call>
      <call method="setDescription">
        <argument>Extract missing translations keys from code to translation files</argument>
      </call>
    </service>
    <service id="console.command.validator_debug" class="Symfony\Component\Validator\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="validator"/>
      <call method="setName">
        <argument>debug:validator</argument>
      </call>
      <call method="setDescription">
        <argument>Display validation constraints for classes</argument>
      </call>
    </service>
    <service id="console.command.translation_pull" class="Symfony\Component\Translation\Command\TranslationPullCommand">
      <tag name="console.command" command="translation:pull"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translation.provider_collection"/>
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument>en</argument>
      <argument type="collection"/>
      <argument type="collection"/>
      <call method="setName">
        <argument>translation:pull</argument>
      </call>
      <call method="setDescription">
        <argument>Pull translations from a given provider.</argument>
      </call>
    </service>
    <service id="console.command.translation_push" class="Symfony\Component\Translation\Command\TranslationPushCommand">
      <tag name="console.command" command="translation:push"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translation.provider_collection"/>
      <argument type="service" id="translation.reader"/>
      <argument type="collection"/>
      <argument type="collection"/>
      <call method="setName">
        <argument>translation:push</argument>
      </call>
      <call method="setDescription">
        <argument>Push translations to a given provider.</argument>
      </call>
    </service>
    <service id="console.command.xliff_lint" class="Symfony\Component\Translation\Command\XliffLintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>lint:xliff</argument>
      </call>
      <call method="setDescription">
        <argument>Lint an XLIFF file and outputs encountered errors</argument>
      </call>
    </service>
    <service id="console.command.yaml_lint" class="Symfony\Bundle\FrameworkBundle\Command\YamlLintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>lint:yaml</argument>
      </call>
      <call method="setDescription">
        <argument>Lint a YAML file and outputs encountered errors</argument>
      </call>
    </service>
    <service id="console.command.form_debug" class="Symfony\Component\Form\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="form.registry"/>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type\FormType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\ChoiceType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\FileType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\ColorType</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension</argument>
        <argument>Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser</argument>
      </argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:form</argument>
      </call>
      <call method="setDescription">
        <argument>Display form type information</argument>
      </call>
    </service>
    <service id="console.command.secrets_set" class="Symfony\Bundle\FrameworkBundle\Command\SecretsSetCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="null"/>
      <call method="setName">
        <argument>secrets:set</argument>
      </call>
      <call method="setDescription">
        <argument>Set a secret in the vault</argument>
      </call>
    </service>
    <service id="console.command.secrets_remove" class="Symfony\Bundle\FrameworkBundle\Command\SecretsRemoveCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="null"/>
      <call method="setName">
        <argument>secrets:remove</argument>
      </call>
      <call method="setDescription">
        <argument>Remove a secret from the vault</argument>
      </call>
    </service>
    <service id="console.command.secrets_generate_key" class="Symfony\Bundle\FrameworkBundle\Command\SecretsGenerateKeysCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:generate-keys</argument>
      </call>
      <call method="setDescription">
        <argument>Generate new encryption keys</argument>
      </call>
    </service>
    <service id="console.command.secrets_list" class="Symfony\Bundle\FrameworkBundle\Command\SecretsListCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:list</argument>
      </call>
      <call method="setDescription">
        <argument>List all secrets</argument>
      </call>
    </service>
    <service id="console.command.secrets_reveal" class="Symfony\Bundle\FrameworkBundle\Command\SecretsRevealCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:reveal</argument>
      </call>
      <call method="setDescription">
        <argument>Reveal the value of a secret</argument>
      </call>
    </service>
    <service id="console.command.secrets_decrypt_to_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsDecryptToLocalCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:decrypt-to-local</argument>
      </call>
      <call method="setDescription">
        <argument>Decrypt all secrets and stores them in the local vault</argument>
      </call>
    </service>
    <service id="console.command.secrets_encrypt_from_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsEncryptFromLocalCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:encrypt-from-local</argument>
      </call>
      <call method="setDescription">
        <argument>Encrypt all local secrets to the vault</argument>
      </call>
    </service>
    <service id="console.messenger.application" class="Symfony\Bundle\FrameworkBundle\Console\Application" shared="false">
      <argument type="service" id="kernel"/>
      <call method="setAutoExit">
        <argument>false</argument>
      </call>
    </service>
    <service id="console.messenger.execute_command_handler" class="Symfony\Component\Console\Messenger\RunCommandMessageHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="console.messenger.application"/>
    </service>
    <service id="cache.app" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>K2NEMNYPhL</argument>
      <argument>0</argument>
      <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend\var\cache\test/pools/app</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.app.taggable" class="Symfony\Component\Cache\Adapter\TagAwareAdapter">
      <tag name="cache.taggable" pool="cache.app"/>
      <argument type="service" id="cache.app"/>
    </service>
    <service id="cache.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>Z4UUFjORJg</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend\var\cache\test/pools/system</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.validator" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>nGDU633ZfK</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend\var\cache\test/pools/system</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.serializer" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>53nRVhMWYe</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend\var\cache\test/pools/system</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.property_info" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>OnbW4vLgTs</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend\var\cache\test/pools/system</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.asset_mapper" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>JMvXWIafLs</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend\var\cache\test/pools/system</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.messenger.restart_workers_signal" class="Symfony\Component\Cache\Adapter\FilesystemAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>tgzxjFvsmS</argument>
      <argument>0</argument>
      <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend\var\cache\test/pools/app</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" abstract="true">
      <tag name="cache.pool" clearer="cache.system_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend\var\cache\test/pools/system</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.apcu" class="Symfony\Component\Cache\Adapter\ApcuAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.filesystem" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend\var\cache\test/pools/app</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.psr6" class="Symfony\Component\Cache\Adapter\ProxyAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_psr6_provider" clearer="cache.default_clearer" reset="reset"/>
      <argument type="abstract">PSR-6 provider service</argument>
      <argument></argument>
      <argument>0</argument>
    </service>
    <service id="cache.adapter.redis" class="Symfony\Component\Cache\Adapter\RedisAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">Redis connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.redis_tag_aware" class="Symfony\Component\Cache\Adapter\RedisTagAwareAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">Redis connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.memcached" class="Symfony\Component\Cache\Adapter\MemcachedAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_memcached_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">Memcached connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.doctrine_dbal" class="Symfony\Component\Cache\Adapter\DoctrineDbalAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_doctrine_dbal_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">DBAL connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.pdo" class="Symfony\Component\Cache\Adapter\PdoAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_pdo_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">PDO connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.array" class="Symfony\Component\Cache\Adapter\ArrayAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.default_marshaller" class="Symfony\Component\Cache\Marshaller\DefaultMarshaller">
      <argument>null</argument>
      <argument>true</argument>
    </service>
    <service id="cache.default_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.messenger.restart_workers_signal" type="service" id="cache.messenger.restart_workers_signal" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.system_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <tag name="kernel.cache_clearer"/>
      <argument type="collection">
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.asset_mapper" type="service" id="cache.asset_mapper" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator_expression_language" type="service" id="cache.validator_expression_language" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.global_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.asset_mapper" type="service" id="cache.asset_mapper" on-invalid="ignore_uninitialized"/>
        <argument key="cache.messenger.restart_workers_signal" type="service" id="cache.messenger.restart_workers_signal" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator_expression_language" type="service" id="cache.validator_expression_language" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="identity_translator" class="Symfony\Component\Translation\IdentityTranslator"/>
    <service id="test.client" class="Symfony\Bundle\FrameworkBundle\KernelBrowser" shared="false" public="true">
      <argument type="service" id="kernel"/>
      <argument type="collection"/>
      <argument type="service" id="test.client.history"/>
      <argument type="service" id="test.client.cookiejar"/>
    </service>
    <service id="test.client.history" class="Symfony\Component\BrowserKit\History" shared="false"/>
    <service id="test.client.cookiejar" class="Symfony\Component\BrowserKit\CookieJar" shared="false"/>
    <service id="test.service_container" class="Symfony\Bundle\FrameworkBundle\Test\TestContainer" public="true">
      <argument type="service" id="kernel"/>
      <argument>test.private_services_locator</argument>
    </service>
    <service id="test.private_services_locator" class="Symfony\Component\DependencyInjection\ServiceLocator" public="true">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Eurega\Shared\Infrastructure\Bus\Command\Tactician\TacticianCommandBusRead" type="service_closure" id="Eurega\Shared\Infrastructure\Bus\Command\Tactician\TacticianCommandBusRead" on-invalid="ignore_uninitialized"/>
        <argument key="Eurega\Shared\Infrastructure\Bus\Command\Tactician\TacticianCommandBusWrite" type="service_closure" id="Eurega\Shared\Infrastructure\Bus\Command\Tactician\TacticianCommandBusWrite" on-invalid="ignore_uninitialized"/>
        <argument key="Eurega\ShoppingList\Application\Query\Usuario\SearchUsuarioParticularByCriteriaQueryHandler" type="service_closure" id="Eurega\ShoppingList\Application\Query\Usuario\SearchUsuarioParticularByCriteriaQueryHandler" on-invalid="ignore_uninitialized"/>
        <argument key="Eurega\ShoppingList\Application\Command\Usuario\CrearUsuarioParticularCommandHandler" type="service_closure" id="Eurega\ShoppingList\Application\Command\Usuario\CrearUsuarioParticularCommandHandler" on-invalid="ignore_uninitialized"/>
        <argument key="Eurega\ShoppingList\Application\Service\Usuario\UsuarioParticularByCriteriaSearcher" type="service_closure" id="Eurega\ShoppingList\Application\Service\Usuario\UsuarioParticularByCriteriaSearcher" on-invalid="ignore_uninitialized"/>
        <argument key="Eurega\ShoppingList\Application\Service\Usuario\UsuarioParticularCreator" type="service_closure" id="Eurega\ShoppingList\Application\Service\Usuario\UsuarioParticularCreator" on-invalid="ignore_uninitialized"/>
        <argument key="Eurega\ShoppingList\Application\Service\Usuario\UsuarioParticularFinder" type="service_closure" id="Eurega\ShoppingList\Application\Service\Usuario\UsuarioParticularFinder" on-invalid="ignore_uninitialized"/>
        <argument key="Eurega\Shared\Infrastructure\Bus\CallableFirstParameterExtractor" type="service_closure" id="Eurega\Shared\Infrastructure\Bus\CallableFirstParameterExtractor" on-invalid="ignore_uninitialized"/>
        <argument key="Eurega\Shared\Infrastructure\Bus\Command\Symfony\SymfonyCommandBus" type="service_closure" id="Eurega\Shared\Infrastructure\Bus\Command\Symfony\SymfonyCommandBus" on-invalid="ignore_uninitialized"/>
        <argument key="Eurega\Shared\Infrastructure\Bus\Event\InMemory\InMemorySymfonyEventBus" type="service_closure" id="Eurega\Shared\Infrastructure\Bus\Event\InMemory\InMemorySymfonyEventBus" on-invalid="ignore_uninitialized"/>
        <argument key="Eurega\Shared\Infrastructure\Bus\Query\InMemory\InMemorySymfonyQueryBus" type="service_closure" id="Eurega\Shared\Infrastructure\Bus\Query\InMemory\InMemorySymfonyQueryBus" on-invalid="ignore_uninitialized"/>
        <argument key="Eurega\Shared\Infrastructure\Doctrine\Dbal\DbalCustomTypesRegistrar" type="service_closure" id="Eurega\Shared\Infrastructure\Doctrine\Dbal\DbalCustomTypesRegistrar" on-invalid="ignore_uninitialized"/>
        <argument key="Eurega\Shared\Infrastructure\Doctrine\DoctrineEntityManagerFactory" type="service_closure" id="Eurega\Shared\Infrastructure\Doctrine\DoctrineEntityManagerFactory" on-invalid="ignore_uninitialized"/>
        <argument key="Eurega\Shared\Infrastructure\PhpRandomNumberGenerator" type="service_closure" id="Eurega\Shared\Infrastructure\PhpRandomNumberGenerator" on-invalid="ignore_uninitialized"/>
        <argument key="Eurega\Shared\Infrastructure\PhpUnit\CrearUsuarioParticularCommandMother" type="service_closure" id="Eurega\Shared\Infrastructure\PhpUnit\CrearUsuarioParticularCommandMother" on-invalid="ignore_uninitialized"/>
        <argument key="Eurega\Shared\Infrastructure\PhpUnit\MotherCreator" type="service_closure" id="Eurega\Shared\Infrastructure\PhpUnit\MotherCreator" on-invalid="ignore_uninitialized"/>
        <argument key="Eurega\Shared\Infrastructure\PhpUnit\MySqlDatabaseCleaner" type="service_closure" id="Eurega\Shared\Infrastructure\PhpUnit\MySqlDatabaseCleaner" on-invalid="ignore_uninitialized"/>
        <argument key="Eurega\Shared\Infrastructure\PhpUnit\RandomElementPicker" type="service_closure" id="Eurega\Shared\Infrastructure\PhpUnit\RandomElementPicker" on-invalid="ignore_uninitialized"/>
        <argument key="Eurega\Shared\Infrastructure\PhpUnit\TestUtils" type="service_closure" id="Eurega\Shared\Infrastructure\PhpUnit\TestUtils" on-invalid="ignore_uninitialized"/>
        <argument key="Eurega\Shared\Infrastructure\PhpUnit\UsuarioParticularCreatedDomainEventMother" type="service_closure" id="Eurega\Shared\Infrastructure\PhpUnit\UsuarioParticularCreatedDomainEventMother" on-invalid="ignore_uninitialized"/>
        <argument key="Eurega\Shared\Infrastructure\PhpUnit\UsuarioParticularMother" type="service_closure" id="Eurega\Shared\Infrastructure\PhpUnit\UsuarioParticularMother" on-invalid="ignore_uninitialized"/>
        <argument key="Eurega\Shared\Infrastructure\PhpUnit\UuidMother" type="service_closure" id="Eurega\Shared\Infrastructure\PhpUnit\UuidMother" on-invalid="ignore_uninitialized"/>
        <argument key="Eurega\Shared\Infrastructure\PhpUnit\WordMother" type="service_closure" id="Eurega\Shared\Infrastructure\PhpUnit\WordMother" on-invalid="ignore_uninitialized"/>
        <argument key="Eurega\Shared\Infrastructure\RamseyUuidGenerator" type="service_closure" id="Eurega\Shared\Infrastructure\RamseyUuidGenerator" on-invalid="ignore_uninitialized"/>
        <argument key="Eurega\Shared\Infrastructure\ValueObject\Common\EmailAddressType" type="service_closure" id="Eurega\Shared\Infrastructure\ValueObject\Common\EmailAddressType" on-invalid="ignore_uninitialized"/>
        <argument key="Eurega\Shared\Infrastructure\ValueObject\Common\IdType" type="service_closure" id="Eurega\Shared\Infrastructure\ValueObject\Common\IdType" on-invalid="ignore_uninitialized"/>
        <argument key="Eurega\Shared\Infrastructure\ValueObject\Common\NombreType" type="service_closure" id="Eurega\Shared\Infrastructure\ValueObject\Common\NombreType" on-invalid="ignore_uninitialized"/>
        <argument key="Eurega\Shared\Infrastructure\ValueObject\Security\PasswordHashType" type="service_closure" id="Eurega\Shared\Infrastructure\ValueObject\Security\PasswordHashType" on-invalid="ignore_uninitialized"/>
        <argument key="Tests\Shared\Domain\Criteria\CriteriaMother" type="service_closure" id="Tests\Shared\Domain\Criteria\CriteriaMother" on-invalid="ignore_uninitialized"/>
        <argument key="Tests\Shared\Domain\Criteria\FilterFieldMother" type="service_closure" id="Tests\Shared\Domain\Criteria\FilterFieldMother" on-invalid="ignore_uninitialized"/>
        <argument key="Tests\Shared\Domain\Criteria\FilterMother" type="service_closure" id="Tests\Shared\Domain\Criteria\FilterMother" on-invalid="ignore_uninitialized"/>
        <argument key="Tests\Shared\Domain\Criteria\FilterValueMother" type="service_closure" id="Tests\Shared\Domain\Criteria\FilterValueMother" on-invalid="ignore_uninitialized"/>
        <argument key="Tests\Shared\Domain\Criteria\FiltersMother" type="service_closure" id="Tests\Shared\Domain\Criteria\FiltersMother" on-invalid="ignore_uninitialized"/>
        <argument key="Tests\Shared\Domain\Criteria\OrderByMother" type="service_closure" id="Tests\Shared\Domain\Criteria\OrderByMother" on-invalid="ignore_uninitialized"/>
        <argument key="Tests\Shared\Domain\Criteria\OrderMother" type="service_closure" id="Tests\Shared\Domain\Criteria\OrderMother" on-invalid="ignore_uninitialized"/>
        <argument key="Tests\Shared\Infrastructure\ConstantRandomNumberGenerator" type="service_closure" id="Tests\Shared\Infrastructure\ConstantRandomNumberGenerator" on-invalid="ignore_uninitialized"/>
        <argument key="Tests\Shared\Infrastructure\Mink\MinkHelper" type="service_closure" id="Tests\Shared\Infrastructure\Mink\MinkHelper" on-invalid="ignore_uninitialized"/>
        <argument key="Tests\Shared\Infrastructure\Mink\MinkSessionRequestHelper" type="service_closure" id="Tests\Shared\Infrastructure\Mink\MinkSessionRequestHelper" on-invalid="ignore_uninitialized"/>
        <argument key="Tests\Shared\Infrastructure\PhpUnit\Comparator\AggregateRootArraySimilarComparator" type="service_closure" id="Tests\Shared\Infrastructure\PhpUnit\Comparator\AggregateRootArraySimilarComparator" on-invalid="ignore_uninitialized"/>
        <argument key="Tests\Shared\Infrastructure\PhpUnit\Comparator\AggregateRootSimilarComparator" type="service_closure" id="Tests\Shared\Infrastructure\PhpUnit\Comparator\AggregateRootSimilarComparator" on-invalid="ignore_uninitialized"/>
        <argument key="Tests\Shared\Infrastructure\PhpUnit\Comparator\DateTimeSimilarComparator" type="service_closure" id="Tests\Shared\Infrastructure\PhpUnit\Comparator\DateTimeSimilarComparator" on-invalid="ignore_uninitialized"/>
        <argument key="Tests\Shared\Infrastructure\PhpUnit\Comparator\DateTimeStringSimilarComparator" type="service_closure" id="Tests\Shared\Infrastructure\PhpUnit\Comparator\DateTimeStringSimilarComparator" on-invalid="ignore_uninitialized"/>
        <argument key="Tests\Shared\Infrastructure\PhpUnit\Comparator\DomainEventArraySimilarComparator" type="service_closure" id="Tests\Shared\Infrastructure\PhpUnit\Comparator\DomainEventArraySimilarComparator" on-invalid="ignore_uninitialized"/>
        <argument key="Tests\Shared\Infrastructure\PhpUnit\Comparator\DomainEventSimilarComparator" type="service_closure" id="Tests\Shared\Infrastructure\PhpUnit\Comparator\DomainEventSimilarComparator" on-invalid="ignore_uninitialized"/>
        <argument key="Tests\Shared\Infrastructure\Repository\MysqlUsuarioParticularWriteRepository" type="service_closure" id="Tests\Shared\Infrastructure\Repository\MysqlUsuarioParticularWriteRepository" on-invalid="ignore_uninitialized"/>
        <argument key="Tests\Shared\Infrastructure\Repository\UsuarioParticularReadRepository" type="service_closure" id="Tests\Shared\Infrastructure\Repository\UsuarioParticularReadRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\ShoppingList\Backend\Test\ConstantRandomNumberGenerator" type="service_closure" id="App\ShoppingList\Backend\Test\ConstantRandomNumberGenerator" on-invalid="ignore_uninitialized"/>
        <argument key="App\ShoppingList\Backend\Test\Mink\MinkHelper" type="service_closure" id="App\ShoppingList\Backend\Test\Mink\MinkHelper" on-invalid="ignore_uninitialized"/>
        <argument key="App\ShoppingList\Backend\Test\Mink\MinkSessionRequestHelper" type="service_closure" id="App\ShoppingList\Backend\Test\Mink\MinkSessionRequestHelper" on-invalid="ignore_uninitialized"/>
        <argument key="argument_metadata_factory" type="service_closure" id="argument_metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.backed_enum_resolver" type="service_closure" id="argument_resolver.backed_enum_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.datetime" type="service_closure" id="argument_resolver.datetime" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.request_payload" type="service_closure" id="argument_resolver.request_payload" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.request_attribute" type="service_closure" id="argument_resolver.request_attribute" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.request" type="service_closure" id="argument_resolver.request" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.session" type="service_closure" id="argument_resolver.session" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.service" type="service_closure" id="argument_resolver.service" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.default" type="service_closure" id="argument_resolver.default" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.variadic" type="service_closure" id="argument_resolver.variadic" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.query_parameter_value_resolver" type="service_closure" id="argument_resolver.query_parameter_value_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="response_listener" type="service_closure" id="response_listener" on-invalid="ignore_uninitialized"/>
        <argument key="locale_listener" type="service_closure" id="locale_listener" on-invalid="ignore_uninitialized"/>
        <argument key="validate_request_listener" type="service_closure" id="validate_request_listener" on-invalid="ignore_uninitialized"/>
        <argument key="disallow_search_engine_index_response_listener" type="service_closure" id="disallow_search_engine_index_response_listener" on-invalid="ignore_uninitialized"/>
        <argument key="exception_listener" type="service_closure" id="exception_listener" on-invalid="ignore_uninitialized"/>
        <argument key="controller.cache_attribute_listener" type="service_closure" id="controller.cache_attribute_listener" on-invalid="ignore_uninitialized"/>
        <argument key="parameter_bag" type="service_closure" id="parameter_bag" on-invalid="ignore_uninitialized"/>
        <argument key="http_cache" type="service_closure" id="http_cache" on-invalid="ignore_uninitialized"/>
        <argument key="http_cache.store" type="service_closure" id="http_cache.store" on-invalid="ignore_uninitialized"/>
        <argument key="url_helper" type="service_closure" id="url_helper" on-invalid="ignore_uninitialized"/>
        <argument key="cache_clearer" type="service_closure" id="cache_clearer" on-invalid="ignore_uninitialized"/>
        <argument key="filesystem" type="service_closure" id="filesystem" on-invalid="ignore_uninitialized"/>
        <argument key="file_locator" type="service_closure" id="file_locator" on-invalid="ignore_uninitialized"/>
        <argument key="config_cache_factory" type="service_closure" id="config_cache_factory" on-invalid="ignore_uninitialized"/>
        <argument key="dependency_injection.config.container_parameters_resource_checker" type="service_closure" id="dependency_injection.config.container_parameters_resource_checker" on-invalid="ignore_uninitialized"/>
        <argument key="config.resource.self_checking_resource_checker" type="service_closure" id="config.resource.self_checking_resource_checker" on-invalid="ignore_uninitialized"/>
        <argument key="reverse_container" type="service_closure" id="reverse_container" on-invalid="ignore_uninitialized"/>
        <argument key="locale_aware_listener" type="service_closure" id="locale_aware_listener" on-invalid="ignore_uninitialized"/>
        <argument key="container.env_var_processor" type="service_closure" id="container.env_var_processor" on-invalid="ignore_uninitialized"/>
        <argument key="slugger" type="service_closure" id="slugger" on-invalid="ignore_uninitialized"/>
        <argument key="container.getenv" type="service_closure" id="container.getenv" on-invalid="ignore_uninitialized"/>
        <argument key="config_builder.warmer" type="service_closure" id="config_builder.warmer" on-invalid="ignore_uninitialized"/>
        <argument key="clock" type="service_closure" id="clock" on-invalid="ignore_uninitialized"/>
        <argument key="fragment.handler" type="service_closure" id="fragment.handler" on-invalid="ignore_uninitialized"/>
        <argument key="fragment.uri_generator" type="service_closure" id="fragment.uri_generator" on-invalid="ignore_uninitialized"/>
        <argument key="fragment.renderer.inline" type="service_closure" id="fragment.renderer.inline" on-invalid="ignore_uninitialized"/>
        <argument key="error_handler.error_renderer.html" type="service_closure" id="error_handler.error_renderer.html" on-invalid="ignore_uninitialized"/>
        <argument key="process.messenger.process_message_handler" type="service_closure" id="process.messenger.process_message_handler" on-invalid="ignore_uninitialized"/>
        <argument key="console.error_listener" type="service_closure" id="console.error_listener" on-invalid="ignore_uninitialized"/>
        <argument key="console.suggest_missing_package_subscriber" type="service_closure" id="console.suggest_missing_package_subscriber" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.about" type="service_closure" id="console.command.about" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.assets_install" type="service_closure" id="console.command.assets_install" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_clear" type="service_closure" id="console.command.cache_clear" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_pool_clear" type="service_closure" id="console.command.cache_pool_clear" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_pool_prune" type="service_closure" id="console.command.cache_pool_prune" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_pool_invalidate_tags" type="service_closure" id="console.command.cache_pool_invalidate_tags" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_pool_delete" type="service_closure" id="console.command.cache_pool_delete" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_pool_list" type="service_closure" id="console.command.cache_pool_list" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_warmup" type="service_closure" id="console.command.cache_warmup" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.config_debug" type="service_closure" id="console.command.config_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.config_dump_reference" type="service_closure" id="console.command.config_dump_reference" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.container_debug" type="service_closure" id="console.command.container_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.container_lint" type="service_closure" id="console.command.container_lint" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.debug_autowiring" type="service_closure" id="console.command.debug_autowiring" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.dotenv_debug" type="service_closure" id="console.command.dotenv_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.event_dispatcher_debug" type="service_closure" id="console.command.event_dispatcher_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.messenger_consume_messages" type="service_closure" id="console.command.messenger_consume_messages" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.messenger_setup_transports" type="service_closure" id="console.command.messenger_setup_transports" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.messenger_debug" type="service_closure" id="console.command.messenger_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.messenger_stop_workers" type="service_closure" id="console.command.messenger_stop_workers" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.messenger_stats" type="service_closure" id="console.command.messenger_stats" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.router_debug" type="service_closure" id="console.command.router_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.router_match" type="service_closure" id="console.command.router_match" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.serializer_debug" type="service_closure" id="console.command.serializer_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.translation_debug" type="service_closure" id="console.command.translation_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.translation_extract" type="service_closure" id="console.command.translation_extract" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.validator_debug" type="service_closure" id="console.command.validator_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.translation_pull" type="service_closure" id="console.command.translation_pull" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.translation_push" type="service_closure" id="console.command.translation_push" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.xliff_lint" type="service_closure" id="console.command.xliff_lint" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.yaml_lint" type="service_closure" id="console.command.yaml_lint" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.form_debug" type="service_closure" id="console.command.form_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_set" type="service_closure" id="console.command.secrets_set" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_remove" type="service_closure" id="console.command.secrets_remove" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_generate_key" type="service_closure" id="console.command.secrets_generate_key" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_list" type="service_closure" id="console.command.secrets_list" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_reveal" type="service_closure" id="console.command.secrets_reveal" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_decrypt_to_local" type="service_closure" id="console.command.secrets_decrypt_to_local" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_encrypt_from_local" type="service_closure" id="console.command.secrets_encrypt_from_local" on-invalid="ignore_uninitialized"/>
        <argument key="console.messenger.application" type="service_closure" id="console.messenger.application" on-invalid="ignore_uninitialized"/>
        <argument key="console.messenger.execute_command_handler" type="service_closure" id="console.messenger.execute_command_handler" on-invalid="ignore_uninitialized"/>
        <argument key="cache.app.taggable" type="service_closure" id="cache.app.taggable" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service_closure" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service_closure" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service_closure" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.asset_mapper" type="service_closure" id="cache.asset_mapper" on-invalid="ignore_uninitialized"/>
        <argument key="cache.messenger.restart_workers_signal" type="service_closure" id="cache.messenger.restart_workers_signal" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_marshaller" type="service_closure" id="cache.default_marshaller" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_clearer" type="service_closure" id="cache.default_clearer" on-invalid="ignore_uninitialized"/>
        <argument key="identity_translator" type="service_closure" id="identity_translator" on-invalid="ignore_uninitialized"/>
        <argument key="test.client.history" type="service_closure" id="test.client.history" on-invalid="ignore_uninitialized"/>
        <argument key="test.client.cookiejar" type="service_closure" id="test.client.cookiejar" on-invalid="ignore_uninitialized"/>
        <argument key="assets.packages" type="service_closure" id="assets.packages" on-invalid="ignore_uninitialized"/>
        <argument key="assets.empty_package" type="service_closure" id="assets.empty_package" on-invalid="ignore_uninitialized"/>
        <argument key="assets.context" type="service_closure" id="assets.context" on-invalid="ignore_uninitialized"/>
        <argument key="assets.empty_version_strategy" type="service_closure" id="assets.empty_version_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="asset_mapper" type="service_closure" id="asset_mapper" on-invalid="ignore_uninitialized"/>
        <argument key="asset_mapper.cached_mapped_asset_factory" type="service_closure" id="asset_mapper.cached_mapped_asset_factory" on-invalid="ignore_uninitialized"/>
        <argument key="asset_mapper.repository" type="service_closure" id="asset_mapper.repository" on-invalid="ignore_uninitialized"/>
        <argument key="asset_mapper.public_assets_path_resolver" type="service_closure" id="asset_mapper.public_assets_path_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="asset_mapper.local_public_assets_filesystem" type="service_closure" id="asset_mapper.local_public_assets_filesystem" on-invalid="ignore_uninitialized"/>
        <argument key="asset_mapper.compiled_asset_mapper_config_reader" type="service_closure" id="asset_mapper.compiled_asset_mapper_config_reader" on-invalid="ignore_uninitialized"/>
        <argument key="asset_mapper.asset_package" type="service_closure" id="asset_mapper.asset_package" on-invalid="ignore_uninitialized"/>
        <argument key="asset_mapper.dev_server_subscriber" type="service_closure" id="asset_mapper.dev_server_subscriber" on-invalid="ignore_uninitialized"/>
        <argument key="asset_mapper.command.compile" type="service_closure" id="asset_mapper.command.compile" on-invalid="ignore_uninitialized"/>
        <argument key="asset_mapper.command.debug" type="service_closure" id="asset_mapper.command.debug" on-invalid="ignore_uninitialized"/>
        <argument key="asset_mapper_compiler" type="service_closure" id="asset_mapper_compiler" on-invalid="ignore_uninitialized"/>
        <argument key="asset_mapper.compiler.css_asset_url_compiler" type="service_closure" id="asset_mapper.compiler.css_asset_url_compiler" on-invalid="ignore_uninitialized"/>
        <argument key="asset_mapper.compiler.source_mapping_urls_compiler" type="service_closure" id="asset_mapper.compiler.source_mapping_urls_compiler" on-invalid="ignore_uninitialized"/>
        <argument key="asset_mapper.compiler.javascript_import_path_compiler" type="service_closure" id="asset_mapper.compiler.javascript_import_path_compiler" on-invalid="ignore_uninitialized"/>
        <argument key="asset_mapper.importmap.config_reader" type="service_closure" id="asset_mapper.importmap.config_reader" on-invalid="ignore_uninitialized"/>
        <argument key="asset_mapper.importmap.manager" type="service_closure" id="asset_mapper.importmap.manager" on-invalid="ignore_uninitialized"/>
        <argument key="asset_mapper.importmap.generator" type="service_closure" id="asset_mapper.importmap.generator" on-invalid="ignore_uninitialized"/>
        <argument key="asset_mapper.importmap.remote_package_storage" type="service_closure" id="asset_mapper.importmap.remote_package_storage" on-invalid="ignore_uninitialized"/>
        <argument key="asset_mapper.importmap.remote_package_downloader" type="service_closure" id="asset_mapper.importmap.remote_package_downloader" on-invalid="ignore_uninitialized"/>
        <argument key="asset_mapper.importmap.version_checker" type="service_closure" id="asset_mapper.importmap.version_checker" on-invalid="ignore_uninitialized"/>
        <argument key="asset_mapper.importmap.resolver" type="service_closure" id="asset_mapper.importmap.resolver" on-invalid="ignore_uninitialized"/>
        <argument key="asset_mapper.importmap.renderer" type="service_closure" id="asset_mapper.importmap.renderer" on-invalid="ignore_uninitialized"/>
        <argument key="asset_mapper.importmap.auditor" type="service_closure" id="asset_mapper.importmap.auditor" on-invalid="ignore_uninitialized"/>
        <argument key="asset_mapper.importmap.update_checker" type="service_closure" id="asset_mapper.importmap.update_checker" on-invalid="ignore_uninitialized"/>
        <argument key="asset_mapper.importmap.command.require" type="service_closure" id="asset_mapper.importmap.command.require" on-invalid="ignore_uninitialized"/>
        <argument key="asset_mapper.importmap.command.remove" type="service_closure" id="asset_mapper.importmap.command.remove" on-invalid="ignore_uninitialized"/>
        <argument key="asset_mapper.importmap.command.update" type="service_closure" id="asset_mapper.importmap.command.update" on-invalid="ignore_uninitialized"/>
        <argument key="asset_mapper.importmap.command.install" type="service_closure" id="asset_mapper.importmap.command.install" on-invalid="ignore_uninitialized"/>
        <argument key="asset_mapper.importmap.command.audit" type="service_closure" id="asset_mapper.importmap.command.audit" on-invalid="ignore_uninitialized"/>
        <argument key="asset_mapper.importmap.command.outdated" type="service_closure" id="asset_mapper.importmap.command.outdated" on-invalid="ignore_uninitialized"/>
        <argument key="http_client.transport" type="service_closure" id="http_client.transport" on-invalid="ignore_uninitialized"/>
        <argument key="http_client.uri_template" type="service_closure" id="http_client.uri_template" on-invalid="ignore_uninitialized"/>
        <argument key="http_client.uri_template_expander.guzzle" type="service_closure" id="http_client.uri_template_expander.guzzle" on-invalid="ignore_uninitialized"/>
        <argument key="http_client.uri_template_expander.rize" type="service_closure" id="http_client.uri_template_expander.rize" on-invalid="ignore_uninitialized"/>
        <argument key="http_client.messenger.ping_webhook_handler" type="service_closure" id="http_client.messenger.ping_webhook_handler" on-invalid="ignore_uninitialized"/>
        <argument key="mailer.mailer" type="service_closure" id="mailer.mailer" on-invalid="ignore_uninitialized"/>
        <argument key="mailer.transports" type="service_closure" id="mailer.transports" on-invalid="ignore_uninitialized"/>
        <argument key="mailer.transport_factory" type="service_closure" id="mailer.transport_factory" on-invalid="ignore_uninitialized"/>
        <argument key="mailer.default_transport" type="service_closure" id="mailer.default_transport" on-invalid="ignore_uninitialized"/>
        <argument key="mailer.messenger.message_handler" type="service_closure" id="mailer.messenger.message_handler" on-invalid="ignore_uninitialized"/>
        <argument key="mailer.envelope_listener" type="service_closure" id="mailer.envelope_listener" on-invalid="ignore_uninitialized"/>
        <argument key="mailer.message_logger_listener" type="service_closure" id="mailer.message_logger_listener" on-invalid="ignore_uninitialized"/>
        <argument key="mailer.messenger_transport_listener" type="service_closure" id="mailer.messenger_transport_listener" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.mailer_test" type="service_closure" id="console.command.mailer_test" on-invalid="ignore_uninitialized"/>
        <argument key="mailer.transport_factory.native" type="service_closure" id="mailer.transport_factory.native" on-invalid="ignore_uninitialized"/>
        <argument key="mailer.transport_factory.null" type="service_closure" id="mailer.transport_factory.null" on-invalid="ignore_uninitialized"/>
        <argument key="mailer.transport_factory.sendmail" type="service_closure" id="mailer.transport_factory.sendmail" on-invalid="ignore_uninitialized"/>
        <argument key="mailer.transport_factory.smtp" type="service_closure" id="mailer.transport_factory.smtp" on-invalid="ignore_uninitialized"/>
        <argument key="translator.default" type="service_closure" id="translator.default" on-invalid="ignore_uninitialized"/>
        <argument key="translator.logging" type="service_closure" id="translator.logging" on-invalid="ignore_uninitialized"/>
        <argument key="translator.formatter.default" type="service_closure" id="translator.formatter.default" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.php" type="service_closure" id="translation.loader.php" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.yml" type="service_closure" id="translation.loader.yml" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.xliff" type="service_closure" id="translation.loader.xliff" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.po" type="service_closure" id="translation.loader.po" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.mo" type="service_closure" id="translation.loader.mo" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.qt" type="service_closure" id="translation.loader.qt" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.csv" type="service_closure" id="translation.loader.csv" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.res" type="service_closure" id="translation.loader.res" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.dat" type="service_closure" id="translation.loader.dat" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.ini" type="service_closure" id="translation.loader.ini" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.json" type="service_closure" id="translation.loader.json" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.php" type="service_closure" id="translation.dumper.php" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.xliff" type="service_closure" id="translation.dumper.xliff" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.xliff.xliff" type="service_closure" id="translation.dumper.xliff.xliff" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.po" type="service_closure" id="translation.dumper.po" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.mo" type="service_closure" id="translation.dumper.mo" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.yml" type="service_closure" id="translation.dumper.yml" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.yaml" type="service_closure" id="translation.dumper.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.qt" type="service_closure" id="translation.dumper.qt" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.csv" type="service_closure" id="translation.dumper.csv" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.ini" type="service_closure" id="translation.dumper.ini" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.json" type="service_closure" id="translation.dumper.json" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.res" type="service_closure" id="translation.dumper.res" on-invalid="ignore_uninitialized"/>
        <argument key="translation.extractor.php_ast" type="service_closure" id="translation.extractor.php_ast" on-invalid="ignore_uninitialized"/>
        <argument key="translation.extractor.visitor.trans_method" type="service_closure" id="translation.extractor.visitor.trans_method" on-invalid="ignore_uninitialized"/>
        <argument key="translation.extractor.visitor.translatable_message" type="service_closure" id="translation.extractor.visitor.translatable_message" on-invalid="ignore_uninitialized"/>
        <argument key="translation.extractor.visitor.constraint" type="service_closure" id="translation.extractor.visitor.constraint" on-invalid="ignore_uninitialized"/>
        <argument key="translation.reader" type="service_closure" id="translation.reader" on-invalid="ignore_uninitialized"/>
        <argument key="translation.extractor" type="service_closure" id="translation.extractor" on-invalid="ignore_uninitialized"/>
        <argument key="translation.writer" type="service_closure" id="translation.writer" on-invalid="ignore_uninitialized"/>
        <argument key="translation.warmer" type="service_closure" id="translation.warmer" on-invalid="ignore_uninitialized"/>
        <argument key="translation.locale_switcher" type="service_closure" id="translation.locale_switcher" on-invalid="ignore_uninitialized"/>
        <argument key="translation.provider_collection" type="service_closure" id="translation.provider_collection" on-invalid="ignore_uninitialized"/>
        <argument key="translation.provider_collection_factory" type="service_closure" id="translation.provider_collection_factory" on-invalid="ignore_uninitialized"/>
        <argument key="translation.provider_factory.null" type="service_closure" id="translation.provider_factory.null" on-invalid="ignore_uninitialized"/>
        <argument key="debug.debug_handlers_listener" type="service_closure" id="debug.debug_handlers_listener" on-invalid="ignore_uninitialized"/>
        <argument key="debug.file_link_formatter" type="service_closure" id="debug.file_link_formatter" on-invalid="ignore_uninitialized"/>
        <argument key="debug.event_dispatcher" type="service_closure" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="debug.controller_resolver" type="service_closure" id="debug.controller_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver" type="service_closure" id="debug.argument_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.not_tagged_controller" type="service_closure" id="argument_resolver.not_tagged_controller" on-invalid="ignore_uninitialized"/>
        <argument key="debug.log_processor" type="service_closure" id="debug.log_processor" on-invalid="ignore_uninitialized"/>
        <argument key="debug.debug_logger_configurator" type="service_closure" id="debug.debug_logger_configurator" on-invalid="ignore_uninitialized"/>
        <argument key="routing.resolver" type="service_closure" id="routing.resolver" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.xml" type="service_closure" id="routing.loader.xml" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.yml" type="service_closure" id="routing.loader.yml" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.php" type="service_closure" id="routing.loader.php" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.glob" type="service_closure" id="routing.loader.glob" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.directory" type="service_closure" id="routing.loader.directory" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.container" type="service_closure" id="routing.loader.container" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.attribute" type="service_closure" id="routing.loader.attribute" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.attribute.directory" type="service_closure" id="routing.loader.attribute.directory" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.attribute.file" type="service_closure" id="routing.loader.attribute.file" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.psr4" type="service_closure" id="routing.loader.psr4" on-invalid="ignore_uninitialized"/>
        <argument key="router.default" type="service_closure" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="router.request_context" type="service_closure" id="router.request_context" on-invalid="ignore_uninitialized"/>
        <argument key="router.expression_language_provider" type="service_closure" id="router.expression_language_provider" on-invalid="ignore_uninitialized"/>
        <argument key="router.cache_warmer" type="service_closure" id="router.cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="router_listener" type="service_closure" id="router_listener" on-invalid="ignore_uninitialized"/>
        <argument key="property_accessor" type="service_closure" id="property_accessor" on-invalid="ignore_uninitialized"/>
        <argument key="secrets.vault" type="service_closure" id="secrets.vault" on-invalid="ignore_uninitialized"/>
        <argument key="secrets.env_var_loader" type="service_closure" id="secrets.env_var_loader" on-invalid="ignore_uninitialized"/>
        <argument key="secrets.decryption_key" type="service_closure" id="secrets.decryption_key" on-invalid="ignore_uninitialized"/>
        <argument key="secrets.local_vault" type="service_closure" id="secrets.local_vault" on-invalid="ignore_uninitialized"/>
        <argument key="serializer" type="service_closure" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.mapping.class_discriminator_resolver" type="service_closure" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.constraint_violation_list" type="service_closure" id="serializer.normalizer.constraint_violation_list" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.mime_message" type="service_closure" id="serializer.normalizer.mime_message" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.datetimezone" type="service_closure" id="serializer.normalizer.datetimezone" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.dateinterval" type="service_closure" id="serializer.normalizer.dateinterval" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.data_uri" type="service_closure" id="serializer.normalizer.data_uri" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.datetime" type="service_closure" id="serializer.normalizer.datetime" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.json_serializable" type="service_closure" id="serializer.normalizer.json_serializable" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.problem" type="service_closure" id="serializer.normalizer.problem" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.denormalizer.unwrapping" type="service_closure" id="serializer.denormalizer.unwrapping" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.uid" type="service_closure" id="serializer.normalizer.uid" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.translatable" type="service_closure" id="serializer.normalizer.translatable" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.form_error" type="service_closure" id="serializer.normalizer.form_error" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.object" type="service_closure" id="serializer.normalizer.object" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.property" type="service_closure" id="serializer.normalizer.property" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.denormalizer.array" type="service_closure" id="serializer.denormalizer.array" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.mapping.chain_loader" type="service_closure" id="serializer.mapping.chain_loader" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.mapping.class_metadata_factory" type="service_closure" id="serializer.mapping.class_metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.mapping.cache_warmer" type="service_closure" id="serializer.mapping.cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.mapping.cache.symfony" type="service_closure" id="serializer.mapping.cache.symfony" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.encoder.xml" type="service_closure" id="serializer.encoder.xml" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.encoder.json" type="service_closure" id="serializer.encoder.json" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.encoder.yaml" type="service_closure" id="serializer.encoder.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.encoder.csv" type="service_closure" id="serializer.encoder.csv" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.name_converter.camel_case_to_snake_case" type="service_closure" id="serializer.name_converter.camel_case_to_snake_case" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.name_converter.metadata_aware" type="service_closure" id="serializer.name_converter.metadata_aware" on-invalid="ignore_uninitialized"/>
        <argument key="property_info.serializer_extractor" type="service_closure" id="property_info.serializer_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="error_handler.error_renderer.serializer" type="service_closure" id="error_handler.error_renderer.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.backed_enum" type="service_closure" id="serializer.normalizer.backed_enum" on-invalid="ignore_uninitialized"/>
        <argument key="type_info.type_context_factory" type="service_closure" id="type_info.type_context_factory" on-invalid="ignore_uninitialized"/>
        <argument key="type_info.resolver" type="service_closure" id="type_info.resolver" on-invalid="ignore_uninitialized"/>
        <argument key="type_info.resolver.reflection_type" type="service_closure" id="type_info.resolver.reflection_type" on-invalid="ignore_uninitialized"/>
        <argument key="type_info.resolver.reflection_parameter" type="service_closure" id="type_info.resolver.reflection_parameter" on-invalid="ignore_uninitialized"/>
        <argument key="type_info.resolver.reflection_property" type="service_closure" id="type_info.resolver.reflection_property" on-invalid="ignore_uninitialized"/>
        <argument key="type_info.resolver.reflection_return" type="service_closure" id="type_info.resolver.reflection_return" on-invalid="ignore_uninitialized"/>
        <argument key="type_info.resolver.string" type="service_closure" id="type_info.resolver.string" on-invalid="ignore_uninitialized"/>
        <argument key="property_info" type="service_closure" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="property_info.reflection_extractor" type="service_closure" id="property_info.reflection_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="property_info.phpstan_extractor" type="service_closure" id="property_info.phpstan_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="property_info.php_doc_extractor" type="service_closure" id="property_info.php_doc_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="web_link.http_header_serializer" type="service_closure" id="web_link.http_header_serializer" on-invalid="ignore_uninitialized"/>
        <argument key="web_link.add_link_header_listener" type="service_closure" id="web_link.add_link_header_listener" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_access" type="service_closure" id="cache.property_access" on-invalid="ignore_uninitialized"/>
        <argument key="form.resolved_type_factory" type="service_closure" id="form.resolved_type_factory" on-invalid="ignore_uninitialized"/>
        <argument key="form.registry" type="service_closure" id="form.registry" on-invalid="ignore_uninitialized"/>
        <argument key="form.factory" type="service_closure" id="form.factory" on-invalid="ignore_uninitialized"/>
        <argument key="form.extension" type="service_closure" id="form.extension" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_guesser.validator" type="service_closure" id="form.type_guesser.validator" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory.default" type="service_closure" id="form.choice_list_factory.default" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory.property_access" type="service_closure" id="form.choice_list_factory.property_access" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory.cached" type="service_closure" id="form.choice_list_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.form" type="service_closure" id="form.type.form" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.choice" type="service_closure" id="form.type.choice" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.file" type="service_closure" id="form.type.file" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.color" type="service_closure" id="form.type.color" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.form.transformation_failure_handling" type="service_closure" id="form.type_extension.form.transformation_failure_handling" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.form.http_foundation" type="service_closure" id="form.type_extension.form.http_foundation" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.form.request_handler" type="service_closure" id="form.type_extension.form.request_handler" on-invalid="ignore_uninitialized"/>
        <argument key="form.server_params" type="service_closure" id="form.server_params" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.form.validator" type="service_closure" id="form.type_extension.form.validator" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.repeated.validator" type="service_closure" id="form.type_extension.repeated.validator" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.submit.validator" type="service_closure" id="form.type_extension.submit.validator" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.upload.validator" type="service_closure" id="form.type_extension.upload.validator" on-invalid="ignore_uninitialized"/>
        <argument key="validator" type="service_closure" id="validator" on-invalid="ignore_uninitialized"/>
        <argument key="validator.builder" type="service_closure" id="validator.builder" on-invalid="ignore_uninitialized"/>
        <argument key="validator.mapping.cache_warmer" type="service_closure" id="validator.mapping.cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="validator.mapping.cache.adapter" type="service_closure" id="validator.mapping.cache.adapter" on-invalid="ignore_uninitialized"/>
        <argument key="validator.validator_factory" type="service_closure" id="validator.validator_factory" on-invalid="ignore_uninitialized"/>
        <argument key="validator.expression" type="service_closure" id="validator.expression" on-invalid="ignore_uninitialized"/>
        <argument key="validator.expression_language" type="service_closure" id="validator.expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="validator.expression_language_provider" type="service_closure" id="validator.expression_language_provider" on-invalid="ignore_uninitialized"/>
        <argument key="validator.email" type="service_closure" id="validator.email" on-invalid="ignore_uninitialized"/>
        <argument key="validator.not_compromised_password" type="service_closure" id="validator.not_compromised_password" on-invalid="ignore_uninitialized"/>
        <argument key="validator.when" type="service_closure" id="validator.when" on-invalid="ignore_uninitialized"/>
        <argument key="validator.no_suspicious_characters" type="service_closure" id="validator.no_suspicious_characters" on-invalid="ignore_uninitialized"/>
        <argument key="validator.property_info_loader" type="service_closure" id="validator.property_info_loader" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.senders_locator" type="service_closure" id="messenger.senders_locator" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.flatten_exception" type="service_closure" id="serializer.normalizer.flatten_exception" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.transport.native_php_serializer" type="service_closure" id="messenger.transport.native_php_serializer" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.middleware.dispatch_after_current_bus" type="service_closure" id="messenger.middleware.dispatch_after_current_bus" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.middleware.validation" type="service_closure" id="messenger.middleware.validation" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.middleware.reject_redelivered_message_middleware" type="service_closure" id="messenger.middleware.reject_redelivered_message_middleware" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.middleware.failed_message_processing_middleware" type="service_closure" id="messenger.middleware.failed_message_processing_middleware" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.middleware.router_context" type="service_closure" id="messenger.middleware.router_context" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.receiver_locator" type="service_closure" id="messenger.receiver_locator" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.transport_factory" type="service_closure" id="messenger.transport_factory" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.transport.sync.factory" type="service_closure" id="messenger.transport.sync.factory" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.transport.in_memory.factory" type="service_closure" id="messenger.transport.in_memory.factory" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.retry_strategy_locator" type="service_closure" id="messenger.retry_strategy_locator" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.retry.send_failed_message_for_retry_listener" type="service_closure" id="messenger.retry.send_failed_message_for_retry_listener" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.failure.add_error_details_stamp_listener" type="service_closure" id="messenger.failure.add_error_details_stamp_listener" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.listener.dispatch_pcntl_signal_listener" type="service_closure" id="messenger.listener.dispatch_pcntl_signal_listener" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.listener.stop_worker_on_restart_signal_listener" type="service_closure" id="messenger.listener.stop_worker_on_restart_signal_listener" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.listener.stop_worker_on_stop_exception_listener" type="service_closure" id="messenger.listener.stop_worker_on_stop_exception_listener" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.listener.reset_services" type="service_closure" id="messenger.listener.reset_services" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.routable_message_bus" type="service_closure" id="messenger.routable_message_bus" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.redispatch_message_handler" type="service_closure" id="messenger.redispatch_message_handler" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.bus.default" type="service_closure" id="messenger.bus.default" on-invalid="ignore_uninitialized"/>
        <argument key="notifier" type="service_closure" id="notifier" on-invalid="ignore_uninitialized"/>
        <argument key="notifier.channel_policy" type="service_closure" id="notifier.channel_policy" on-invalid="ignore_uninitialized"/>
        <argument key="notifier.flash_message_importance_mapper" type="service_closure" id="notifier.flash_message_importance_mapper" on-invalid="ignore_uninitialized"/>
        <argument key="notifier.channel.browser" type="service_closure" id="notifier.channel.browser" on-invalid="ignore_uninitialized"/>
        <argument key="notifier.channel.chat" type="service_closure" id="notifier.channel.chat" on-invalid="ignore_uninitialized"/>
        <argument key="notifier.channel.sms" type="service_closure" id="notifier.channel.sms" on-invalid="ignore_uninitialized"/>
        <argument key="notifier.channel.email" type="service_closure" id="notifier.channel.email" on-invalid="ignore_uninitialized"/>
        <argument key="notifier.channel.push" type="service_closure" id="notifier.channel.push" on-invalid="ignore_uninitialized"/>
        <argument key="notifier.monolog_handler" type="service_closure" id="notifier.monolog_handler" on-invalid="ignore_uninitialized"/>
        <argument key="notifier.failed_message_listener" type="service_closure" id="notifier.failed_message_listener" on-invalid="ignore_uninitialized"/>
        <argument key="chatter.transports" type="service_closure" id="chatter.transports" on-invalid="ignore_uninitialized"/>
        <argument key="chatter.transport_factory" type="service_closure" id="chatter.transport_factory" on-invalid="ignore_uninitialized"/>
        <argument key="chatter.messenger.chat_handler" type="service_closure" id="chatter.messenger.chat_handler" on-invalid="ignore_uninitialized"/>
        <argument key="texter.transports" type="service_closure" id="texter.transports" on-invalid="ignore_uninitialized"/>
        <argument key="texter.transport_factory" type="service_closure" id="texter.transport_factory" on-invalid="ignore_uninitialized"/>
        <argument key="texter.messenger.sms_handler" type="service_closure" id="texter.messenger.sms_handler" on-invalid="ignore_uninitialized"/>
        <argument key="texter.messenger.push_handler" type="service_closure" id="texter.messenger.push_handler" on-invalid="ignore_uninitialized"/>
        <argument key="notifier.notification_logger_listener" type="service_closure" id="notifier.notification_logger_listener" on-invalid="ignore_uninitialized"/>
        <argument key="notifier.transport_factory.null" type="service_closure" id="notifier.transport_factory.null" on-invalid="ignore_uninitialized"/>
        <argument key="mime_types" type="service_closure" id="mime_types" on-invalid="ignore_uninitialized"/>
        <argument key="tactician.middleware.locking" type="service_closure" id="tactician.middleware.locking" on-invalid="ignore_uninitialized"/>
        <argument key="tactician.handler.method_name_inflector.handle" type="service_closure" id="tactician.handler.method_name_inflector.handle" on-invalid="ignore_uninitialized"/>
        <argument key="tactician.handler.method_name_inflector.class_name" type="service_closure" id="tactician.handler.method_name_inflector.class_name" on-invalid="ignore_uninitialized"/>
        <argument key="tactician.handler.method_name_inflector.handle_class_name" type="service_closure" id="tactician.handler.method_name_inflector.handle_class_name" on-invalid="ignore_uninitialized"/>
        <argument key="tactician.handler.method_name_inflector.handle_class_name_without_suffix" type="service_closure" id="tactician.handler.method_name_inflector.handle_class_name_without_suffix" on-invalid="ignore_uninitialized"/>
        <argument key="tactician.handler.method_name_inflector.invoke" type="service_closure" id="tactician.handler.method_name_inflector.invoke" on-invalid="ignore_uninitialized"/>
        <argument key="tactician.handler.command_name_extractor.class_name" type="service_closure" id="tactician.handler.command_name_extractor.class_name" on-invalid="ignore_uninitialized"/>
        <argument key="tactician.plugins.named_command.extractor" type="service_closure" id="tactician.plugins.named_command.extractor" on-invalid="ignore_uninitialized"/>
        <argument key="tactician.command.debug" type="service_closure" id="tactician.command.debug" on-invalid="ignore_uninitialized"/>
        <argument key="tactician.logger.class_properties_formatter" type="service_closure" id="tactician.logger.class_properties_formatter" on-invalid="ignore_uninitialized"/>
        <argument key="tactician.logger.class_name_formatter" type="service_closure" id="tactician.logger.class_name_formatter" on-invalid="ignore_uninitialized"/>
        <argument key="tactician.middleware.logger" type="service_closure" id="tactician.middleware.logger" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.bus.default.middleware.traceable" type="service_closure" id="messenger.bus.default.middleware.traceable" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.bus.default.middleware.add_bus_name_stamp_middleware" type="service_closure" id="messenger.bus.default.middleware.add_bus_name_stamp_middleware" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.bus.default.middleware.send_message" type="service_closure" id="messenger.bus.default.middleware.send_message" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.bus.default.middleware.handle_message" type="service_closure" id="messenger.bus.default.middleware.handle_message" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.bus.default.messenger.handlers_locator" type="service_closure" id="messenger.bus.default.messenger.handlers_locator" on-invalid="ignore_uninitialized"/>
        <argument key="tactician.middleware.validator" type="service_closure" id="tactician.middleware.validator" on-invalid="ignore_uninitialized"/>
        <argument key="tactician.commandbus.default.handler.service_locator" type="service_closure" id="tactician.commandbus.default.handler.service_locator" on-invalid="ignore_uninitialized"/>
        <argument key="tactician.commandbus.default.handler.locator" type="service_closure" id="tactician.commandbus.default.handler.locator" on-invalid="ignore_uninitialized"/>
        <argument key="tactician.commandbus.default.middleware.command_handler" type="service_closure" id="tactician.commandbus.default.middleware.command_handler" on-invalid="ignore_uninitialized"/>
        <argument key="logger" type="service_closure" id="logger" on-invalid="ignore_uninitialized"/>
        <argument key="http_client.uri_template.inner" type="service_closure" id="http_client.uri_template.inner" on-invalid="ignore_uninitialized"/>
        <argument key="asset_mapper.cached_mapped_asset_factory.inner" type="service_closure" id="asset_mapper.cached_mapped_asset_factory.inner" on-invalid="ignore_uninitialized"/>
        <argument key="asset_mapper.asset_package.inner" type="service_closure" id="asset_mapper.asset_package.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.event_dispatcher.inner" type="service_closure" id="debug.event_dispatcher.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.controller_resolver.inner" type="service_closure" id="debug.controller_resolver.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.inner" type="service_closure" id="debug.argument_resolver.inner" on-invalid="ignore_uninitialized"/>
        <argument key="Eurega\ShoppingList\Domain\Repository\Usuario\UsuarioParticularReadRepository" type="service_closure" id="Tests\Shared\Infrastructure\Repository\UsuarioParticularReadRepository" on-invalid="ignore_uninitialized"/>
        <argument key="Eurega\ShoppingList\Domain\Repository\Usuario\UsuarioParticularWriteRepository" type="service_closure" id="Tests\Shared\Infrastructure\Repository\MysqlUsuarioParticularWriteRepository" on-invalid="ignore_uninitialized"/>
        <argument key="Eurega\Shared\Domain\Bus\Event\EventBus" type="service_closure" id="Eurega\Shared\Infrastructure\Bus\Event\InMemory\InMemorySymfonyEventBus" on-invalid="ignore_uninitialized"/>
        <argument key="Eurega\Shared\Domain\RandomNumberGenerator" type="service_closure" id="App\ShoppingList\Backend\Test\ConstantRandomNumberGenerator" on-invalid="ignore_uninitialized"/>
        <argument key="Eurega\Shared\Domain\Bus\Command\CommandBusRead" type="service_closure" id="Eurega\Shared\Infrastructure\Bus\Command\Tactician\TacticianCommandBusRead" on-invalid="ignore_uninitialized"/>
        <argument key="Eurega\Shared\Domain\Bus\Command\CommandBusWrite" type="service_closure" id="Eurega\Shared\Infrastructure\Bus\Command\Tactician\TacticianCommandBusWrite" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface" type="service_closure" id="parameter_bag" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface" type="service_closure" id="parameter_bag" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\EventDispatcher\EventDispatcherInterface" type="service_closure" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Contracts\EventDispatcher\EventDispatcherInterface" type="service_closure" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\EventDispatcher\EventDispatcherInterface" type="service_closure" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\HttpKernelInterface" type="service_closure" id="http_kernel" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpFoundation\RequestStack" type="service_closure" id="request_stack" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\HttpCache\StoreInterface" type="service_closure" id="http_cache.store" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpFoundation\UrlHelper" type="service_closure" id="url_helper" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\KernelInterface" type="service_closure" id="kernel" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Filesystem\Filesystem" type="service_closure" id="filesystem" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\Config\FileLocator" type="service_closure" id="file_locator" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\DependencyInjection\ReverseContainer" type="service_closure" id="reverse_container" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\String\Slugger\SluggerInterface" type="service_closure" id="slugger" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Clock\ClockInterface" type="service_closure" id="clock" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Clock\ClockInterface" type="service_closure" id="clock" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\Fragment\FragmentUriGeneratorInterface" type="service_closure" id="fragment.uri_generator" on-invalid="ignore_uninitialized"/>
        <argument key="error_renderer.html" type="service_closure" id="error_handler.error_renderer.html" on-invalid="ignore_uninitialized"/>
        <argument key="error_renderer" type="service_closure" id="error_handler.error_renderer.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Container\ContainerInterface $parameterBag" type="service_closure" id="parameter_bag" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Cache\CacheItemPoolInterface" type="service_closure" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Contracts\Cache\CacheInterface" type="service_closure" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Contracts\Cache\TagAwareCacheInterface" type="service_closure" id="cache.app.taggable" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Contracts\Translation\TranslatorInterface" type="service_closure" id="translator.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Asset\Packages" type="service_closure" id="assets.packages" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\AssetMapper\AssetMapperInterface" type="service_closure" id="asset_mapper" on-invalid="ignore_uninitialized"/>
        <argument key="asset_mapper.http_client" type="service_closure" id="http_client.uri_template" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\AssetMapper\ImportMap\ImportMapManager" type="service_closure" id="asset_mapper.importmap.manager" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Contracts\HttpClient\HttpClientInterface" type="service_closure" id="http_client.uri_template" on-invalid="ignore_uninitialized"/>
        <argument key="mailer" type="service_closure" id="mailer.mailer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Mailer\MailerInterface" type="service_closure" id="mailer.mailer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Mailer\Transport\TransportInterface" type="service_closure" id="mailer.default_transport" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Translation\Reader\TranslationReaderInterface" type="service_closure" id="translation.reader" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Translation\Extractor\ExtractorInterface" type="service_closure" id="translation.extractor" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Translation\Writer\TranslationWriterInterface" type="service_closure" id="translation.writer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Contracts\Translation\LocaleAwareInterface" type="service_closure" id="translation.locale_switcher" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Translation\LocaleSwitcher" type="service_closure" id="translation.locale_switcher" on-invalid="ignore_uninitialized"/>
        <argument key="translator.formatter" type="service_closure" id="translator.formatter.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\ErrorHandler\ErrorRenderer\FileLinkFormatter" type="service_closure" id="debug.file_link_formatter" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Stopwatch\Stopwatch" type="service_closure" id="debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\RouterInterface" type="service_closure" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\Generator\UrlGeneratorInterface" type="service_closure" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\Matcher\UrlMatcherInterface" type="service_closure" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\RequestContextAwareInterface" type="service_closure" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\RequestContext" type="service_closure" id="router.request_context" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyAccess\PropertyAccessorInterface" type="service_closure" id="property_accessor" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\SerializerInterface" type="service_closure" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Normalizer\NormalizerInterface" type="service_closure" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Normalizer\DenormalizerInterface" type="service_closure" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Encoder\EncoderInterface" type="service_closure" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Encoder\DecoderInterface" type="service_closure" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.property_accessor" type="service_closure" id="property_accessor" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Mapping\ClassDiscriminatorResolverInterface" type="service_closure" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactoryInterface" type="service_closure" id="serializer.mapping.class_metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="error_renderer.serializer" type="service_closure" id="error_handler.error_renderer.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\TypeInfo\TypeResolver\TypeResolverInterface" type="service_closure" id="type_info.resolver" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyAccessExtractorInterface" type="service_closure" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyDescriptionExtractorInterface" type="service_closure" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyInfoExtractorInterface" type="service_closure" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyTypeExtractorInterface" type="service_closure" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyListExtractorInterface" type="service_closure" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyInitializableExtractorInterface" type="service_closure" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyReadInfoExtractorInterface" type="service_closure" id="property_info.reflection_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyWriteInfoExtractorInterface" type="service_closure" id="property_info.reflection_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\WebLink\HttpHeaderSerializer" type="service_closure" id="web_link.http_header_serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_redis_provider" type="service_closure" id=".cache_connection.MfCypIA" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_memcached_provider" type="service_closure" id=".cache_connection.8kvDmRs" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Form\ResolvedFormTypeFactoryInterface" type="service_closure" id="form.resolved_type_factory" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Form\FormRegistryInterface" type="service_closure" id="form.registry" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Form\FormFactoryInterface" type="service_closure" id="form.factory" on-invalid="ignore_uninitialized"/>
        <argument key="form.property_accessor" type="service_closure" id="property_accessor" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory" type="service_closure" id="form.choice_list_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Validator\Validator\ValidatorInterface" type="service_closure" id="validator" on-invalid="ignore_uninitialized"/>
        <argument key="validator.mapping.class_metadata_factory" type="service_closure" id="validator" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.default_serializer" type="service_closure" id="messenger.transport.native_php_serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Messenger\MessageBusInterface" type="service_closure" id="messenger.bus.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Notifier\NotifierInterface" type="service_closure" id="notifier" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Mime\MimeTypesInterface" type="service_closure" id="mime_types" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Mime\MimeTypeGuesserInterface" type="service_closure" id="mime_types" on-invalid="ignore_uninitialized"/>
        <argument key="Behat\Mink\Mink" type="service_closure" id="behat.mink" on-invalid="ignore_uninitialized"/>
        <argument key="Behat\Mink\Session" type="service_closure" id="behat.mink.default_session" on-invalid="ignore_uninitialized"/>
        <argument key="FriendsOfBehat\SymfonyExtension\Mink\MinkParameters" type="service_closure" id="behat.mink.parameters" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\DependencyInjection\ContainerInterface $driverContainer" type="service_closure" id="behat.driver.service_container" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.controller_locator" type="service_closure" id=".service_locator.Sr6W89v" on-invalid="ignore_uninitialized"/>
        <argument key="League\Tactician\CommandBus $defaultBus" type="service_closure" id="tactician.commandbus.default" on-invalid="ignore_uninitialized"/>
        <argument key="tactician.commandbus" type="service_closure" id="tactician.commandbus.default" on-invalid="ignore_uninitialized"/>
        <argument key="League\Tactician\CommandBus" type="service_closure" id="tactician.commandbus.default" on-invalid="ignore_uninitialized"/>
        <argument key="tactician.handler.locator.symfony" type="service_closure" id="tactician.commandbus.default.handler.locator" on-invalid="ignore_uninitialized"/>
        <argument key="tactician.middleware.command_handler" type="service_closure" id="tactician.commandbus.default.middleware.command_handler" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface" type="service_closure" id="logger" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Bundle\FrameworkBundle\KernelBrowser" type="service_closure" id="test.client" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\HttpKernelBrowser" type="service_closure" id="test.client" on-invalid="ignore_uninitialized"/>
        <argument key="http_client" type="service_closure" id="http_client.uri_template" on-invalid="ignore_uninitialized"/>
        <argument key="asset_mapper.mapped_asset_factory" type="service_closure" id="asset_mapper.cached_mapped_asset_factory" on-invalid="ignore_uninitialized"/>
        <argument key="assets._default_package" type="service_closure" id="asset_mapper.asset_package" on-invalid="ignore_uninitialized"/>
        <argument key="controller_resolver" type="service_closure" id="debug.controller_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver" type="service_closure" id="debug.argument_resolver" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="assets.packages" class="Symfony\Component\Asset\Packages">
      <argument type="service" id="asset_mapper.asset_package"/>
      <argument type="tagged_iterator" tag="assets.package" index-by="package" default-index-method="getDefaultPackageName" default-priority-method="getDefaultPackagePriority"/>
    </service>
    <service id="assets.empty_package" class="Symfony\Component\Asset\Package">
      <argument type="service" id="assets.empty_version_strategy"/>
    </service>
    <service id="assets.context" class="Symfony\Component\Asset\Context\RequestStackContext">
      <argument type="service" id="request_stack"/>
      <argument type="service">
        <service class="string">
          <factory service="router.request_context" method="getBaseUrl"/>
        </service>
      </argument>
      <argument type="service">
        <service class="bool">
          <factory service="router.request_context" method="isSecure"/>
        </service>
      </argument>
    </service>
    <service id="assets.path_package" class="Symfony\Component\Asset\PathPackage" abstract="true">
      <argument type="abstract">base path</argument>
      <argument type="abstract">version strategy</argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.url_package" class="Symfony\Component\Asset\UrlPackage" abstract="true">
      <argument type="abstract">base URLs</argument>
      <argument type="abstract">version strategy</argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.static_version_strategy" class="Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy" abstract="true">
      <argument type="abstract">version</argument>
      <argument type="abstract">format</argument>
    </service>
    <service id="assets.empty_version_strategy" class="Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy"/>
    <service id="assets.json_manifest_version_strategy" class="Symfony\Component\Asset\VersionStrategy\JsonManifestVersionStrategy" abstract="true">
      <argument type="abstract">manifest path</argument>
      <argument type="service" id="http_client.uri_template" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="asset_mapper" class="Symfony\Component\AssetMapper\AssetMapper">
      <argument type="service" id="asset_mapper.repository"/>
      <argument type="service" id="asset_mapper.cached_mapped_asset_factory"/>
      <argument type="service" id="asset_mapper.compiled_asset_mapper_config_reader"/>
    </service>
    <service id="asset_mapper.cached_mapped_asset_factory" class="Symfony\Component\AssetMapper\Factory\CachedMappedAssetFactory">
      <tag name="container.decorator" id="asset_mapper.mapped_asset_factory" inner="asset_mapper.cached_mapped_asset_factory.inner"/>
      <argument type="service" id="asset_mapper.cached_mapped_asset_factory.inner"/>
      <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend\var\cache\test/asset_mapper</argument>
      <argument>true</argument>
    </service>
    <service id="asset_mapper.repository" class="Symfony\Component\AssetMapper\AssetMapperRepository">
      <argument type="collection"/>
      <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend</argument>
      <argument type="collection"/>
      <argument>true</argument>
      <argument>true</argument>
    </service>
    <service id="asset_mapper.public_assets_path_resolver" class="Symfony\Component\AssetMapper\Path\PublicAssetsPathResolver">
      <argument>/assets/</argument>
    </service>
    <service id="asset_mapper.local_public_assets_filesystem" class="Symfony\Component\AssetMapper\Path\LocalPublicAssetsFilesystem">
      <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend/public</argument>
    </service>
    <service id="asset_mapper.compiled_asset_mapper_config_reader" class="Symfony\Component\AssetMapper\CompiledAssetMapperConfigReader">
      <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend/public/assets</argument>
    </service>
    <service id="asset_mapper.asset_package" class="Symfony\Component\AssetMapper\MapperAwareAssetPackage">
      <tag name="container.decorator" id="assets._default_package" inner="asset_mapper.asset_package.inner"/>
      <argument type="service" id="asset_mapper.asset_package.inner"/>
      <argument type="service" id="asset_mapper"/>
    </service>
    <service id="asset_mapper.dev_server_subscriber" class="Symfony\Component\AssetMapper\AssetMapperDevServerSubscriber">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="asset_mapper"/>
      <argument>/assets/</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.asset_mapper"/>
      <argument>null</argument>
    </service>
    <service id="asset_mapper.command.compile" class="Symfony\Component\AssetMapper\Command\AssetMapperCompileCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="asset_mapper.compiled_asset_mapper_config_reader"/>
      <argument type="service" id="asset_mapper"/>
      <argument type="service" id="asset_mapper.importmap.generator"/>
      <argument type="service" id="asset_mapper.local_public_assets_filesystem"/>
      <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend</argument>
      <argument>true</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <call method="setName">
        <argument>asset-map:compile</argument>
      </call>
      <call method="setDescription">
        <argument>Compile all mapped assets and writes them to the final public output directory</argument>
      </call>
    </service>
    <service id="asset_mapper.command.debug" class="Symfony\Component\AssetMapper\Command\DebugAssetMapperCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="asset_mapper"/>
      <argument type="service" id="asset_mapper.repository"/>
      <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend</argument>
      <call method="setName">
        <argument>debug:asset-map</argument>
      </call>
      <call method="setDescription">
        <argument>Output all mapped assets</argument>
      </call>
    </service>
    <service id="asset_mapper_compiler" class="Symfony\Component\AssetMapper\AssetMapperCompiler">
      <argument type="tagged_iterator" tag="asset_mapper.compiler"/>
      <argument type="service_closure" id="asset_mapper"/>
    </service>
    <service id="asset_mapper.compiler.css_asset_url_compiler" class="Symfony\Component\AssetMapper\Compiler\CssAssetUrlCompiler">
      <tag name="asset_mapper.compiler"/>
      <tag name="monolog.logger" channel="asset_mapper"/>
      <argument>warn</argument>
      <argument type="service" id="logger"/>
    </service>
    <service id="asset_mapper.compiler.source_mapping_urls_compiler" class="Symfony\Component\AssetMapper\Compiler\SourceMappingUrlsCompiler">
      <tag name="asset_mapper.compiler"/>
    </service>
    <service id="asset_mapper.compiler.javascript_import_path_compiler" class="Symfony\Component\AssetMapper\Compiler\JavaScriptImportPathCompiler">
      <tag name="asset_mapper.compiler"/>
      <tag name="monolog.logger" channel="asset_mapper"/>
      <argument type="service" id="asset_mapper.importmap.config_reader"/>
      <argument>warn</argument>
      <argument type="service" id="logger"/>
    </service>
    <service id="asset_mapper.importmap.config_reader" class="Symfony\Component\AssetMapper\ImportMap\ImportMapConfigReader">
      <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend/importmap.php</argument>
      <argument type="service" id="asset_mapper.importmap.remote_package_storage"/>
    </service>
    <service id="asset_mapper.importmap.manager" class="Symfony\Component\AssetMapper\ImportMap\ImportMapManager">
      <argument type="service" id="asset_mapper"/>
      <argument type="service" id="asset_mapper.importmap.config_reader"/>
      <argument type="service" id="asset_mapper.importmap.remote_package_downloader"/>
      <argument type="service" id="asset_mapper.importmap.resolver"/>
    </service>
    <service id="asset_mapper.importmap.generator" class="Symfony\Component\AssetMapper\ImportMap\ImportMapGenerator">
      <argument type="service" id="asset_mapper"/>
      <argument type="service" id="asset_mapper.compiled_asset_mapper_config_reader"/>
      <argument type="service" id="asset_mapper.importmap.config_reader"/>
    </service>
    <service id="asset_mapper.importmap.remote_package_storage" class="Symfony\Component\AssetMapper\ImportMap\RemotePackageStorage">
      <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend/assets/vendor</argument>
    </service>
    <service id="asset_mapper.importmap.remote_package_downloader" class="Symfony\Component\AssetMapper\ImportMap\RemotePackageDownloader">
      <argument type="service" id="asset_mapper.importmap.remote_package_storage"/>
      <argument type="service" id="asset_mapper.importmap.config_reader"/>
      <argument type="service" id="asset_mapper.importmap.resolver"/>
    </service>
    <service id="asset_mapper.importmap.version_checker" class="Symfony\Component\AssetMapper\ImportMap\ImportMapVersionChecker">
      <argument type="service" id="asset_mapper.importmap.config_reader"/>
      <argument type="service" id="asset_mapper.importmap.remote_package_downloader"/>
    </service>
    <service id="asset_mapper.importmap.resolver" class="Symfony\Component\AssetMapper\ImportMap\Resolver\JsDelivrEsmResolver">
      <argument type="service" id="http_client.uri_template"/>
    </service>
    <service id="asset_mapper.importmap.renderer" class="Symfony\Component\AssetMapper\ImportMap\ImportMapRenderer">
      <argument type="service" id="asset_mapper.importmap.generator"/>
      <argument type="service" id="assets.packages" on-invalid="null"/>
      <argument>UTF-8</argument>
      <argument>es-module-shims</argument>
      <argument type="collection"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="asset_mapper.importmap.auditor" class="Symfony\Component\AssetMapper\ImportMap\ImportMapAuditor">
      <argument type="service" id="asset_mapper.importmap.config_reader"/>
      <argument type="service" id="http_client.uri_template"/>
    </service>
    <service id="asset_mapper.importmap.update_checker" class="Symfony\Component\AssetMapper\ImportMap\ImportMapUpdateChecker">
      <argument type="service" id="asset_mapper.importmap.config_reader"/>
      <argument type="service" id="http_client.uri_template"/>
    </service>
    <service id="asset_mapper.importmap.command.require" class="Symfony\Component\AssetMapper\Command\ImportMapRequireCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="asset_mapper.importmap.manager"/>
      <argument type="service" id="asset_mapper.importmap.version_checker"/>
      <call method="setName">
        <argument>importmap:require</argument>
      </call>
      <call method="setDescription">
        <argument>Require JavaScript packages</argument>
      </call>
    </service>
    <service id="asset_mapper.importmap.command.remove" class="Symfony\Component\AssetMapper\Command\ImportMapRemoveCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="asset_mapper.importmap.manager"/>
      <call method="setName">
        <argument>importmap:remove</argument>
      </call>
      <call method="setDescription">
        <argument>Remove JavaScript packages</argument>
      </call>
    </service>
    <service id="asset_mapper.importmap.command.update" class="Symfony\Component\AssetMapper\Command\ImportMapUpdateCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="asset_mapper.importmap.manager"/>
      <argument type="service" id="asset_mapper.importmap.version_checker"/>
      <call method="setName">
        <argument>importmap:update</argument>
      </call>
      <call method="setDescription">
        <argument>Update JavaScript packages to their latest versions</argument>
      </call>
    </service>
    <service id="asset_mapper.importmap.command.install" class="Symfony\Component\AssetMapper\Command\ImportMapInstallCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="asset_mapper.importmap.remote_package_downloader"/>
      <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend</argument>
      <call method="setName">
        <argument>importmap:install</argument>
      </call>
      <call method="setDescription">
        <argument>Download all assets that should be downloaded</argument>
      </call>
    </service>
    <service id="asset_mapper.importmap.command.audit" class="Symfony\Component\AssetMapper\Command\ImportMapAuditCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="asset_mapper.importmap.auditor"/>
      <call method="setName">
        <argument>importmap:audit</argument>
      </call>
      <call method="setDescription">
        <argument>Check for security vulnerability advisories for dependencies</argument>
      </call>
    </service>
    <service id="asset_mapper.importmap.command.outdated" class="Symfony\Component\AssetMapper\Command\ImportMapOutdatedCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="asset_mapper.importmap.update_checker"/>
      <call method="setName">
        <argument>importmap:outdated</argument>
      </call>
      <call method="setDescription">
        <argument>List outdated JavaScript packages and their latest versions</argument>
      </call>
    </service>
    <service id="http_client.transport" class="Symfony\Contracts\HttpClient\HttpClientInterface">
      <tag name="monolog.logger" channel="http_client"/>
      <tag name="kernel.reset" method="reset" on_invalid="ignore"/>
      <argument type="collection"/>
      <argument>6</argument>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
      <factory class="Symfony\Component\HttpClient\HttpClient" method="create"/>
    </service>
    <service id="http_client.abstract_retry_strategy" class="Symfony\Component\HttpClient\Retry\GenericRetryStrategy" abstract="true">
      <argument type="abstract">http codes</argument>
      <argument type="abstract">delay ms</argument>
      <argument type="abstract">multiplier</argument>
      <argument type="abstract">max delay ms</argument>
      <argument type="abstract">jitter</argument>
    </service>
    <service id="http_client.uri_template" class="Symfony\Component\HttpClient\UriTemplateHttpClient">
      <tag name="http_client.client"/>
      <tag name="container.decorator" id="http_client" inner="http_client.uri_template.inner"/>
      <argument type="service" id="http_client.uri_template.inner"/>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="http_client.uri_template_expander.guzzle" class="Closure">
      <argument type="collection">
        <argument>GuzzleHttp\UriTemplate\UriTemplate</argument>
        <argument>expand</argument>
      </argument>
      <factory class="Closure" method="fromCallable"/>
    </service>
    <service id="http_client.uri_template_expander.rize" class="Closure">
      <argument type="collection">
        <argument type="service">
          <service class="Rize\UriTemplate"/>
        </argument>
        <argument>expand</argument>
      </argument>
      <factory class="Closure" method="fromCallable"/>
    </service>
    <service id="http_client.messenger.ping_webhook_handler" class="Symfony\Component\HttpClient\Messenger\PingWebhookMessageHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="http_client.uri_template"/>
    </service>
    <service id="mailer.mailer" class="Symfony\Component\Mailer\Mailer">
      <argument type="service" id="mailer.transports"/>
      <argument type="service" id="messenger.bus.default" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
    </service>
    <service id="mailer.transports" class="Symfony\Component\Mailer\Transport\Transports">
      <argument type="collection">
        <argument key="main">smtp://null</argument>
      </argument>
      <factory service="mailer.transport_factory" method="fromStrings"/>
    </service>
    <service id="mailer.transport_factory" class="Symfony\Component\Mailer\Transport">
      <argument type="tagged_iterator" tag="mailer.transport_factory"/>
    </service>
    <service id="mailer.default_transport" class="Symfony\Component\Mailer\Transport\TransportInterface">
      <argument>smtp://null</argument>
      <factory service="mailer.transport_factory" method="fromString"/>
    </service>
    <service id="mailer.messenger.message_handler" class="Symfony\Component\Mailer\Messenger\MessageHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="mailer.transports"/>
    </service>
    <service id="mailer.envelope_listener" class="Symfony\Component\Mailer\EventListener\EnvelopeListener">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="mailer.message_logger_listener" class="Symfony\Component\Mailer\EventListener\MessageLoggerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
    </service>
    <service id="mailer.messenger_transport_listener" class="Symfony\Component\Mailer\EventListener\MessengerTransportListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="console.command.mailer_test" class="Symfony\Component\Mailer\Command\MailerTestCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="mailer.transports"/>
      <call method="setName">
        <argument>mailer:test</argument>
      </call>
      <call method="setDescription">
        <argument>Test Mailer transports by sending an email</argument>
      </call>
    </service>
    <service id="mailer.transport_factory.abstract" class="Symfony\Component\Mailer\Transport\AbstractTransportFactory" abstract="true">
      <tag name="monolog.logger" channel="mailer"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="http_client.uri_template" on-invalid="ignore"/>
      <argument type="service" id="logger" on-invalid="ignore"/>
    </service>
    <service id="mailer.transport_factory.native" class="Symfony\Component\Mailer\Transport\NativeTransportFactory">
      <tag name="mailer.transport_factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="http_client.uri_template" on-invalid="ignore"/>
      <argument type="service" id="logger" on-invalid="ignore"/>
    </service>
    <service id="mailer.transport_factory.null" class="Symfony\Component\Mailer\Transport\NullTransportFactory">
      <tag name="mailer.transport_factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="http_client.uri_template" on-invalid="ignore"/>
      <argument type="service" id="logger" on-invalid="ignore"/>
    </service>
    <service id="mailer.transport_factory.sendmail" class="Symfony\Component\Mailer\Transport\SendmailTransportFactory">
      <tag name="mailer.transport_factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="http_client.uri_template" on-invalid="ignore"/>
      <argument type="service" id="logger" on-invalid="ignore"/>
    </service>
    <service id="mailer.transport_factory.smtp" class="Symfony\Component\Mailer\Transport\Smtp\EsmtpTransportFactory">
      <tag name="mailer.transport_factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="http_client.uri_template" on-invalid="ignore"/>
      <argument type="service" id="logger" on-invalid="ignore"/>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator">
      <tag name="kernel.locale_aware"/>
      <argument type="service" id=".service_locator.ILdUWIS"/>
      <argument type="service" id="translator.formatter.default"/>
      <argument>en</argument>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yaml</argument>
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend\var\cache\test/translations</argument>
        <argument key="debug">true</argument>
        <argument key="resource_files" type="collection">
          <argument key="af" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.af.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.af.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.af.xlf</argument>
          </argument>
          <argument key="ar" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.ar.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.ar.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.ar.xlf</argument>
          </argument>
          <argument key="az" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.az.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.az.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.az.xlf</argument>
          </argument>
          <argument key="be" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.be.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.be.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.be.xlf</argument>
          </argument>
          <argument key="bg" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.bg.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.bg.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.bg.xlf</argument>
          </argument>
          <argument key="bs" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.bs.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.bs.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.bs.xlf</argument>
          </argument>
          <argument key="ca" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.ca.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.ca.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.ca.xlf</argument>
          </argument>
          <argument key="cs" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.cs.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.cs.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.cs.xlf</argument>
          </argument>
          <argument key="cy" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.cy.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.cy.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.cy.xlf</argument>
          </argument>
          <argument key="da" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.da.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.da.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.da.xlf</argument>
          </argument>
          <argument key="de" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.de.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.de.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.de.xlf</argument>
          </argument>
          <argument key="el" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.el.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.el.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.el.xlf</argument>
          </argument>
          <argument key="en" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.en.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.en.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.en.xlf</argument>
          </argument>
          <argument key="es" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.es.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.es.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.es.xlf</argument>
          </argument>
          <argument key="et" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.et.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.et.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.et.xlf</argument>
          </argument>
          <argument key="eu" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.eu.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.eu.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.eu.xlf</argument>
          </argument>
          <argument key="fa" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.fa.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.fa.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.fa.xlf</argument>
          </argument>
          <argument key="fi" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.fi.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.fi.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.fi.xlf</argument>
          </argument>
          <argument key="fr" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.fr.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.fr.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.fr.xlf</argument>
          </argument>
          <argument key="gl" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.gl.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.gl.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.gl.xlf</argument>
          </argument>
          <argument key="he" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.he.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.he.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.he.xlf</argument>
          </argument>
          <argument key="hr" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.hr.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.hr.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.hr.xlf</argument>
          </argument>
          <argument key="hu" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.hu.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.hu.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.hu.xlf</argument>
          </argument>
          <argument key="hy" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.hy.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.hy.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.hy.xlf</argument>
          </argument>
          <argument key="id" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.id.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.id.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.id.xlf</argument>
          </argument>
          <argument key="it" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.it.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.it.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.it.xlf</argument>
          </argument>
          <argument key="ja" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.ja.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.ja.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.ja.xlf</argument>
          </argument>
          <argument key="lb" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.lb.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.lb.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.lb.xlf</argument>
          </argument>
          <argument key="lt" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.lt.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.lt.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.lt.xlf</argument>
          </argument>
          <argument key="lv" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.lv.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.lv.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.lv.xlf</argument>
          </argument>
          <argument key="mk" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.mk.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.mk.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.mk.xlf</argument>
          </argument>
          <argument key="mn" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.mn.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.mn.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.mn.xlf</argument>
          </argument>
          <argument key="my" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.my.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.my.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.my.xlf</argument>
          </argument>
          <argument key="nb" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.nb.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.nb.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.nb.xlf</argument>
          </argument>
          <argument key="nl" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.nl.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.nl.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.nl.xlf</argument>
          </argument>
          <argument key="nn" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.nn.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.nn.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.nn.xlf</argument>
          </argument>
          <argument key="no" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.no.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.no.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.no.xlf</argument>
          </argument>
          <argument key="pl" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.pl.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.pl.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.pl.xlf</argument>
          </argument>
          <argument key="pt" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.pt.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.pt.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.pt.xlf</argument>
          </argument>
          <argument key="pt_BR" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.pt_BR.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.pt_BR.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.pt_BR.xlf</argument>
          </argument>
          <argument key="ro" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.ro.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.ro.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.ro.xlf</argument>
          </argument>
          <argument key="ru" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.ru.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.ru.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.ru.xlf</argument>
          </argument>
          <argument key="sk" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.sk.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.sk.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.sk.xlf</argument>
          </argument>
          <argument key="sl" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.sl.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.sl.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.sl.xlf</argument>
          </argument>
          <argument key="sq" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.sq.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.sq.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.sq.xlf</argument>
          </argument>
          <argument key="sr_Cyrl" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.sr_Cyrl.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.sr_Cyrl.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.sr_Cyrl.xlf</argument>
          </argument>
          <argument key="sr_Latn" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.sr_Latn.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.sr_Latn.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.sr_Latn.xlf</argument>
          </argument>
          <argument key="sv" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.sv.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.sv.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.sv.xlf</argument>
          </argument>
          <argument key="th" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.th.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.th.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.th.xlf</argument>
          </argument>
          <argument key="tl" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.tl.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.tl.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.tl.xlf</argument>
          </argument>
          <argument key="tr" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.tr.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.tr.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.tr.xlf</argument>
          </argument>
          <argument key="uk" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.uk.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.uk.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.uk.xlf</argument>
          </argument>
          <argument key="ur" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.ur.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.ur.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.ur.xlf</argument>
          </argument>
          <argument key="uz" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.uz.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.uz.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.uz.xlf</argument>
          </argument>
          <argument key="vi" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.vi.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.vi.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.vi.xlf</argument>
          </argument>
          <argument key="zh_CN" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.zh_CN.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.zh_CN.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.zh_CN.xlf</argument>
          </argument>
          <argument key="zh_TW" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations\validators.zh_TW.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations\validators.zh_TW.xlf</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations\security.zh_TW.xlf</argument>
          </argument>
        </argument>
        <argument key="scanned_directories" type="collection">
          <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations</argument>
          <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations</argument>
          <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations</argument>
          <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\framework-bundle/translations</argument>
          <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\league\tactician-bundle\src/translations</argument>
          <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\doctrine\doctrine-bundle/translations</argument>
          <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\friends-of-behat\symfony-extension\src\Bundle/translations</argument>
          <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend/translations</argument>
        </argument>
        <argument key="cache_vary" type="collection">
          <argument key="scanned_directories" type="collection">
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\validator/Resources/translations</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/translations</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\security-core/Resources/translations</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\framework-bundle/translations</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\league\tactician-bundle\src/translations</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\doctrine\doctrine-bundle/translations</argument>
            <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\friends-of-behat\symfony-extension\src\Bundle/translations</argument>
            <argument>translations</argument>
          </argument>
        </argument>
      </argument>
      <argument type="collection"/>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="setFallbackLocales">
        <argument type="collection">
          <argument>en</argument>
        </argument>
      </call>
    </service>
    <service id="translator.logging" class="Symfony\Component\Translation\LoggingTranslator">
      <tag name="monolog.logger" channel="translation"/>
      <argument type="service" id="translator.logging.inner"/>
      <argument type="service" id="logger"/>
    </service>
    <service id="translator.formatter.default" class="Symfony\Component\Translation\Formatter\MessageFormatter">
      <argument type="service" id="identity_translator"/>
    </service>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader">
      <tag name="translation.loader" alias="yaml" legacy-alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="Symfony\Component\Translation\Loader\XliffFileLoader">
      <tag name="translation.loader" alias="xlf" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuDatFileLoader">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.loader.json" class="Symfony\Component\Translation\Loader\JsonFileLoader">
      <tag name="translation.loader" alias="json"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.xliff.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper">
      <tag name="translation.dumper" alias="xliff"/>
      <argument>xliff</argument>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.yaml" class="Symfony\Component\Translation\Dumper\YamlFileDumper">
      <tag name="translation.dumper" alias="yaml"/>
      <argument>yaml</argument>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.json" class="Symfony\Component\Translation\Dumper\JsonFileDumper">
      <tag name="translation.dumper" alias="json"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php_ast" class="Symfony\Component\Translation\Extractor\PhpAstExtractor">
      <tag name="translation.extractor" alias="php"/>
      <argument type="tagged_iterator" tag="translation.extractor.visitor"/>
    </service>
    <service id="translation.extractor.visitor.trans_method" class="Symfony\Component\Translation\Extractor\Visitor\TransMethodVisitor">
      <tag name="translation.extractor.visitor"/>
    </service>
    <service id="translation.extractor.visitor.translatable_message" class="Symfony\Component\Translation\Extractor\Visitor\TranslatableMessageVisitor">
      <tag name="translation.extractor.visitor"/>
    </service>
    <service id="translation.extractor.visitor.constraint" class="Symfony\Component\Translation\Extractor\Visitor\ConstraintVisitor">
      <tag name="translation.extractor.visitor"/>
      <argument type="collection">
        <argument>All</argument>
        <argument>AtLeastOneOf</argument>
        <argument>Bic</argument>
        <argument>Blank</argument>
        <argument>Callback</argument>
        <argument>CardScheme</argument>
        <argument>Charset</argument>
        <argument>Choice</argument>
        <argument>Cidr</argument>
        <argument>Collection</argument>
        <argument>Compound</argument>
        <argument>Count</argument>
        <argument>Country</argument>
        <argument>CssColor</argument>
        <argument>Currency</argument>
        <argument>DateTime</argument>
        <argument>Date</argument>
        <argument>DivisibleBy</argument>
        <argument>Email</argument>
        <argument>EqualTo</argument>
        <argument>ExpressionSyntax</argument>
        <argument>Expression</argument>
        <argument>File</argument>
        <argument>GreaterThanOrEqual</argument>
        <argument>GreaterThan</argument>
        <argument>Hostname</argument>
        <argument>Iban</argument>
        <argument>IdenticalTo</argument>
        <argument>Image</argument>
        <argument>Ip</argument>
        <argument>IsFalse</argument>
        <argument>IsNull</argument>
        <argument>IsTrue</argument>
        <argument>Isbn</argument>
        <argument>Isin</argument>
        <argument>Issn</argument>
        <argument>Json</argument>
        <argument>Language</argument>
        <argument>Length</argument>
        <argument>LessThanOrEqual</argument>
        <argument>LessThan</argument>
        <argument>Locale</argument>
        <argument>Luhn</argument>
        <argument>MacAddress</argument>
        <argument>NoSuspiciousCharacters</argument>
        <argument>NotBlank</argument>
        <argument>NotCompromisedPassword</argument>
        <argument>NotEqualTo</argument>
        <argument>NotIdenticalTo</argument>
        <argument>NotNull</argument>
        <argument>PasswordStrength</argument>
        <argument>Range</argument>
        <argument>Regex</argument>
        <argument>Sequentially</argument>
        <argument>Time</argument>
        <argument>Timezone</argument>
        <argument>Type</argument>
        <argument>Ulid</argument>
        <argument>Unique</argument>
        <argument>Url</argument>
        <argument>Uuid</argument>
        <argument>Valid</argument>
        <argument>When</argument>
        <argument>Expression</argument>
        <argument>Email</argument>
        <argument>NotCompromisedPassword</argument>
        <argument>When</argument>
        <argument>NoSuspiciousCharacters</argument>
      </argument>
    </service>
    <service id="translation.reader" class="Symfony\Component\Translation\Reader\TranslationReader">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yaml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php_ast"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>xliff</argument>
        <argument type="service" id="translation.dumper.xliff.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>yaml</argument>
        <argument type="service" id="translation.dumper.yaml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>json</argument>
        <argument type="service" id="translation.dumper.json"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="translation.warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer">
      <tag name="container.service_subscriber" id="translator"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.DMfgFyO.translation.warmer"/>
    </service>
    <service id="translation.locale_switcher" class="Symfony\Component\Translation\LocaleSwitcher">
      <tag name="kernel.reset" method="reset"/>
      <tag name="kernel.locale_aware"/>
      <argument>en</argument>
      <argument type="tagged_iterator" tag="kernel.locale_aware" exclude="translation.locale_switcher"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
    </service>
    <service id="translation.provider_collection" class="Symfony\Component\Translation\Provider\TranslationProviderCollection">
      <argument type="collection"/>
      <factory service="translation.provider_collection_factory" method="fromConfig"/>
    </service>
    <service id="translation.provider_collection_factory" class="Symfony\Component\Translation\Provider\TranslationProviderCollectionFactory">
      <argument type="tagged_iterator" tag="translation.provider_factory"/>
      <argument type="collection"/>
    </service>
    <service id="translation.provider_factory.null" class="Symfony\Component\Translation\Provider\NullProviderFactory">
      <tag name="translation.provider_factory"/>
    </service>
    <service id="debug.error_handler_configurator" class="Symfony\Component\HttpKernel\Debug\ErrorHandlerConfigurator" public="true">
      <tag name="monolog.logger" channel="php"/>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument>null</argument>
      <argument>-1</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>null</argument>
      <argument>%env(bool:default::key:web:default:kernel.runtime_mode:)%</argument>
    </service>
    <service id="debug.file_link_formatter" class="Symfony\Component\ErrorHandler\ErrorRenderer\FileLinkFormatter">
      <argument>%env(default::SYMFONY_IDE)%</argument>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch" public="true">
      <tag name="kernel.reset" method="reset"/>
      <argument>true</argument>
    </service>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher">
      <tag name="container.hot_path"/>
      <tag name="event_dispatcher">event_dispatcher.dispatcher</tag>
      <tag name="monolog.logger" channel="event"/>
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.decorator" id="event_dispatcher" inner="debug.event_dispatcher.inner"/>
      <argument type="service" id="debug.event_dispatcher.inner"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="argument_resolver.request_payload"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_listener"/>
          <argument>setDefaultLocale</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="validate_request_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="disallow_search_engine_index_response_listener"/>
          <argument>onResponse</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>onControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>logKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>removeCspHeader</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="controller.cache_attribute_listener"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="controller.cache_attribute_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_aware_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>15</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_aware_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>-15</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service_closure" id="console.error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="console.error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service_closure" id="console.suggest_missing_package_subscriber"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="asset_mapper.dev_server_subscriber"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>35</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="asset_mapper.dev_server_subscriber"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Mailer\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="mailer.envelope_listener"/>
          <argument>onMessage</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Mailer\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="mailer.message_logger_listener"/>
          <argument>onMessage</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Mailer\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="mailer.messenger_transport_listener"/>
          <argument>onMessage</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="router_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="router_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="router_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-64</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="web_link.add_link_header_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageFailedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.retry.send_failed_message_for_retry_listener"/>
          <argument>onMessageFailed</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageFailedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.failure.add_error_details_stamp_listener"/>
          <argument>onMessageFailed</argument>
        </argument>
        <argument>200</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerStartedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.listener.stop_worker_on_restart_signal_listener"/>
          <argument>onWorkerStarted</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerRunningEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.listener.stop_worker_on_restart_signal_listener"/>
          <argument>onWorkerRunning</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageFailedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.listener.stop_worker_on_stop_exception_listener"/>
          <argument>onMessageFailed</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerRunningEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.listener.stop_worker_on_stop_exception_listener"/>
          <argument>onWorkerRunning</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Notifier\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="notifier.notification_logger_listener"/>
          <argument>onNotification</argument>
        </argument>
        <argument>-255</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver">
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.decorator" id="controller_resolver" inner="debug.controller_resolver.inner"/>
      <argument type="service" id="debug.controller_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver">
      <tag name="container.decorator" id="argument_resolver" inner="debug.argument_resolver.inner"/>
      <argument type="service" id="debug.argument_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="argument_resolver.not_tagged_controller" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\NotTaggedControllerValueResolver">
      <tag name="controller.argument_value_resolver" priority="-200"/>
      <argument type="service" id=".service_locator.Sr6W89v"/>
    </service>
    <service id="debug.log_processor" class="Symfony\Bridge\Monolog\Processor\DebugProcessor">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="debug.debug_logger_configurator" class="Symfony\Component\HttpKernel\Log\DebugLoggerConfigurator">
      <argument type="service" id="debug.log_processor"/>
      <argument>%env(bool:default::key:web:default:kernel.runtime_mode:)%</argument>
    </service>
    <service id="routing.resolver" class="Symfony\Component\Config\Loader\LoaderResolver">
      <call method="addLoader">
        <argument type="service" id="routing.loader.xml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.php"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.glob"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.container"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.attribute"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.attribute.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.attribute.file"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.psr4"/>
      </call>
    </service>
    <service id="routing.loader.xml" class="Symfony\Component\Routing\Loader\XmlFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>test</argument>
    </service>
    <service id="routing.loader.yml" class="Symfony\Component\Routing\Loader\YamlFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>test</argument>
    </service>
    <service id="routing.loader.php" class="Symfony\Component\Routing\Loader\PhpFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>test</argument>
    </service>
    <service id="routing.loader.glob" class="Symfony\Component\Routing\Loader\GlobFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>test</argument>
    </service>
    <service id="routing.loader.directory" class="Symfony\Component\Routing\Loader\DirectoryLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>test</argument>
    </service>
    <service id="routing.loader.container" class="Symfony\Component\Routing\Loader\ContainerLoader">
      <tag name="routing.loader"/>
      <argument type="service" id=".service_locator.9KL.ETR"/>
      <argument>test</argument>
    </service>
    <service id="routing.loader.attribute" class="Symfony\Bundle\FrameworkBundle\Routing\AttributeRouteControllerLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument>test</argument>
    </service>
    <service id="routing.loader.attribute.directory" class="Symfony\Component\Routing\Loader\AttributeDirectoryLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.attribute"/>
    </service>
    <service id="routing.loader.attribute.file" class="Symfony\Component\Routing\Loader\AttributeFileLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.attribute"/>
    </service>
    <service id="routing.loader.psr4" class="Symfony\Component\Routing\Loader\Psr4DirectoryLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader" public="true">
      <argument type="service" id="routing.resolver"/>
      <argument type="collection">
        <argument key="utf8">true</argument>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="router.default" class="Symfony\Bundle\FrameworkBundle\Routing\Router">
      <tag name="monolog.logger" channel="router"/>
      <tag name="container.service_subscriber" id="routing.loader"/>
      <argument type="service" id=".service_locator.JI6krIU.router.default"/>
      <argument>kernel::loadRoutes</argument>
      <argument type="collection">
        <argument key="cache_dir">C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend\var\cache\test</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\CompiledUrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\CompiledUrlGeneratorDumper</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableCompiledUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\CompiledUrlMatcherDumper</argument>
        <argument key="strict_requirements">true</argument>
        <argument key="resource_type">service</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="parameter_bag" on-invalid="ignore"/>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <argument>en</argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="addExpressionLanguageProvider">
        <argument type="service" id="router.expression_language_provider"/>
      </call>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" constructor="fromUri">
      <argument></argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
      <call method="setParameter">
        <argument>_functions</argument>
        <argument type="service" id="router.expression_language_provider" on-invalid="ignore"/>
      </call>
    </service>
    <service id="router.expression_language_provider" class="Symfony\Component\Routing\Matcher\ExpressionLanguageProvider">
      <tag name="routing.expression_language_provider"/>
      <argument type="service" id=".service_locator.nvIJVVC"/>
    </service>
    <service id="router.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer">
      <tag name="container.service_subscriber" id="router"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.YAcX0.U.router.cache_warmer"/>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend</argument>
      <argument>true</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" class="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" public="true">
      <argument type="service" id="router.default"/>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpPort"/>
        </service>
      </argument>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpsPort"/>
        </service>
      </argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" class="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" public="true">
      <argument>null</argument>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor">
      <argument>3</argument>
      <argument>2</argument>
      <argument type="service" id="cache.property_access" on-invalid="ignore"/>
      <argument type="service" id="property_info.reflection_extractor" on-invalid="null"/>
      <argument type="service" id="property_info.reflection_extractor" on-invalid="null"/>
    </service>
    <service id="secrets.vault" class="Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault">
      <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend/config/secrets/%env(default:kernel.environment:APP_RUNTIME_ENV)%</argument>
      <argument type="service" id="secrets.decryption_key" on-invalid="ignore"/>
    </service>
    <service id="secrets.env_var_loader" class="Symfony\Component\DependencyInjection\StaticEnvVarLoader">
      <tag name="container.env_var_loader"/>
      <argument type="service" id="secrets.vault"/>
    </service>
    <service id="secrets.decryption_key" class="Symfony\Component\String\LazyString" constructor="fromCallable">
      <argument type="service" id="container.getenv"/>
      <argument>base64:default::SYMFONY_DECRYPTION_SECRET</argument>
    </service>
    <service id="secrets.local_vault" class="Symfony\Bundle\FrameworkBundle\Secrets\DotenvVault">
      <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend/.env.test.local</argument>
    </service>
    <service id="serializer" class="Symfony\Component\Serializer\Serializer">
      <argument type="collection">
        <argument type="service" id="serializer.denormalizer.unwrapping"/>
        <argument type="service" id="serializer.normalizer.flatten_exception"/>
        <argument type="service" id="serializer.normalizer.problem"/>
        <argument type="service" id="serializer.normalizer.uid"/>
        <argument type="service" id="serializer.normalizer.datetime"/>
        <argument type="service" id="serializer.normalizer.constraint_violation_list"/>
        <argument type="service" id="serializer.normalizer.mime_message"/>
        <argument type="service" id="serializer.normalizer.datetimezone"/>
        <argument type="service" id="serializer.normalizer.dateinterval"/>
        <argument type="service" id="serializer.normalizer.form_error"/>
        <argument type="service" id="serializer.normalizer.backed_enum"/>
        <argument type="service" id="serializer.normalizer.data_uri"/>
        <argument type="service" id="serializer.normalizer.translatable"/>
        <argument type="service" id="serializer.normalizer.json_serializable"/>
        <argument type="service" id="serializer.denormalizer.array"/>
        <argument type="service" id="serializer.normalizer.object"/>
      </argument>
      <argument type="collection">
        <argument type="service" id="serializer.encoder.xml"/>
        <argument type="service" id="serializer.encoder.json"/>
        <argument type="service" id="serializer.encoder.yaml"/>
        <argument type="service" id="serializer.encoder.csv"/>
      </argument>
    </service>
    <service id="serializer.mapping.class_discriminator_resolver" class="Symfony\Component\Serializer\Mapping\ClassDiscriminatorFromClassMetadata">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="serializer.normalizer.constraint_violation_list" class="Symfony\Component\Serializer\Normalizer\ConstraintViolationListNormalizer" autowire="true">
      <tag name="serializer.normalizer" priority="-915"/>
      <argument type="collection"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
    </service>
    <service id="serializer.normalizer.mime_message" class="Symfony\Component\Serializer\Normalizer\MimeMessageNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
      <argument type="service" id="serializer.normalizer.property"/>
    </service>
    <service id="serializer.normalizer.datetimezone" class="Symfony\Component\Serializer\Normalizer\DateTimeZoneNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.dateinterval" class="Symfony\Component\Serializer\Normalizer\DateIntervalNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.data_uri" class="Symfony\Component\Serializer\Normalizer\DataUriNormalizer">
      <tag name="serializer.normalizer" priority="-920"/>
      <argument type="service" id="mime_types" on-invalid="null"/>
    </service>
    <service id="serializer.normalizer.datetime" class="Symfony\Component\Serializer\Normalizer\DateTimeNormalizer">
      <tag name="serializer.normalizer" priority="-910"/>
    </service>
    <service id="serializer.normalizer.json_serializable" class="Symfony\Component\Serializer\Normalizer\JsonSerializableNormalizer">
      <tag name="serializer.normalizer" priority="-950"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="serializer.normalizer.problem" class="Symfony\Component\Serializer\Normalizer\ProblemNormalizer">
      <tag name="serializer.normalizer" priority="-890"/>
      <argument key="0">true</argument>
      <argument key="translator" type="service" id="translator.default" on-invalid="null"/>
    </service>
    <service id="serializer.denormalizer.unwrapping" class="Symfony\Component\Serializer\Normalizer\UnwrappingDenormalizer">
      <tag name="serializer.normalizer" priority="1000"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="serializer.normalizer.uid" class="Symfony\Component\Serializer\Normalizer\UidNormalizer">
      <tag name="serializer.normalizer" priority="-890"/>
    </service>
    <service id="serializer.normalizer.translatable" class="Symfony\Component\Serializer\Normalizer\TranslatableNormalizer">
      <tag name="serializer.normalizer" priority="-920"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="serializer.normalizer.form_error" class="Symfony\Component\Serializer\Normalizer\FormErrorNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.object" class="Symfony\Component\Serializer\Normalizer\ObjectNormalizer">
      <tag name="serializer.normalizer" priority="-1000"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="property_info" on-invalid="ignore"/>
      <argument type="service" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore"/>
      <argument>null</argument>
      <argument type="collection"/>
      <argument type="service" id="property_info" on-invalid="ignore"/>
    </service>
    <service id="serializer.normalizer.property" class="Symfony\Component\Serializer\Normalizer\PropertyNormalizer">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
      <argument type="service" id="property_info" on-invalid="ignore"/>
      <argument type="service" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore"/>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="serializer.denormalizer.array" class="Symfony\Component\Serializer\Normalizer\ArrayDenormalizer">
      <tag name="serializer.normalizer" priority="-990"/>
    </service>
    <service id="serializer.mapping.chain_loader" class="Symfony\Component\Serializer\Mapping\Loader\LoaderChain">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\AttributeLoader"/>
        </argument>
      </argument>
    </service>
    <service id="serializer.mapping.class_metadata_factory" class="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory">
      <argument type="service" id="serializer.mapping.chain_loader"/>
    </service>
    <service id="serializer.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\SerializerCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\AttributeLoader"/>
        </argument>
      </argument>
      <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend\var\cache\test/serialization.php</argument>
    </service>
    <service id="serializer.mapping.cache.symfony" class="Psr\Cache\CacheItemPoolInterface">
      <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend\var\cache\test/serialization.php</argument>
      <argument type="service" id="cache.serializer"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="serializer.encoder.xml" class="Symfony\Component\Serializer\Encoder\XmlEncoder">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.json" class="Symfony\Component\Serializer\Encoder\JsonEncoder">
      <tag name="serializer.encoder"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="serializer.encoder.yaml" class="Symfony\Component\Serializer\Encoder\YamlEncoder">
      <tag name="serializer.encoder"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="serializer.encoder.csv" class="Symfony\Component\Serializer\Encoder\CsvEncoder">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.name_converter.camel_case_to_snake_case" class="Symfony\Component\Serializer\NameConverter\CamelCaseToSnakeCaseNameConverter"/>
    <service id="serializer.name_converter.metadata_aware" class="Symfony\Component\Serializer\NameConverter\MetadataAwareNameConverter">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="property_info.serializer_extractor" class="Symfony\Component\PropertyInfo\Extractor\SerializerExtractor">
      <tag name="property_info.list_extractor" priority="-999"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="error_handler.error_renderer.serializer" class="Symfony\Component\ErrorHandler\ErrorRenderer\SerializerErrorRenderer">
      <argument type="service" id="serializer"/>
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\SerializerErrorRenderer" method="getPreferredFormat"/>
        </service>
      </argument>
      <argument type="service" id="error_handler.error_renderer.html"/>
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <argument>true</argument>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
        </service>
      </argument>
    </service>
    <service id="serializer.normalizer.backed_enum" class="Symfony\Component\Serializer\Normalizer\BackedEnumNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="type_info.type_context_factory" class="Symfony\Component\TypeInfo\TypeContext\TypeContextFactory">
      <argument type="service" id="type_info.resolver.string" on-invalid="null"/>
    </service>
    <service id="type_info.resolver" class="Symfony\Component\TypeInfo\TypeResolver\TypeResolver">
      <argument type="service" id=".service_locator.bvmE8RF"/>
    </service>
    <service id="type_info.resolver.reflection_type" class="Symfony\Component\TypeInfo\TypeResolver\ReflectionTypeResolver">
      <argument type="service" id="type_info.type_context_factory"/>
    </service>
    <service id="type_info.resolver.reflection_parameter" class="Symfony\Component\TypeInfo\TypeResolver\ReflectionParameterTypeResolver">
      <argument type="service" id="type_info.resolver.reflection_type"/>
      <argument type="service" id="type_info.type_context_factory"/>
    </service>
    <service id="type_info.resolver.reflection_property" class="Symfony\Component\TypeInfo\TypeResolver\ReflectionPropertyTypeResolver">
      <argument type="service" id="type_info.resolver.reflection_type"/>
      <argument type="service" id="type_info.type_context_factory"/>
    </service>
    <service id="type_info.resolver.reflection_return" class="Symfony\Component\TypeInfo\TypeResolver\ReflectionReturnTypeResolver">
      <argument type="service" id="type_info.resolver.reflection_type"/>
      <argument type="service" id="type_info.type_context_factory"/>
    </service>
    <service id="type_info.resolver.string" class="Symfony\Component\TypeInfo\TypeResolver\StringTypeResolver"/>
    <service id="property_info" class="Symfony\Component\PropertyInfo\PropertyInfoExtractor">
      <argument type="iterator">
        <argument type="service" id="property_info.serializer_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.phpstan_extractor"/>
        <argument type="service" id="property_info.php_doc_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.php_doc_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
    </service>
    <service id="property_info.reflection_extractor" class="Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor">
      <tag name="property_info.list_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1002"/>
      <tag name="property_info.access_extractor" priority="-1000"/>
      <tag name="property_info.initializable_extractor" priority="-1000"/>
    </service>
    <service id="property_info.phpstan_extractor" class="Symfony\Component\PropertyInfo\Extractor\PhpStanExtractor">
      <tag name="property_info.type_extractor" priority="-1000"/>
    </service>
    <service id="property_info.php_doc_extractor" class="Symfony\Component\PropertyInfo\Extractor\PhpDocExtractor">
      <tag name="property_info.description_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1001"/>
    </service>
    <service id="web_link.http_header_serializer" class="Symfony\Component\WebLink\HttpHeaderSerializer"/>
    <service id="web_link.add_link_header_listener" class="Symfony\Component\WebLink\EventListener\AddLinkHeaderListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="web_link.http_header_serializer"/>
    </service>
    <service id=".cache_connection.MfCypIA" class="Symfony\Component\Cache\Adapter\AbstractAdapter" constructor="createConnection">
      <argument>redis://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
    </service>
    <service id=".cache_connection.8kvDmRs" class="Symfony\Component\Cache\Adapter\AbstractAdapter" constructor="createConnection">
      <argument>memcached://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
    </service>
    <service id="cache.property_access" class="Symfony\Component\Cache\Adapter\ArrayAdapter">
      <argument>0</argument>
      <argument>false</argument>
    </service>
    <service id="form.resolved_type_factory" class="Symfony\Component\Form\ResolvedFormTypeFactory"/>
    <service id="form.registry" class="Symfony\Component\Form\FormRegistry">
      <argument type="collection">
        <argument type="service" id="form.extension"/>
      </argument>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.factory" class="Symfony\Component\Form\FormFactory">
      <argument type="service" id="form.registry"/>
    </service>
    <service id="form.extension" class="Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension">
      <argument type="service" id=".service_locator.MXEhj6M"/>
      <argument type="collection">
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="iterator">
          <argument type="service" id="form.type_extension.form.transformation_failure_handling"/>
          <argument type="service" id="form.type_extension.form.http_foundation"/>
          <argument type="service" id="form.type_extension.form.validator"/>
          <argument type="service" id="form.type_extension.upload.validator"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\RepeatedType" type="iterator">
          <argument type="service" id="form.type_extension.repeated.validator"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\SubmitType" type="iterator">
          <argument type="service" id="form.type_extension.submit.validator"/>
        </argument>
      </argument>
      <argument type="iterator">
        <argument type="service" id="form.type_guesser.validator"/>
      </argument>
    </service>
    <service id="form.type_guesser.validator" class="Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="form.choice_list_factory.default" class="Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory"/>
    <service id="form.choice_list_factory.property_access" class="Symfony\Component\Form\ChoiceList\Factory\PropertyAccessDecorator">
      <argument type="service" id="form.choice_list_factory.default"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.choice_list_factory.cached" class="Symfony\Component\Form\ChoiceList\Factory\CachingFactoryDecorator">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="form.choice_list_factory.property_access"/>
    </service>
    <service id="form.type.form" class="Symfony\Component\Form\Extension\Core\Type\FormType">
      <tag name="form.type"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.type.choice" class="Symfony\Component\Form\Extension\Core\Type\ChoiceType">
      <tag name="form.type"/>
      <argument type="service" id="form.choice_list_factory.cached"/>
      <argument type="service" id="translator.default" on-invalid="ignore"/>
    </service>
    <service id="form.type.file" class="Symfony\Component\Form\Extension\Core\Type\FileType">
      <tag name="form.type"/>
      <argument type="service" id="translator.default" on-invalid="ignore"/>
    </service>
    <service id="form.type.color" class="Symfony\Component\Form\Extension\Core\Type\ColorType">
      <tag name="form.type"/>
      <argument type="service" id="translator.default" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.form.transformation_failure_handling" class="Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension">
      <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="translator.default" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.form.http_foundation" class="Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension">
      <tag name="form.type_extension"/>
      <argument type="service" id="form.type_extension.form.request_handler"/>
    </service>
    <service id="form.type_extension.form.request_handler" class="Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler">
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="form.server_params" class="Symfony\Component\Form\Util\ServerParams">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="form.type_extension.form.validator" class="Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension">
      <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="validator"/>
      <argument>false</argument>
      <argument>null</argument>
      <argument type="service" id="translator.default" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.repeated.validator" class="Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension">
      <tag name="form.type_extension"/>
    </service>
    <service id="form.type_extension.submit.validator" class="Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension">
      <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\SubmitType"/>
    </service>
    <service id="form.type_extension.upload.validator" class="Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension">
      <tag name="form.type_extension"/>
      <argument type="service" id="translator.default"/>
      <argument>validators</argument>
    </service>
    <service id="validator" class="Symfony\Component\Validator\Validator\ValidatorInterface">
      <factory service="validator.builder" method="getValidator"/>
    </service>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilder">
      <call method="setConstraintValidatorFactory">
        <argument type="service" id="validator.validator_factory"/>
      </call>
      <call method="setGroupProviderLocator">
        <argument type="service" id="messenger.retry_strategy_locator"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default" on-invalid="ignore"/>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="addXmlMappings">
        <argument type="collection">
          <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\vendor\symfony\form/Resources/config/validation.xml</argument>
        </argument>
      </call>
      <call method="enableAttributeMapping"/>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="validator.property_info_loader"/>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="validator.builder"/>
      <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend\var\cache\test/validation.php</argument>
    </service>
    <service id="validator.mapping.cache.adapter" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" constructor="create">
      <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend\var\cache\test/validation.php</argument>
      <argument type="service" id="cache.validator"/>
    </service>
    <service id="validator.validator_factory" class="Symfony\Component\Validator\ContainerConstraintValidatorFactory">
      <argument type="service" id=".service_locator.0i2HhdP"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\AllValidator" class="Symfony\Component\Validator\Constraints\AllValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\AtLeastOneOfValidator" class="Symfony\Component\Validator\Constraints\AtLeastOneOfValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\BicValidator" class="Symfony\Component\Validator\Constraints\BicValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\BlankValidator" class="Symfony\Component\Validator\Constraints\BlankValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CallbackValidator" class="Symfony\Component\Validator\Constraints\CallbackValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CardSchemeValidator" class="Symfony\Component\Validator\Constraints\CardSchemeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CharsetValidator" class="Symfony\Component\Validator\Constraints\CharsetValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ChoiceValidator" class="Symfony\Component\Validator\Constraints\ChoiceValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CidrValidator" class="Symfony\Component\Validator\Constraints\CidrValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CollectionValidator" class="Symfony\Component\Validator\Constraints\CollectionValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CompoundValidator" class="Symfony\Component\Validator\Constraints\CompoundValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CountValidator" class="Symfony\Component\Validator\Constraints\CountValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CountryValidator" class="Symfony\Component\Validator\Constraints\CountryValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CssColorValidator" class="Symfony\Component\Validator\Constraints\CssColorValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CurrencyValidator" class="Symfony\Component\Validator\Constraints\CurrencyValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\DateTimeValidator" class="Symfony\Component\Validator\Constraints\DateTimeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\DateValidator" class="Symfony\Component\Validator\Constraints\DateValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\DivisibleByValidator" class="Symfony\Component\Validator\Constraints\DivisibleByValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\EmailValidator" class="Symfony\Component\Validator\Constraints\EmailValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\EqualToValidator" class="Symfony\Component\Validator\Constraints\EqualToValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ExpressionSyntaxValidator" class="Symfony\Component\Validator\Constraints\ExpressionSyntaxValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ExpressionValidator" class="Symfony\Component\Validator\Constraints\ExpressionValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\FileValidator" class="Symfony\Component\Validator\Constraints\FileValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\GreaterThanOrEqualValidator" class="Symfony\Component\Validator\Constraints\GreaterThanOrEqualValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\GreaterThanValidator" class="Symfony\Component\Validator\Constraints\GreaterThanValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\HostnameValidator" class="Symfony\Component\Validator\Constraints\HostnameValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IbanValidator" class="Symfony\Component\Validator\Constraints\IbanValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IdenticalToValidator" class="Symfony\Component\Validator\Constraints\IdenticalToValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ImageValidator" class="Symfony\Component\Validator\Constraints\ImageValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IpValidator" class="Symfony\Component\Validator\Constraints\IpValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsFalseValidator" class="Symfony\Component\Validator\Constraints\IsFalseValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsNullValidator" class="Symfony\Component\Validator\Constraints\IsNullValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsTrueValidator" class="Symfony\Component\Validator\Constraints\IsTrueValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsbnValidator" class="Symfony\Component\Validator\Constraints\IsbnValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsinValidator" class="Symfony\Component\Validator\Constraints\IsinValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IssnValidator" class="Symfony\Component\Validator\Constraints\IssnValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\JsonValidator" class="Symfony\Component\Validator\Constraints\JsonValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LanguageValidator" class="Symfony\Component\Validator\Constraints\LanguageValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LengthValidator" class="Symfony\Component\Validator\Constraints\LengthValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LessThanOrEqualValidator" class="Symfony\Component\Validator\Constraints\LessThanOrEqualValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LessThanValidator" class="Symfony\Component\Validator\Constraints\LessThanValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LocaleValidator" class="Symfony\Component\Validator\Constraints\LocaleValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LuhnValidator" class="Symfony\Component\Validator\Constraints\LuhnValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\MacAddressValidator" class="Symfony\Component\Validator\Constraints\MacAddressValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NoSuspiciousCharactersValidator" class="Symfony\Component\Validator\Constraints\NoSuspiciousCharactersValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotBlankValidator" class="Symfony\Component\Validator\Constraints\NotBlankValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" class="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotEqualToValidator" class="Symfony\Component\Validator\Constraints\NotEqualToValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotIdenticalToValidator" class="Symfony\Component\Validator\Constraints\NotIdenticalToValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotNullValidator" class="Symfony\Component\Validator\Constraints\NotNullValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\PasswordStrengthValidator" class="Symfony\Component\Validator\Constraints\PasswordStrengthValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\RangeValidator" class="Symfony\Component\Validator\Constraints\RangeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\RegexValidator" class="Symfony\Component\Validator\Constraints\RegexValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\SequentiallyValidator" class="Symfony\Component\Validator\Constraints\SequentiallyValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\TimeValidator" class="Symfony\Component\Validator\Constraints\TimeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\TimezoneValidator" class="Symfony\Component\Validator\Constraints\TimezoneValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\TypeValidator" class="Symfony\Component\Validator\Constraints\TypeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\UlidValidator" class="Symfony\Component\Validator\Constraints\UlidValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\UniqueValidator" class="Symfony\Component\Validator\Constraints\UniqueValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\UrlValidator" class="Symfony\Component\Validator\Constraints\UrlValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\UuidValidator" class="Symfony\Component\Validator\Constraints\UuidValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ValidValidator" class="Symfony\Component\Validator\Constraints\ValidValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\WhenValidator" class="Symfony\Component\Validator\Constraints\WhenValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
      <argument type="service" id="validator.expression_language" on-invalid="null"/>
    </service>
    <service id="validator.expression_language" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage">
      <argument type="service" id="cache.validator_expression_language" on-invalid="null"/>
      <call method="registerProvider">
        <argument type="service" id="validator.expression_language_provider" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.validator_expression_language" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>4Ei5oYzBIC</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend\var\cache\test/pools/system</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="validator.expression_language_provider" class="Symfony\Component\Validator\Constraints\ExpressionLanguageProvider"/>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator">
      <tag name="validator.constraint_validator"/>
      <argument>html5</argument>
    </service>
    <service id="validator.not_compromised_password" class="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="http_client.uri_template" on-invalid="null"/>
      <argument>UTF-8</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="validator.when" class="Symfony\Component\Validator\Constraints\WhenValidator">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="validator.expression_language" on-invalid="null"/>
    </service>
    <service id="validator.no_suspicious_characters" class="Symfony\Component\Validator\Constraints\NoSuspiciousCharactersValidator">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\NoSuspiciousCharactersValidator"/>
      <argument type="collection"/>
    </service>
    <service id="validator.property_info_loader" class="Symfony\Component\Validator\Mapping\Loader\PropertyInfoLoader">
      <tag name="validator.auto_mapper"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="property_info"/>
      <argument>null</argument>
    </service>
    <service id="messenger.senders_locator" class="Symfony\Component\Messenger\Transport\Sender\SendersLocator">
      <argument type="collection"/>
      <argument type="service" id="messenger.retry_strategy_locator"/>
    </service>
    <service id="messenger.middleware.send_message" class="Symfony\Component\Messenger\Middleware\SendMessageMiddleware" abstract="true">
      <tag name="monolog.logger" channel="messenger"/>
      <argument type="service" id="messenger.senders_locator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="serializer.normalizer.flatten_exception" class="Symfony\Component\Messenger\Transport\Serialization\Normalizer\FlattenExceptionNormalizer">
      <tag name="serializer.normalizer" priority="-880"/>
    </service>
    <service id="messenger.transport.native_php_serializer" class="Symfony\Component\Messenger\Transport\Serialization\PhpSerializer"/>
    <service id="messenger.middleware.handle_message" class="Symfony\Component\Messenger\Middleware\HandleMessageMiddleware" abstract="true">
      <tag name="monolog.logger" channel="messenger"/>
      <argument type="abstract">bus handler resolver</argument>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="messenger.middleware.add_bus_name_stamp_middleware" class="Symfony\Component\Messenger\Middleware\AddBusNameStampMiddleware" abstract="true"/>
    <service id="messenger.middleware.dispatch_after_current_bus" class="Symfony\Component\Messenger\Middleware\DispatchAfterCurrentBusMiddleware"/>
    <service id="messenger.middleware.validation" class="Symfony\Component\Messenger\Middleware\ValidationMiddleware">
      <argument type="service" id="validator"/>
    </service>
    <service id="messenger.middleware.reject_redelivered_message_middleware" class="Symfony\Component\Messenger\Middleware\RejectRedeliveredMessageMiddleware"/>
    <service id="messenger.middleware.failed_message_processing_middleware" class="Symfony\Component\Messenger\Middleware\FailedMessageProcessingMiddleware"/>
    <service id="messenger.middleware.traceable" class="Symfony\Component\Messenger\Middleware\TraceableMiddleware" abstract="true">
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="messenger.middleware.router_context" class="Symfony\Component\Messenger\Middleware\RouterContextMiddleware">
      <argument type="service" id="router.default"/>
    </service>
    <service id="messenger.receiver_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="messenger.transport_factory" class="Symfony\Component\Messenger\Transport\TransportFactory">
      <argument type="tagged_iterator" tag="messenger.transport_factory"/>
    </service>
    <service id="messenger.transport.sync.factory" class="Symfony\Component\Messenger\Transport\Sync\SyncTransportFactory">
      <tag name="messenger.transport_factory"/>
      <argument type="service" id="messenger.routable_message_bus"/>
    </service>
    <service id="messenger.transport.in_memory.factory" class="Symfony\Component\Messenger\Transport\InMemory\InMemoryTransportFactory">
      <tag name="messenger.transport_factory"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="clock" on-invalid="null"/>
    </service>
    <service id="messenger.retry_strategy_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="messenger.retry.abstract_multiplier_retry_strategy" class="Symfony\Component\Messenger\Retry\MultiplierRetryStrategy" abstract="true">
      <argument type="abstract">max retries</argument>
      <argument type="abstract">delay ms</argument>
      <argument type="abstract">multiplier</argument>
      <argument type="abstract">max delay ms</argument>
      <argument type="abstract">jitter</argument>
    </service>
    <service id="messenger.retry.send_failed_message_for_retry_listener" class="Symfony\Component\Messenger\EventListener\SendFailedMessageForRetryListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="messenger"/>
      <argument type="service" id="messenger.retry_strategy_locator"/>
      <argument type="service" id="messenger.retry_strategy_locator"/>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="messenger.failure.add_error_details_stamp_listener" class="Symfony\Component\Messenger\EventListener\AddErrorDetailsStampListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="messenger.listener.dispatch_pcntl_signal_listener" class="Symfony\Component\Messenger\EventListener\DispatchPcntlSignalListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="messenger.listener.stop_worker_on_restart_signal_listener" class="Symfony\Component\Messenger\EventListener\StopWorkerOnRestartSignalListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="messenger"/>
      <argument type="service" id="cache.messenger.restart_workers_signal"/>
      <argument type="service" id="logger" on-invalid="ignore"/>
    </service>
    <service id="messenger.listener.stop_worker_on_stop_exception_listener" class="Symfony\Component\Messenger\EventListener\StopWorkerOnCustomStopExceptionListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="messenger.listener.reset_services" class="Symfony\Component\Messenger\EventListener\ResetServicesListener">
      <argument type="service" id="services_resetter"/>
    </service>
    <service id="messenger.routable_message_bus" class="Symfony\Component\Messenger\RoutableMessageBus">
      <argument type="service" id=".service_locator.IlGSE9J"/>
      <argument type="service" id="messenger.bus.default"/>
    </service>
    <service id="messenger.redispatch_message_handler" class="Symfony\Component\Messenger\Handler\RedispatchMessageHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="messenger.bus.default"/>
    </service>
    <service id="messenger.bus.default" class="Symfony\Component\Messenger\MessageBus">
      <tag name="messenger.bus"/>
      <argument type="iterator">
        <argument type="service" id="messenger.bus.default.middleware.traceable"/>
        <argument type="service" id="messenger.bus.default.middleware.add_bus_name_stamp_middleware"/>
        <argument type="service" id="messenger.middleware.reject_redelivered_message_middleware"/>
        <argument type="service" id="messenger.middleware.dispatch_after_current_bus"/>
        <argument type="service" id="messenger.middleware.failed_message_processing_middleware"/>
        <argument type="service" id="messenger.bus.default.middleware.send_message"/>
        <argument type="service" id="messenger.bus.default.middleware.handle_message"/>
      </argument>
    </service>
    <service id="notifier" class="Symfony\Component\Notifier\Notifier">
      <argument type="service" id=".service_locator.TwypoFh"/>
      <argument type="service" id="notifier.channel_policy" on-invalid="ignore"/>
    </service>
    <service id="notifier.channel_policy" class="Symfony\Component\Notifier\Channel\ChannelPolicy">
      <argument type="collection"/>
    </service>
    <service id="notifier.flash_message_importance_mapper" class="Symfony\Component\Notifier\FlashMessage\DefaultFlashMessageImportanceMapper">
      <argument type="collection"/>
    </service>
    <service id="notifier.channel.browser" class="Symfony\Component\Notifier\Channel\BrowserChannel">
      <tag name="notifier.channel" channel="browser"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="notifier.flash_message_importance_mapper"/>
    </service>
    <service id="notifier.channel.chat" class="Symfony\Component\Notifier\Channel\ChatChannel">
      <tag name="notifier.channel" channel="chat"/>
      <argument>null</argument>
      <argument type="service" id="messenger.bus.default" on-invalid="null"/>
    </service>
    <service id="notifier.channel.sms" class="Symfony\Component\Notifier\Channel\SmsChannel">
      <tag name="notifier.channel" channel="sms"/>
      <argument>null</argument>
      <argument type="service" id="messenger.bus.default" on-invalid="null"/>
    </service>
    <service id="notifier.channel.email" class="Symfony\Component\Notifier\Channel\EmailChannel">
      <tag name="notifier.channel" channel="email"/>
      <argument>null</argument>
      <argument type="service" id="messenger.bus.default" on-invalid="null"/>
      <argument>null</argument>
    </service>
    <service id="notifier.channel.push" class="Symfony\Component\Notifier\Channel\PushChannel">
      <tag name="notifier.channel" channel="push"/>
      <argument>null</argument>
      <argument type="service" id="messenger.bus.default" on-invalid="ignore"/>
    </service>
    <service id="notifier.monolog_handler" class="Symfony\Bridge\Monolog\Handler\NotifierHandler">
      <argument type="service" id="notifier"/>
    </service>
    <service id="notifier.failed_message_listener" class="Symfony\Component\Notifier\EventListener\SendFailedMessageToNotifierListener">
      <argument type="service" id="notifier"/>
    </service>
    <service id="chatter.transports" class="Symfony\Component\Notifier\Transport\Transports">
      <argument type="collection"/>
      <factory service="chatter.transport_factory" method="fromStrings"/>
    </service>
    <service id="chatter.transport_factory" class="Symfony\Component\Notifier\Transport">
      <argument type="tagged_iterator" tag="chatter.transport_factory"/>
    </service>
    <service id="chatter.messenger.chat_handler" class="Symfony\Component\Notifier\Messenger\MessageHandler">
      <tag name="messenger.message_handler" handles="Symfony\Component\Notifier\Message\ChatMessage"/>
      <argument type="service" id="chatter.transports"/>
    </service>
    <service id="texter.transports" class="Symfony\Component\Notifier\Transport\Transports">
      <argument type="collection"/>
      <factory service="texter.transport_factory" method="fromStrings"/>
    </service>
    <service id="texter.transport_factory" class="Symfony\Component\Notifier\Transport">
      <argument type="tagged_iterator" tag="texter.transport_factory"/>
    </service>
    <service id="texter.messenger.sms_handler" class="Symfony\Component\Notifier\Messenger\MessageHandler">
      <tag name="messenger.message_handler" handles="Symfony\Component\Notifier\Message\SmsMessage"/>
      <argument type="service" id="texter.transports"/>
    </service>
    <service id="texter.messenger.push_handler" class="Symfony\Component\Notifier\Messenger\MessageHandler">
      <tag name="messenger.message_handler" handles="Symfony\Component\Notifier\Message\PushMessage"/>
      <argument type="service" id="texter.transports"/>
    </service>
    <service id="notifier.notification_logger_listener" class="Symfony\Component\Notifier\EventListener\NotificationLoggerListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="notifier.transport_factory.abstract" class="Symfony\Component\Notifier\Transport\AbstractTransportFactory" abstract="true">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="http_client.uri_template" on-invalid="ignore"/>
    </service>
    <service id="notifier.transport_factory.null" class="Symfony\Component\Notifier\Transport\NullTransportFactory">
      <tag name="chatter.transport_factory"/>
      <tag name="texter.transport_factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="http_client.uri_template" on-invalid="ignore"/>
    </service>
    <service id="mime_types" class="Symfony\Component\Mime\MimeTypes">
      <call method="setDefault">
        <argument type="service" id="mime_types"/>
      </call>
    </service>
    <service id="tactician.middleware.locking" class="League\Tactician\Plugins\LockingMiddleware"/>
    <service id="tactician.handler.method_name_inflector.handle" class="League\Tactician\Handler\MethodNameInflector\HandleInflector"/>
    <service id="tactician.handler.method_name_inflector.class_name" class="League\Tactician\Handler\MethodNameInflector\ClassNameInflector"/>
    <service id="tactician.handler.method_name_inflector.handle_class_name" class="League\Tactician\Handler\MethodNameInflector\HandleClassNameInflector"/>
    <service id="tactician.handler.method_name_inflector.handle_class_name_without_suffix" class="League\Tactician\Handler\MethodNameInflector\HandleClassNameWithoutSuffixInflector"/>
    <service id="tactician.handler.method_name_inflector.invoke" class="League\Tactician\Handler\MethodNameInflector\InvokeInflector"/>
    <service id="tactician.handler.command_name_extractor.class_name" class="League\Tactician\Handler\CommandNameExtractor\ClassNameExtractor"/>
    <service id="tactician.plugins.named_command.extractor" class="League\Tactician\Plugins\NamedCommand\NamedCommandExtractor"/>
    <service id="tactician.command.debug" class="League\Tactician\Bundle\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="collection">
        <argument key="default" type="collection">
          <argument key="Eurega\ShoppingList\Application\Query\Usuario\SearchUsuarioParticularByCriteriaQuery">Eurega\ShoppingList\Application\Query\Usuario\SearchUsuarioParticularByCriteriaQueryHandler</argument>
          <argument key="Eurega\ShoppingList\Application\Command\Usuario\CrearUsuarioParticularCommand">Eurega\ShoppingList\Application\Command\Usuario\CrearUsuarioParticularCommandHandler</argument>
        </argument>
      </argument>
    </service>
    <service id="tactician.logger.class_properties_formatter" class="League\Tactician\Logger\Formatter\ClassPropertiesFormatter"/>
    <service id="tactician.logger.class_name_formatter" class="League\Tactician\Logger\Formatter\ClassNameFormatter"/>
    <service id="tactician.middleware.logger" class="League\Tactician\Logger\LoggerMiddleware">
      <tag name="monolog.logger" channel="command_bus"/>
      <argument type="service" id="tactician.logger.class_properties_formatter"/>
      <argument type="service" id="logger"/>
    </service>
    <service id="behat.mink" class="Behat\Mink\Mink" public="true" lazy="true">
      <argument>fob_symfony.mink</argument>
      <factory service="behat.service_container" method="get"/>
    </service>
    <service id="behat.mink.default_session" class="Behat\Mink\Session" public="true" lazy="true">
      <factory service="behat.mink" method="getSession"/>
    </service>
    <service id="behat.mink.parameters" class="FriendsOfBehat\SymfonyExtension\Mink\MinkParameters" public="true" lazy="true">
      <argument>fob_symfony.mink.parameters</argument>
      <factory service="behat.service_container" method="get"/>
    </service>
    <service id="behat.service_container" class="Symfony\Component\DependencyInjection\ContainerInterface" public="true" synthetic="true"/>
    <service id="behat.driver.service_container" class="Symfony\Component\DependencyInjection\ContainerInterface" public="true" lazy="true">
      <argument>test.service_container</argument>
      <factory method="get">
        <service class="Symfony\Component\DependencyInjection\ContainerInterface" public="true" lazy="true">
          <factory method="getContainer">
            <service class="Symfony\Component\HttpKernel\KernelInterface" public="true" lazy="true">
              <argument>fob_symfony.driver_kernel</argument>
              <factory service="behat.service_container" method="get"/>
            </service>
          </factory>
        </service>
      </factory>
    </service>
    <service id=".instanceof.Behat\Behat\Context\Context.0.Tests\Shared\Infrastructure\Behat\ApiContext" class="Tests\Shared\Infrastructure\Behat\ApiContext" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Tests\Shared\Infrastructure\Behat\ApiContext" class="Tests\Shared\Infrastructure\Behat\ApiContext" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Behat\Behat\Context\Context.0.App\ShoppingList\Backend\Test\Behat\ApiContext" class="App\ShoppingList\Backend\Test\Behat\ApiContext" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\ShoppingList\Backend\Test\Behat\ApiContext" class="App\ShoppingList\Backend\Test\Behat\ApiContext" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".service_locator.pRu6x_4" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="base64" type="service_closure" id="container.env_var_processor"/>
        <argument key="bool" type="service_closure" id="container.env_var_processor"/>
        <argument key="not" type="service_closure" id="container.env_var_processor"/>
        <argument key="const" type="service_closure" id="container.env_var_processor"/>
        <argument key="csv" type="service_closure" id="container.env_var_processor"/>
        <argument key="file" type="service_closure" id="container.env_var_processor"/>
        <argument key="float" type="service_closure" id="container.env_var_processor"/>
        <argument key="int" type="service_closure" id="container.env_var_processor"/>
        <argument key="json" type="service_closure" id="container.env_var_processor"/>
        <argument key="key" type="service_closure" id="container.env_var_processor"/>
        <argument key="url" type="service_closure" id="container.env_var_processor"/>
        <argument key="query_string" type="service_closure" id="container.env_var_processor"/>
        <argument key="resolve" type="service_closure" id="container.env_var_processor"/>
        <argument key="default" type="service_closure" id="container.env_var_processor"/>
        <argument key="string" type="service_closure" id="container.env_var_processor"/>
        <argument key="trim" type="service_closure" id="container.env_var_processor"/>
        <argument key="require" type="service_closure" id="container.env_var_processor"/>
        <argument key="enum" type="service_closure" id="container.env_var_processor"/>
        <argument key="shuffle" type="service_closure" id="container.env_var_processor"/>
        <argument key="defined" type="service_closure" id="container.env_var_processor"/>
        <argument key="urlencode" type="service_closure" id="container.env_var_processor"/>
      </argument>
    </service>
    <service id=".service_locator.4wc4Ag1" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="loader" type="service_closure" id=".errored..service_locator.4wc4Ag1.Symfony\Component\Config\Loader\LoaderInterface"/>
      </argument>
    </service>
    <service id=".service_locator.4wc4Ag1.kernel::registerContainerConfiguration()" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="kernel::registerContainerConfiguration()"/>
      <argument>kernel::registerContainerConfiguration()</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.4wc4Ag1" method="withContext"/>
    </service>
    <service id=".service_locator.4wc4Ag1.kernel::loadRoutes()" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="kernel::loadRoutes()"/>
      <argument>kernel::loadRoutes()</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.4wc4Ag1" method="withContext"/>
    </service>
    <service id=".service_locator.Sr6W89v" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="kernel::registerContainerConfiguration" type="service_closure" id=".service_locator.4wc4Ag1.kernel::registerContainerConfiguration()"/>
        <argument key="kernel::loadRoutes" type="service_closure" id=".service_locator.4wc4Ag1.kernel::loadRoutes()"/>
        <argument key="kernel:registerContainerConfiguration" type="service_closure" id=".service_locator.4wc4Ag1.kernel::registerContainerConfiguration()"/>
        <argument key="kernel:loadRoutes" type="service_closure" id=".service_locator.4wc4Ag1.kernel::loadRoutes()"/>
      </argument>
    </service>
    <service id=".service_locator.0i2HhdP" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="validator.expression" type="service_closure" id="validator.expression"/>
        <argument key="Symfony\Component\Validator\Constraints\ExpressionValidator" type="service_closure" id="validator.expression"/>
        <argument key="Symfony\Component\Validator\Constraints\EmailValidator" type="service_closure" id="validator.email"/>
        <argument key="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" type="service_closure" id="validator.not_compromised_password"/>
        <argument key="Symfony\Component\Validator\Constraints\WhenValidator" type="service_closure" id="validator.when"/>
        <argument key="Symfony\Component\Validator\Constraints\NoSuspiciousCharactersValidator" type="service_closure" id="validator.no_suspicious_characters"/>
      </argument>
    </service>
    <service id=".service_locator.va_rxC4" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="inline" type="service_closure" id="fragment.renderer.inline"/>
      </argument>
    </service>
    <service id=".debug.value_resolver.argument_resolver.backed_enum_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.backed_enum_resolver"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.datetime" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.datetime"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.request_attribute"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.request"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.session"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.service"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.default"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.variadic"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.not_tagged_controller" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.not_tagged_controller"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.request_payload" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.request_payload"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.query_parameter_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.query_parameter_value_resolver"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".service_locator.MXEhj6M" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="service_closure" id="form.type.form"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType" type="service_closure" id="form.type.choice"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FileType" type="service_closure" id="form.type.file"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ColorType" type="service_closure" id="form.type.color"/>
      </argument>
    </service>
    <service id="messenger.bus.default.middleware.traceable" class="Symfony\Component\Messenger\Middleware\TraceableMiddleware">
      <argument type="service" id="debug.stopwatch"/>
      <argument>messenger.bus.default</argument>
    </service>
    <service id="messenger.bus.default.middleware.add_bus_name_stamp_middleware" class="Symfony\Component\Messenger\Middleware\AddBusNameStampMiddleware">
      <argument>messenger.bus.default</argument>
    </service>
    <service id="messenger.bus.default.middleware.send_message" class="Symfony\Component\Messenger\Middleware\SendMessageMiddleware">
      <argument type="service" id="messenger.senders_locator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>true</argument>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="messenger.bus.default.middleware.handle_message" class="Symfony\Component\Messenger\Middleware\HandleMessageMiddleware">
      <argument type="service" id="messenger.bus.default.messenger.handlers_locator"/>
      <argument>false</argument>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id=".service_locator.IlGSE9J" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="messenger.bus.default" type="service_closure" id="messenger.bus.default"/>
      </argument>
    </service>
    <service id=".messenger.handler_descriptor.Die6Bxe" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="process.messenger.process_message_handler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.NumTeF8" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="console.messenger.execute_command_handler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.Qv3faSN" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="http_client.messenger.ping_webhook_handler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.WG.oRBv" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="mailer.messenger.message_handler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.jyyWvHw" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="messenger.redispatch_message_handler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.gEx8y9a" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="chatter.messenger.chat_handler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.UKIJHil" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="texter.messenger.sms_handler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.EXsqOW5" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="texter.messenger.push_handler"/>
      <argument type="collection"/>
    </service>
    <service id="messenger.bus.default.messenger.handlers_locator" class="Symfony\Component\Messenger\Handler\HandlersLocator">
      <argument type="collection">
        <argument key="Symfony\Component\Process\Messenger\RunProcessMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.Die6Bxe"/>
        </argument>
        <argument key="Symfony\Component\Console\Messenger\RunCommandMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.NumTeF8"/>
        </argument>
        <argument key="Symfony\Component\HttpClient\Messenger\PingWebhookMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.Qv3faSN"/>
        </argument>
        <argument key="Symfony\Component\Mailer\Messenger\SendEmailMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.WG.oRBv"/>
        </argument>
        <argument key="Symfony\Component\Messenger\Message\RedispatchMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.jyyWvHw"/>
        </argument>
        <argument key="Symfony\Component\Notifier\Message\ChatMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.gEx8y9a"/>
        </argument>
        <argument key="Symfony\Component\Notifier\Message\SmsMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.UKIJHil"/>
        </argument>
        <argument key="Symfony\Component\Notifier\Message\PushMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.EXsqOW5"/>
        </argument>
      </argument>
    </service>
    <service id="tactician.middleware.validator" class="League\Tactician\Bundle\Middleware\ValidatorMiddleware">
      <argument type="service" id="validator"/>
    </service>
    <service id="tactician.commandbus.default.handler.service_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Eurega\ShoppingList\Application\Query\Usuario\SearchUsuarioParticularByCriteriaQueryHandler" type="service_closure" id="Eurega\ShoppingList\Application\Query\Usuario\SearchUsuarioParticularByCriteriaQueryHandler"/>
        <argument key="Eurega\ShoppingList\Application\Command\Usuario\CrearUsuarioParticularCommandHandler" type="service_closure" id="Eurega\ShoppingList\Application\Command\Usuario\CrearUsuarioParticularCommandHandler"/>
      </argument>
    </service>
    <service id="tactician.commandbus.default.handler.locator" class="League\Tactician\Container\ContainerLocator">
      <argument type="service" id="tactician.commandbus.default.handler.service_locator"/>
      <argument type="collection">
        <argument key="Eurega\ShoppingList\Application\Query\Usuario\SearchUsuarioParticularByCriteriaQuery">Eurega\ShoppingList\Application\Query\Usuario\SearchUsuarioParticularByCriteriaQueryHandler</argument>
        <argument key="Eurega\ShoppingList\Application\Command\Usuario\CrearUsuarioParticularCommand">Eurega\ShoppingList\Application\Command\Usuario\CrearUsuarioParticularCommandHandler</argument>
      </argument>
    </service>
    <service id="tactician.commandbus.default.middleware.command_handler" class="League\Tactician\Handler\CommandHandlerMiddleware">
      <argument type="service" id="tactician.handler.command_name_extractor.class_name"/>
      <argument type="service" id="tactician.commandbus.default.handler.locator"/>
      <argument type="service" id="tactician.handler.method_name_inflector.handle"/>
    </service>
    <service id="tactician.commandbus.default" class="League\Tactician\CommandBus" public="true">
      <argument type="collection">
        <argument type="service" id="tactician.commandbus.default.middleware.command_handler"/>
      </argument>
    </service>
    <service id="logger" class="Symfony\Component\HttpKernel\Log\Logger">
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="request_stack"/>
      <argument>%env(bool:default::key:web:default:kernel.runtime_mode:)%</argument>
    </service>
    <service id=".service_locator.ILdUWIS" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translation.loader.php" type="service_closure" id="translation.loader.php"/>
        <argument key="translation.loader.yml" type="service_closure" id="translation.loader.yml"/>
        <argument key="translation.loader.xliff" type="service_closure" id="translation.loader.xliff"/>
        <argument key="translation.loader.po" type="service_closure" id="translation.loader.po"/>
        <argument key="translation.loader.mo" type="service_closure" id="translation.loader.mo"/>
        <argument key="translation.loader.qt" type="service_closure" id="translation.loader.qt"/>
        <argument key="translation.loader.csv" type="service_closure" id="translation.loader.csv"/>
        <argument key="translation.loader.res" type="service_closure" id="translation.loader.res"/>
        <argument key="translation.loader.dat" type="service_closure" id="translation.loader.dat"/>
        <argument key="translation.loader.ini" type="service_closure" id="translation.loader.ini"/>
        <argument key="translation.loader.json" type="service_closure" id="translation.loader.json"/>
      </argument>
    </service>
    <service id=".service_locator.DMfgFyO" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translator" type="service_closure" id="translator.default"/>
      </argument>
    </service>
    <service id=".service_locator.DMfgFyO.translation.warmer" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="translation.warmer"/>
      <argument>translation.warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.DMfgFyO" method="withContext"/>
    </service>
    <service id=".service_locator.JI6krIU" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="routing.loader" type="service_closure" id="routing.loader"/>
      </argument>
    </service>
    <service id=".service_locator.JI6krIU.router.default" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="router.default"/>
      <argument>router.default</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.JI6krIU" method="withContext"/>
    </service>
    <service id=".service_locator.YAcX0.U" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="router" type="service_closure" id="router.default"/>
      </argument>
    </service>
    <service id=".service_locator.YAcX0.U.router.cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="router.cache_warmer"/>
      <argument>router.cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YAcX0.U" method="withContext"/>
    </service>
    <service id=".service_locator.EQoaKwO" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestPayloadValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.request_payload"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\QueryParameterValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.query_parameter_value_resolver"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\BackedEnumValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.backed_enum_resolver"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DateTimeValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.datetime"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.request_attribute"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.request"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.session"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.service"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.default"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.variadic"/>
        <argument key="argument_resolver.not_tagged_controller" type="service_closure" id=".debug.value_resolver.argument_resolver.not_tagged_controller"/>
      </argument>
    </service>
    <service id=".service_locator.NLcq8cs" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="reverse_container" type="service_closure" id="reverse_container" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id=".service_locator.jkL9kAz" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cache.app" type="service_closure" id="cache.app.taggable"/>
      </argument>
    </service>
    <service id=".service_locator.h7gfyOW" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="event_dispatcher" type="service_closure" id="debug.event_dispatcher"/>
      </argument>
    </service>
    <service id=".service_locator.9KL.ETR" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="kernel" type="service_closure" id="kernel"/>
      </argument>
    </service>
    <service id=".service_locator.nvIJVVC" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="env" type="service_closure" id="container.getenv"/>
        <argument key="service" type="service_closure" id="container.get_routing_condition_service"/>
      </argument>
    </service>
    <service id=".service_locator.bvmE8RF" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="ReflectionType" type="service_closure" id="type_info.resolver.reflection_type"/>
        <argument key="ReflectionParameter" type="service_closure" id="type_info.resolver.reflection_parameter"/>
        <argument key="ReflectionProperty" type="service_closure" id="type_info.resolver.reflection_property"/>
        <argument key="ReflectionFunctionAbstract" type="service_closure" id="type_info.resolver.reflection_return"/>
        <argument key="string" type="service_closure" id="type_info.resolver.string"/>
      </argument>
    </service>
    <service id=".service_locator.TwypoFh" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="browser" type="service_closure" id="notifier.channel.browser"/>
        <argument key="chat" type="service_closure" id="notifier.channel.chat"/>
        <argument key="sms" type="service_closure" id="notifier.channel.sms"/>
        <argument key="email" type="service_closure" id="notifier.channel.email"/>
        <argument key="push" type="service_closure" id="notifier.channel.push"/>
      </argument>
    </service>
    <service id="http_client.uri_template.inner" class="Symfony\Contracts\HttpClient\HttpClientInterface">
      <argument type="collection">
        <argument type="service" id="http_client.transport"/>
      </argument>
      <factory function="current"/>
    </service>
    <service id="asset_mapper.cached_mapped_asset_factory.inner" class="Symfony\Component\AssetMapper\Factory\MappedAssetFactory">
      <argument type="service" id="asset_mapper.public_assets_path_resolver"/>
      <argument type="service" id="asset_mapper_compiler"/>
      <argument>C:\Users\mfarres\Desktop\projects\eurega\projects\mealmoti_symfony_backend\mealback\apps\shoppinglist\backend/assets/vendor</argument>
    </service>
    <service id="asset_mapper.asset_package.inner" class="Symfony\Component\Asset\PathPackage">
      <argument></argument>
      <argument type="service" id="assets.empty_version_strategy"/>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="debug.event_dispatcher.inner" class="Symfony\Component\EventDispatcher\EventDispatcher"/>
    <service id="debug.controller_resolver.inner" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver">
      <argument type="service" id="service_container"/>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <call method="allowControllers">
        <argument type="collection">
          <argument>Symfony\Bundle\FrameworkBundle\Controller\AbstractController</argument>
          <argument>Symfony\Bundle\FrameworkBundle\Controller\TemplateController</argument>
        </argument>
      </call>
      <call method="allowControllers">
        <argument type="collection">
          <argument>App\ShoppingList\Backend\ShoppingListBackendKernel</argument>
          <argument>App\ShoppingList\Backend\Controller\HealthCheckGetController</argument>
          <argument>App\ShoppingList\Backend\Controller\Usuario\UsuarioParticularGetController</argument>
          <argument>App\ShoppingList\Backend\Controller\Usuario\UsuarioParticularPostController</argument>
          <argument>App\ShoppingList\Backend\Controller\Usuario\UsuarioParticularPutController</argument>
        </argument>
      </call>
    </service>
    <service id="debug.argument_resolver.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver">
      <argument type="service" id="argument_metadata_factory"/>
      <argument type="iterator">
        <argument type="service" id=".debug.value_resolver.argument_resolver.backed_enum_resolver"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.datetime"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.request_attribute"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.request"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.session"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.service"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.default"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.variadic"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.not_tagged_controller"/>
      </argument>
      <argument type="service" id=".service_locator.EQoaKwO"/>
    </service>
    <service id=".errored..service_locator.4wc4Ag1.Symfony\Component\Config\Loader\LoaderInterface" class="Symfony\Component\Config\Loader\LoaderInterface">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.4wc4Ag1&quot;: it needs an instance of &quot;Symfony\Component\Config\Loader\LoaderInterface&quot; but this type has been excluded from autowiring."/>
    </service>
    <service id=".console.command.about.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>about</argument>
      <argument type="collection"/>
      <argument>Display information about the current project</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.about"/>
    </service>
    <service id=".console.command.assets_install.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>assets:install</argument>
      <argument type="collection"/>
      <argument>Install bundle's web assets under a public directory</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.assets_install"/>
    </service>
    <service id=".console.command.cache_clear.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:clear</argument>
      <argument type="collection"/>
      <argument>Clear the cache</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_clear"/>
    </service>
    <service id=".console.command.cache_pool_clear.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:clear</argument>
      <argument type="collection"/>
      <argument>Clear cache pools</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_clear"/>
    </service>
    <service id=".console.command.cache_pool_prune.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:prune</argument>
      <argument type="collection"/>
      <argument>Prune cache pools</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_prune"/>
    </service>
    <service id=".console.command.cache_pool_invalidate_tags.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:invalidate-tags</argument>
      <argument type="collection"/>
      <argument>Invalidate cache tags for all or a specific pool</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_invalidate_tags"/>
    </service>
    <service id=".console.command.cache_pool_delete.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:delete</argument>
      <argument type="collection"/>
      <argument>Delete an item from a cache pool</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_delete"/>
    </service>
    <service id=".console.command.cache_pool_list.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:list</argument>
      <argument type="collection"/>
      <argument>List available cache pools</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_list"/>
    </service>
    <service id=".console.command.cache_warmup.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:warmup</argument>
      <argument type="collection"/>
      <argument>Warm up an empty cache</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_warmup"/>
    </service>
    <service id=".console.command.config_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:config</argument>
      <argument type="collection"/>
      <argument>Dump the current configuration for an extension</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.config_debug"/>
    </service>
    <service id=".console.command.config_dump_reference.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>config:dump-reference</argument>
      <argument type="collection"/>
      <argument>Dump the default configuration for an extension</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.config_dump_reference"/>
    </service>
    <service id=".console.command.container_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:container</argument>
      <argument type="collection"/>
      <argument>Display current services for an application</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.container_debug"/>
    </service>
    <service id=".console.command.container_lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:container</argument>
      <argument type="collection"/>
      <argument>Ensure that arguments injected into services match type declarations</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.container_lint"/>
    </service>
    <service id=".console.command.debug_autowiring.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:autowiring</argument>
      <argument type="collection"/>
      <argument>List classes/interfaces you can use for autowiring</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.debug_autowiring"/>
    </service>
    <service id=".console.command.dotenv_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:dotenv</argument>
      <argument type="collection"/>
      <argument>List all dotenv files with variables and values</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.dotenv_debug"/>
    </service>
    <service id=".console.command.event_dispatcher_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:event-dispatcher</argument>
      <argument type="collection"/>
      <argument>Display configured listeners for an application</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.event_dispatcher_debug"/>
    </service>
    <service id=".console.command.messenger_consume_messages.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:consume</argument>
      <argument type="collection"/>
      <argument>Consume messages</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_consume_messages"/>
    </service>
    <service id=".console.command.messenger_setup_transports.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:setup-transports</argument>
      <argument type="collection"/>
      <argument>Prepare the required infrastructure for the transport</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_setup_transports"/>
    </service>
    <service id=".console.command.messenger_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:messenger</argument>
      <argument type="collection"/>
      <argument>List messages you can dispatch using the message buses</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_debug"/>
    </service>
    <service id=".console.command.messenger_stop_workers.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:stop-workers</argument>
      <argument type="collection"/>
      <argument>Stop workers after their current message</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_stop_workers"/>
    </service>
    <service id=".console.command.messenger_stats.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:stats</argument>
      <argument type="collection"/>
      <argument>Show the message count for one or more transports</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_stats"/>
    </service>
    <service id=".console.command.router_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:router</argument>
      <argument type="collection"/>
      <argument>Display current routes for an application</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.router_debug"/>
    </service>
    <service id=".console.command.router_match.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>router:match</argument>
      <argument type="collection"/>
      <argument>Help debug routes by simulating a path info match</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.router_match"/>
    </service>
    <service id=".console.command.serializer_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:serializer</argument>
      <argument type="collection"/>
      <argument>Display serialization information for classes</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.serializer_debug"/>
    </service>
    <service id=".console.command.translation_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:translation</argument>
      <argument type="collection"/>
      <argument>Display translation messages information</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.translation_debug"/>
    </service>
    <service id=".console.command.translation_extract.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>translation:extract</argument>
      <argument type="collection"/>
      <argument>Extract missing translations keys from code to translation files</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.translation_extract"/>
    </service>
    <service id=".console.command.validator_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:validator</argument>
      <argument type="collection"/>
      <argument>Display validation constraints for classes</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.validator_debug"/>
    </service>
    <service id=".console.command.translation_pull.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>translation:pull</argument>
      <argument type="collection"/>
      <argument>Pull translations from a given provider.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.translation_pull"/>
    </service>
    <service id=".console.command.translation_push.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>translation:push</argument>
      <argument type="collection"/>
      <argument>Push translations to a given provider.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.translation_push"/>
    </service>
    <service id=".console.command.xliff_lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:xliff</argument>
      <argument type="collection"/>
      <argument>Lint an XLIFF file and outputs encountered errors</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.xliff_lint"/>
    </service>
    <service id=".console.command.yaml_lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:yaml</argument>
      <argument type="collection"/>
      <argument>Lint a YAML file and outputs encountered errors</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.yaml_lint"/>
    </service>
    <service id=".console.command.form_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:form</argument>
      <argument type="collection"/>
      <argument>Display form type information</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.form_debug"/>
    </service>
    <service id=".console.command.secrets_set.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:set</argument>
      <argument type="collection"/>
      <argument>Set a secret in the vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_set"/>
    </service>
    <service id=".console.command.secrets_remove.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:remove</argument>
      <argument type="collection"/>
      <argument>Remove a secret from the vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_remove"/>
    </service>
    <service id=".console.command.secrets_generate_key.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:generate-keys</argument>
      <argument type="collection"/>
      <argument>Generate new encryption keys</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_generate_key"/>
    </service>
    <service id=".console.command.secrets_list.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:list</argument>
      <argument type="collection"/>
      <argument>List all secrets</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_list"/>
    </service>
    <service id=".console.command.secrets_reveal.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:reveal</argument>
      <argument type="collection"/>
      <argument>Reveal the value of a secret</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_reveal"/>
    </service>
    <service id=".console.command.secrets_decrypt_to_local.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:decrypt-to-local</argument>
      <argument type="collection"/>
      <argument>Decrypt all secrets and stores them in the local vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_decrypt_to_local"/>
    </service>
    <service id=".console.command.secrets_encrypt_from_local.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:encrypt-from-local</argument>
      <argument type="collection"/>
      <argument>Encrypt all local secrets to the vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_encrypt_from_local"/>
    </service>
    <service id=".asset_mapper.command.compile.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>asset-map:compile</argument>
      <argument type="collection"/>
      <argument>Compile all mapped assets and writes them to the final public output directory</argument>
      <argument>false</argument>
      <argument type="service_closure" id="asset_mapper.command.compile"/>
    </service>
    <service id=".asset_mapper.command.debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:asset-map</argument>
      <argument type="collection"/>
      <argument>Output all mapped assets</argument>
      <argument>false</argument>
      <argument type="service_closure" id="asset_mapper.command.debug"/>
    </service>
    <service id=".asset_mapper.importmap.command.require.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>importmap:require</argument>
      <argument type="collection"/>
      <argument>Require JavaScript packages</argument>
      <argument>false</argument>
      <argument type="service_closure" id="asset_mapper.importmap.command.require"/>
    </service>
    <service id=".asset_mapper.importmap.command.remove.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>importmap:remove</argument>
      <argument type="collection"/>
      <argument>Remove JavaScript packages</argument>
      <argument>false</argument>
      <argument type="service_closure" id="asset_mapper.importmap.command.remove"/>
    </service>
    <service id=".asset_mapper.importmap.command.update.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>importmap:update</argument>
      <argument type="collection"/>
      <argument>Update JavaScript packages to their latest versions</argument>
      <argument>false</argument>
      <argument type="service_closure" id="asset_mapper.importmap.command.update"/>
    </service>
    <service id=".asset_mapper.importmap.command.install.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>importmap:install</argument>
      <argument type="collection"/>
      <argument>Download all assets that should be downloaded</argument>
      <argument>false</argument>
      <argument type="service_closure" id="asset_mapper.importmap.command.install"/>
    </service>
    <service id=".asset_mapper.importmap.command.audit.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>importmap:audit</argument>
      <argument type="collection"/>
      <argument>Check for security vulnerability advisories for dependencies</argument>
      <argument>false</argument>
      <argument type="service_closure" id="asset_mapper.importmap.command.audit"/>
    </service>
    <service id=".asset_mapper.importmap.command.outdated.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>importmap:outdated</argument>
      <argument type="collection"/>
      <argument>List outdated JavaScript packages and their latest versions</argument>
      <argument>false</argument>
      <argument type="service_closure" id="asset_mapper.importmap.command.outdated"/>
    </service>
    <service id=".console.command.mailer_test.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>mailer:test</argument>
      <argument type="collection"/>
      <argument>Test Mailer transports by sending an email</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.mailer_test"/>
    </service>
    <service id="console.command_loader" class="Symfony\Component\Console\CommandLoader\ContainerCommandLoader" public="true">
      <tag name="container.no_preload"/>
      <argument type="service" id=".service_locator.eCZ.8JL"/>
      <argument type="collection">
        <argument key="about">console.command.about</argument>
        <argument key="assets:install">console.command.assets_install</argument>
        <argument key="cache:clear">console.command.cache_clear</argument>
        <argument key="cache:pool:clear">console.command.cache_pool_clear</argument>
        <argument key="cache:pool:prune">console.command.cache_pool_prune</argument>
        <argument key="cache:pool:invalidate-tags">console.command.cache_pool_invalidate_tags</argument>
        <argument key="cache:pool:delete">console.command.cache_pool_delete</argument>
        <argument key="cache:pool:list">console.command.cache_pool_list</argument>
        <argument key="cache:warmup">console.command.cache_warmup</argument>
        <argument key="debug:config">console.command.config_debug</argument>
        <argument key="config:dump-reference">console.command.config_dump_reference</argument>
        <argument key="debug:container">console.command.container_debug</argument>
        <argument key="lint:container">console.command.container_lint</argument>
        <argument key="debug:autowiring">console.command.debug_autowiring</argument>
        <argument key="debug:dotenv">console.command.dotenv_debug</argument>
        <argument key="debug:event-dispatcher">console.command.event_dispatcher_debug</argument>
        <argument key="messenger:consume">console.command.messenger_consume_messages</argument>
        <argument key="messenger:setup-transports">console.command.messenger_setup_transports</argument>
        <argument key="debug:messenger">console.command.messenger_debug</argument>
        <argument key="messenger:stop-workers">console.command.messenger_stop_workers</argument>
        <argument key="messenger:stats">console.command.messenger_stats</argument>
        <argument key="debug:router">console.command.router_debug</argument>
        <argument key="router:match">console.command.router_match</argument>
        <argument key="debug:serializer">console.command.serializer_debug</argument>
        <argument key="debug:translation">console.command.translation_debug</argument>
        <argument key="translation:extract">console.command.translation_extract</argument>
        <argument key="debug:validator">console.command.validator_debug</argument>
        <argument key="translation:pull">console.command.translation_pull</argument>
        <argument key="translation:push">console.command.translation_push</argument>
        <argument key="lint:xliff">console.command.xliff_lint</argument>
        <argument key="lint:yaml">console.command.yaml_lint</argument>
        <argument key="debug:form">console.command.form_debug</argument>
        <argument key="secrets:set">console.command.secrets_set</argument>
        <argument key="secrets:remove">console.command.secrets_remove</argument>
        <argument key="secrets:generate-keys">console.command.secrets_generate_key</argument>
        <argument key="secrets:list">console.command.secrets_list</argument>
        <argument key="secrets:reveal">console.command.secrets_reveal</argument>
        <argument key="secrets:decrypt-to-local">console.command.secrets_decrypt_to_local</argument>
        <argument key="secrets:encrypt-from-local">console.command.secrets_encrypt_from_local</argument>
        <argument key="asset-map:compile">asset_mapper.command.compile</argument>
        <argument key="debug:asset-map">asset_mapper.command.debug</argument>
        <argument key="importmap:require">asset_mapper.importmap.command.require</argument>
        <argument key="importmap:remove">asset_mapper.importmap.command.remove</argument>
        <argument key="importmap:update">asset_mapper.importmap.command.update</argument>
        <argument key="importmap:install">asset_mapper.importmap.command.install</argument>
        <argument key="importmap:audit">asset_mapper.importmap.command.audit</argument>
        <argument key="importmap:outdated">asset_mapper.importmap.command.outdated</argument>
        <argument key="mailer:test">console.command.mailer_test</argument>
      </argument>
    </service>
    <service id=".service_locator.eCZ.8JL" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="console.command.about" type="service_closure" id=".console.command.about.lazy"/>
        <argument key="console.command.assets_install" type="service_closure" id=".console.command.assets_install.lazy"/>
        <argument key="console.command.cache_clear" type="service_closure" id=".console.command.cache_clear.lazy"/>
        <argument key="console.command.cache_pool_clear" type="service_closure" id=".console.command.cache_pool_clear.lazy"/>
        <argument key="console.command.cache_pool_prune" type="service_closure" id=".console.command.cache_pool_prune.lazy"/>
        <argument key="console.command.cache_pool_invalidate_tags" type="service_closure" id=".console.command.cache_pool_invalidate_tags.lazy"/>
        <argument key="console.command.cache_pool_delete" type="service_closure" id=".console.command.cache_pool_delete.lazy"/>
        <argument key="console.command.cache_pool_list" type="service_closure" id=".console.command.cache_pool_list.lazy"/>
        <argument key="console.command.cache_warmup" type="service_closure" id=".console.command.cache_warmup.lazy"/>
        <argument key="console.command.config_debug" type="service_closure" id=".console.command.config_debug.lazy"/>
        <argument key="console.command.config_dump_reference" type="service_closure" id=".console.command.config_dump_reference.lazy"/>
        <argument key="console.command.container_debug" type="service_closure" id=".console.command.container_debug.lazy"/>
        <argument key="console.command.container_lint" type="service_closure" id=".console.command.container_lint.lazy"/>
        <argument key="console.command.debug_autowiring" type="service_closure" id=".console.command.debug_autowiring.lazy"/>
        <argument key="console.command.dotenv_debug" type="service_closure" id=".console.command.dotenv_debug.lazy"/>
        <argument key="console.command.event_dispatcher_debug" type="service_closure" id=".console.command.event_dispatcher_debug.lazy"/>
        <argument key="console.command.messenger_consume_messages" type="service_closure" id=".console.command.messenger_consume_messages.lazy"/>
        <argument key="console.command.messenger_setup_transports" type="service_closure" id=".console.command.messenger_setup_transports.lazy"/>
        <argument key="console.command.messenger_debug" type="service_closure" id=".console.command.messenger_debug.lazy"/>
        <argument key="console.command.messenger_stop_workers" type="service_closure" id=".console.command.messenger_stop_workers.lazy"/>
        <argument key="console.command.messenger_stats" type="service_closure" id=".console.command.messenger_stats.lazy"/>
        <argument key="console.command.router_debug" type="service_closure" id=".console.command.router_debug.lazy"/>
        <argument key="console.command.router_match" type="service_closure" id=".console.command.router_match.lazy"/>
        <argument key="console.command.serializer_debug" type="service_closure" id=".console.command.serializer_debug.lazy"/>
        <argument key="console.command.translation_debug" type="service_closure" id=".console.command.translation_debug.lazy"/>
        <argument key="console.command.translation_extract" type="service_closure" id=".console.command.translation_extract.lazy"/>
        <argument key="console.command.validator_debug" type="service_closure" id=".console.command.validator_debug.lazy"/>
        <argument key="console.command.translation_pull" type="service_closure" id=".console.command.translation_pull.lazy"/>
        <argument key="console.command.translation_push" type="service_closure" id=".console.command.translation_push.lazy"/>
        <argument key="console.command.xliff_lint" type="service_closure" id=".console.command.xliff_lint.lazy"/>
        <argument key="console.command.yaml_lint" type="service_closure" id=".console.command.yaml_lint.lazy"/>
        <argument key="console.command.form_debug" type="service_closure" id=".console.command.form_debug.lazy"/>
        <argument key="console.command.secrets_set" type="service_closure" id=".console.command.secrets_set.lazy"/>
        <argument key="console.command.secrets_remove" type="service_closure" id=".console.command.secrets_remove.lazy"/>
        <argument key="console.command.secrets_generate_key" type="service_closure" id=".console.command.secrets_generate_key.lazy"/>
        <argument key="console.command.secrets_list" type="service_closure" id=".console.command.secrets_list.lazy"/>
        <argument key="console.command.secrets_reveal" type="service_closure" id=".console.command.secrets_reveal.lazy"/>
        <argument key="console.command.secrets_decrypt_to_local" type="service_closure" id=".console.command.secrets_decrypt_to_local.lazy"/>
        <argument key="console.command.secrets_encrypt_from_local" type="service_closure" id=".console.command.secrets_encrypt_from_local.lazy"/>
        <argument key="asset_mapper.command.compile" type="service_closure" id=".asset_mapper.command.compile.lazy"/>
        <argument key="asset_mapper.command.debug" type="service_closure" id=".asset_mapper.command.debug.lazy"/>
        <argument key="asset_mapper.importmap.command.require" type="service_closure" id=".asset_mapper.importmap.command.require.lazy"/>
        <argument key="asset_mapper.importmap.command.remove" type="service_closure" id=".asset_mapper.importmap.command.remove.lazy"/>
        <argument key="asset_mapper.importmap.command.update" type="service_closure" id=".asset_mapper.importmap.command.update.lazy"/>
        <argument key="asset_mapper.importmap.command.install" type="service_closure" id=".asset_mapper.importmap.command.install.lazy"/>
        <argument key="asset_mapper.importmap.command.audit" type="service_closure" id=".asset_mapper.importmap.command.audit.lazy"/>
        <argument key="asset_mapper.importmap.command.outdated" type="service_closure" id=".asset_mapper.importmap.command.outdated.lazy"/>
        <argument key="console.command.mailer_test" type="service_closure" id=".console.command.mailer_test.lazy"/>
      </argument>
    </service>
    <service id="Eurega\ShoppingList\Domain\Repository\Usuario\UsuarioParticularReadRepository" alias="Tests\Shared\Infrastructure\Repository\UsuarioParticularReadRepository"/>
    <service id="Eurega\ShoppingList\Domain\Repository\Usuario\UsuarioParticularWriteRepository" alias="Tests\Shared\Infrastructure\Repository\MysqlUsuarioParticularWriteRepository"/>
    <service id="Eurega\Shared\Domain\Bus\Event\EventBus" alias="Eurega\Shared\Infrastructure\Bus\Event\InMemory\InMemorySymfonyEventBus"/>
    <service id="Eurega\Shared\Infrastructure\PhpUnit\EnvironmentArranger" alias="Eurega\Shared\Infrastructure\PhpUnit\MoocEnvironmentArranger"/>
    <service id="Eurega\Shared\Domain\RandomNumberGenerator" alias="App\ShoppingList\Backend\Test\ConstantRandomNumberGenerator"/>
    <service id="Eurega\Shared\Domain\Bus\Command\CommandBusRead" alias="Eurega\Shared\Infrastructure\Bus\Command\Tactician\TacticianCommandBusRead"/>
    <service id="Eurega\Shared\Domain\Bus\Command\CommandBusWrite" alias="Eurega\Shared\Infrastructure\Bus\Command\Tactician\TacticianCommandBusWrite"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface" alias="parameter_bag"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface" alias="parameter_bag"/>
    <service id="Symfony\Component\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher"/>
    <service id="Symfony\Contracts\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher"/>
    <service id="Psr\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher"/>
    <service id="Symfony\Component\HttpKernel\HttpKernelInterface" alias="http_kernel"/>
    <service id="Symfony\Component\HttpFoundation\RequestStack" alias="request_stack"/>
    <service id="Symfony\Component\HttpKernel\HttpCache\StoreInterface" alias="http_cache.store"/>
    <service id="Symfony\Component\HttpFoundation\UrlHelper" alias="url_helper"/>
    <service id="Symfony\Component\HttpKernel\KernelInterface" alias="kernel"/>
    <service id="Symfony\Component\Filesystem\Filesystem" alias="filesystem"/>
    <service id="Symfony\Component\HttpKernel\Config\FileLocator" alias="file_locator"/>
    <service id="Symfony\Component\HttpFoundation\UriSigner" alias="uri_signer"/>
    <service id="Symfony\Component\DependencyInjection\ReverseContainer" alias="reverse_container"/>
    <service id="Symfony\Component\String\Slugger\SluggerInterface" alias="slugger"/>
    <service id="Symfony\Component\Clock\ClockInterface" alias="clock"/>
    <service id="Psr\Clock\ClockInterface" alias="clock"/>
    <service id="Symfony\Component\HttpKernel\Fragment\FragmentUriGeneratorInterface" alias="fragment.uri_generator"/>
    <service id="error_renderer.html" alias="error_handler.error_renderer.html"/>
    <service id="error_renderer" alias="error_handler.error_renderer.serializer"/>
    <service id=".Psr\Container\ContainerInterface $parameter_bag" alias="parameter_bag"/>
    <service id="Psr\Container\ContainerInterface $parameterBag" alias="parameter_bag"/>
    <service id="cache.app_clearer" alias="cache.default_clearer" public="true"/>
    <service id="Psr\Cache\CacheItemPoolInterface" alias="cache.app"/>
    <service id="Symfony\Contracts\Cache\CacheInterface" alias="cache.app"/>
    <service id="Symfony\Contracts\Cache\TagAwareCacheInterface" alias="cache.app.taggable"/>
    <service id="Symfony\Contracts\Translation\TranslatorInterface" alias="translator.default"/>
    <service id="Symfony\Component\Asset\Packages" alias="assets.packages"/>
    <service id="Symfony\Component\AssetMapper\AssetMapperInterface" alias="asset_mapper"/>
    <service id="asset_mapper.http_client" alias="http_client.uri_template"/>
    <service id="Symfony\Component\AssetMapper\ImportMap\ImportMapManager" alias="asset_mapper.importmap.manager"/>
    <service id="Symfony\Contracts\HttpClient\HttpClientInterface" alias="http_client.uri_template"/>
    <service id="mailer" alias="mailer.mailer"/>
    <service id="Symfony\Component\Mailer\MailerInterface" alias="mailer.mailer"/>
    <service id="Symfony\Component\Mailer\Transport\TransportInterface" alias="mailer.default_transport"/>
    <service id="Symfony\Component\Translation\Reader\TranslationReaderInterface" alias="translation.reader"/>
    <service id="Symfony\Component\Translation\Extractor\ExtractorInterface" alias="translation.extractor"/>
    <service id="Symfony\Component\Translation\Writer\TranslationWriterInterface" alias="translation.writer"/>
    <service id="Symfony\Contracts\Translation\LocaleAwareInterface" alias="translation.locale_switcher"/>
    <service id="Symfony\Component\Translation\LocaleSwitcher" alias="translation.locale_switcher"/>
    <service id="translator" alias="translator.default" public="true"/>
    <service id="translator.formatter" alias="translator.formatter.default"/>
    <service id="Symfony\Component\ErrorHandler\ErrorRenderer\FileLinkFormatter" alias="debug.file_link_formatter"/>
    <service id="Symfony\Component\Stopwatch\Stopwatch" alias="debug.stopwatch"/>
    <service id="router" alias="router.default" public="true"/>
    <service id="Symfony\Component\Routing\RouterInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\Generator\UrlGeneratorInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\Matcher\UrlMatcherInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\RequestContextAwareInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\RequestContext" alias="router.request_context"/>
    <service id="Symfony\Component\PropertyAccess\PropertyAccessorInterface" alias="property_accessor"/>
    <service id="Symfony\Component\Serializer\SerializerInterface" alias="serializer"/>
    <service id="Symfony\Component\Serializer\Normalizer\NormalizerInterface" alias="serializer"/>
    <service id="Symfony\Component\Serializer\Normalizer\DenormalizerInterface" alias="serializer"/>
    <service id="Symfony\Component\Serializer\Encoder\EncoderInterface" alias="serializer"/>
    <service id="Symfony\Component\Serializer\Encoder\DecoderInterface" alias="serializer"/>
    <service id="serializer.property_accessor" alias="property_accessor"/>
    <service id="Symfony\Component\Serializer\Mapping\ClassDiscriminatorResolverInterface" alias="serializer.mapping.class_discriminator_resolver"/>
    <service id="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactoryInterface" alias="serializer.mapping.class_metadata_factory"/>
    <service id="error_renderer.serializer" alias="error_handler.error_renderer.serializer"/>
    <service id="Symfony\Component\TypeInfo\TypeResolver\TypeResolverInterface" alias="type_info.resolver"/>
    <service id="Symfony\Component\PropertyInfo\PropertyAccessExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyDescriptionExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInfoExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyTypeExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyListExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInitializableExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyReadInfoExtractorInterface" alias="property_info.reflection_extractor"/>
    <service id="Symfony\Component\PropertyInfo\PropertyWriteInfoExtractorInterface" alias="property_info.reflection_extractor"/>
    <service id="Symfony\Component\WebLink\HttpHeaderSerializer" alias="web_link.http_header_serializer"/>
    <service id="cache.default_redis_provider" alias=".cache_connection.MfCypIA"/>
    <service id="cache.default_memcached_provider" alias=".cache_connection.8kvDmRs"/>
    <service id="cache.default_doctrine_dbal_provider" alias="database_connection"/>
    <service id="Symfony\Component\Form\ResolvedFormTypeFactoryInterface" alias="form.resolved_type_factory"/>
    <service id="Symfony\Component\Form\FormRegistryInterface" alias="form.registry"/>
    <service id="Symfony\Component\Form\FormFactoryInterface" alias="form.factory"/>
    <service id="form.property_accessor" alias="property_accessor"/>
    <service id="form.choice_list_factory" alias="form.choice_list_factory.cached"/>
    <service id="Symfony\Component\Validator\Validator\ValidatorInterface" alias="validator"/>
    <service id="validator.mapping.class_metadata_factory" alias="validator"/>
    <service id="messenger.default_serializer" alias="messenger.transport.native_php_serializer"/>
    <service id="messenger.default_bus" alias="messenger.bus.default" public="true"/>
    <service id="Symfony\Component\Messenger\MessageBusInterface" alias="messenger.bus.default"/>
    <service id="Symfony\Component\Notifier\NotifierInterface" alias="notifier"/>
    <service id="Symfony\Component\Mime\MimeTypesInterface" alias="mime_types"/>
    <service id="Symfony\Component\Mime\MimeTypeGuesserInterface" alias="mime_types"/>
    <service id="Behat\Mink\Mink" alias="behat.mink"/>
    <service id="Behat\Mink\Session" alias="behat.mink.default_session"/>
    <service id="FriendsOfBehat\SymfonyExtension\Mink\MinkParameters" alias="behat.mink.parameters"/>
    <service id=".Symfony\Component\DependencyInjection\ContainerInterface $driver container" alias="behat.driver.service_container"/>
    <service id="Symfony\Component\DependencyInjection\ContainerInterface $driverContainer" alias="behat.driver.service_container"/>
    <service id="container.env_var_processors_locator" alias=".service_locator.pRu6x_4" public="true"/>
    <service id="argument_resolver.controller_locator" alias=".service_locator.Sr6W89v"/>
    <service id="League\Tactician\CommandBus $defaultBus" alias="tactician.commandbus.default"/>
    <service id="tactician.commandbus" alias="tactician.commandbus.default"/>
    <service id="League\Tactician\CommandBus" alias="tactician.commandbus.default"/>
    <service id="tactician.handler.locator.symfony" alias="tactician.commandbus.default.handler.locator"/>
    <service id="tactician.middleware.command_handler" alias="tactician.commandbus.default.middleware.command_handler"/>
    <service id="Psr\Log\LoggerInterface" alias="logger"/>
    <service id="Symfony\Bundle\FrameworkBundle\KernelBrowser" alias="test.client"/>
    <service id="Symfony\Component\HttpKernel\HttpKernelBrowser" alias="test.client"/>
    <service id=".service_locator.GIuJv7e" alias="messenger.retry_strategy_locator"/>
    <service id=".service_locator.ERljEMM" alias="tactician.commandbus.default.handler.service_locator"/>
    <service id="http_client" alias="http_client.uri_template"/>
    <service id="asset_mapper.mapped_asset_factory" alias="asset_mapper.cached_mapped_asset_factory"/>
    <service id="assets._default_package" alias="asset_mapper.asset_package"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher" public="true"/>
    <service id="controller_resolver" alias="debug.controller_resolver"/>
    <service id="argument_resolver" alias="debug.argument_resolver"/>
    <service id=".service_locator.diNoEIK" alias=".service_locator.4wc4Ag1"/>
    <service id="console.command.public_alias.tactician.command.debug" alias="tactician.command.debug" public="true"/>
  </services>
</container>
